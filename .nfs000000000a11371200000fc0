Thu Aug 5 17:40:55 IDT 2021

SLURM_JOBID:		 148961
SLURM_JOB_NODELIST:	 dt-gpu-02 


/home/amirbial/Computational_Learning/Scratch/train.py
2021-08-05 17:40:58.189375: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
start main
Improve =True
0.9
arrhythmia.csv
13
[17:41:14] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7608695652173914, 'ROC_AUC': 0.8249715399161075, 'PR_AUC': 0.6433684616469407, 'Precision': 0.718013468013468, 'TPR': 0.5118181818181818, 'FPR': 0.03419945415510825, 'inference_time [seconds]': 0.334843345310377, 'train_time [seconds]': 9.964684009552002, 'noise': 0.1, 'drop_rate': 0.15}
[17:41:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6956521739130435, 'ROC_AUC': 0.9247659842005741, 'PR_AUC': 0.6712745370588554, 'Precision': 0.7424242424242423, 'TPR': 0.53, 'FPR': 0.047179588088678996, 'inference_time [seconds]': 0.33418510271155316, 'train_time [seconds]': 6.999365329742432, 'noise': 0.15, 'drop_rate': 0.15}
[17:41:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.8321414120951841, 'PR_AUC': 0.6886544877756113, 'Precision': 0.8689655172413794, 'TPR': 0.5599999999999999, 'FPR': 0.05517421602787457, 'inference_time [seconds]': 0.3299289279513889, 'train_time [seconds]': 7.1997010707855225, 'noise': 0.1, 'drop_rate': 0.15}
[17:41:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7555555555555555, 'ROC_AUC': 0.8617547073522683, 'PR_AUC': 0.6993897157367974, 'Precision': 0.8483333333333334, 'TPR': 0.61, 'FPR': 0.04518794213916165, 'inference_time [seconds]': 0.3310203552246094, 'train_time [seconds]': 7.11443305015564, 'noise': 0.2, 'drop_rate': 0.2}
[17:41:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7111111111111111, 'ROC_AUC': 0.7637033928131489, 'PR_AUC': 0.5088103065748645, 'Precision': 0.7126436781609196, 'TPR': 0.4091666666666667, 'FPR': 0.045253933058811105, 'inference_time [seconds]': 0.3287686241997613, 'train_time [seconds]': 7.046111106872559, 'noise': 0.2, 'drop_rate': 0.2}
[17:41:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7111111111111111, 'ROC_AUC': 0.884324785411853, 'PR_AUC': 0.6447329096682973, 'Precision': 0.8872549019607844, 'TPR': 0.45499999999999996, 'FPR': 0.055058072009291525, 'inference_time [seconds]': 0.3314071231418186, 'train_time [seconds]': 6.9137561321258545, 'noise': 0.2, 'drop_rate': 0.1}
[17:42:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7555555555555555, 'ROC_AUC': 0.8894982549749992, 'PR_AUC': 0.6639025422092076, 'Precision': 0.7246753246753247, 'TPR': 0.43583333333333335, 'FPR': 0.03476207255277022, 'inference_time [seconds]': 0.8760452270507812, 'train_time [seconds]': 7.371501684188843, 'noise': 0.2, 'drop_rate': 0.15}
[17:42:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7111111111111111, 'ROC_AUC': 0.9038150105708246, 'PR_AUC': 0.6955394418503107, 'Precision': 0.748663101604278, 'TPR': 0.51, 'FPR': 0.04912977555683687, 'inference_time [seconds]': 0.33435291714138454, 'train_time [seconds]': 7.556493282318115, 'noise': 0.1, 'drop_rate': 0.2}
[17:42:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7333333333333333, 'ROC_AUC': 0.8513551797040169, 'PR_AUC': 0.7538979940904283, 'Precision': 0.8092691622103387, 'TPR': 0.509090909090909, 'FPR': 0.0473620987891601, 'inference_time [seconds]': 0.3579934438069661, 'train_time [seconds]': 7.452507257461548, 'noise': 0.2, 'drop_rate': 0.2}
[17:42:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7333333333333333, 'ROC_AUC': 0.8995610993657503, 'PR_AUC': 0.700852366998874, 'Precision': 0.7085714285714285, 'TPR': 0.528, 'FPR': 0.044651162790697675, 'inference_time [seconds]': 0.9185579087999132, 'train_time [seconds]': 7.543302059173584, 'noise': 0.2, 'drop_rate': 0.2}
mfeat-karhunen.csv
10
[17:42:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.96, 'ROC_AUC': 0.9955277777777777, 'PR_AUC': 0.9838696744711758, 'Precision': 0.9627489177489178, 'TPR': 0.96, 'FPR': 0.004444444444444444, 'inference_time [seconds]': 0.08714795112609863, 'train_time [seconds]': 9.520134449005127, 'noise': 0.2, 'drop_rate': 0.1}
[17:42:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.985, 'ROC_AUC': 0.9995555555555556, 'PR_AUC': 0.9971356516290729, 'Precision': 0.9857142857142858, 'TPR': 0.985, 'FPR': 0.0016666666666666666, 'inference_time [seconds]': 0.08664131164550781, 'train_time [seconds]': 8.667324781417847, 'noise': 0.1, 'drop_rate': 0.15}
[17:42:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.97, 'ROC_AUC': 0.9963611111111111, 'PR_AUC': 0.9875182763648359, 'Precision': 0.9709523809523809, 'TPR': 0.97, 'FPR': 0.003333333333333333, 'inference_time [seconds]': 0.08672833442687988, 'train_time [seconds]': 8.658084154129028, 'noise': 0.2, 'drop_rate': 0.2}
[17:43:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.935, 'ROC_AUC': 0.9963611111111111, 'PR_AUC': 0.9817435806429049, 'Precision': 0.9368975468975469, 'TPR': 0.9349999999999999, 'FPR': 0.007222222222222222, 'inference_time [seconds]': 0.08695363998413086, 'train_time [seconds]': 8.646416664123535, 'noise': 0.2, 'drop_rate': 0.2}
[17:43:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.96, 'ROC_AUC': 0.9965833333333333, 'PR_AUC': 0.982938187549937, 'Precision': 0.9609273182957393, 'TPR': 0.96, 'FPR': 0.0044444444444444444, 'inference_time [seconds]': 0.08634448051452637, 'train_time [seconds]': 8.640420198440552, 'noise': 0.15, 'drop_rate': 0.1}
[17:43:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.94, 'ROC_AUC': 0.9944722222222223, 'PR_AUC': 0.9810157444620362, 'Precision': 0.9425491718426502, 'TPR': 0.9400000000000001, 'FPR': 0.006666666666666666, 'inference_time [seconds]': 0.0849616527557373, 'train_time [seconds]': 8.572866201400757, 'noise': 0.1, 'drop_rate': 0.2}
[17:43:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9917777777777778, 'PR_AUC': 0.980474168166159, 'Precision': 0.9526708074534159, 'TPR': 0.95, 'FPR': 0.005555555555555556, 'inference_time [seconds]': 0.0857388973236084, 'train_time [seconds]': 8.621782064437866, 'noise': 0.15, 'drop_rate': 0.15}
[17:43:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.935, 'ROC_AUC': 0.9967222222222224, 'PR_AUC': 0.9815595117136471, 'Precision': 0.9357940305308727, 'TPR': 0.9349999999999999, 'FPR': 0.007222222222222223, 'inference_time [seconds]': 0.08499979972839355, 'train_time [seconds]': 8.586463212966919, 'noise': 0.2, 'drop_rate': 0.1}
[17:43:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.97, 'ROC_AUC': 0.9982777777777778, 'PR_AUC': 0.9895031615569481, 'Precision': 0.9706892230576442, 'TPR': 0.97, 'FPR': 0.003333333333333333, 'inference_time [seconds]': 0.08534908294677734, 'train_time [seconds]': 8.571244955062866, 'noise': 0.15, 'drop_rate': 0.15}
[17:44:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.985, 'ROC_AUC': 0.9989166666666666, 'PR_AUC': 0.99524649859944, 'Precision': 0.9857142857142858, 'TPR': 0.985, 'FPR': 0.0016666666666666666, 'inference_time [seconds]': 0.08554816246032715, 'train_time [seconds]': 8.569673538208008, 'noise': 0.1, 'drop_rate': 0.15}
plant-margin.csv
100
[17:44:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7125, 'ROC_AUC': 0.9941563171721998, 'PR_AUC': 0.8423164564903697, 'Precision': 0.7981666666666666, 'TPR': 0.715, 'FPR': 0.002905421542870791, 'inference_time [seconds]': 0.6271541118621826, 'train_time [seconds]': 38.7219455242157, 'noise': 0.1, 'drop_rate': 0.1}
[17:45:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.78125, 'ROC_AUC': 0.9925254756786882, 'PR_AUC': 0.8926525413149733, 'Precision': 0.8291666666666667, 'TPR': 0.795, 'FPR': 0.002210015126184221, 'inference_time [seconds]': 0.6037577986717224, 'train_time [seconds]': 37.901202917099, 'noise': 0.1, 'drop_rate': 0.1}
[17:46:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8, 'ROC_AUC': 0.9945905978823342, 'PR_AUC': 0.9121696310935441, 'Precision': 0.8611666666666667, 'TPR': 0.815, 'FPR': 0.002020937823421702, 'inference_time [seconds]': 0.6139621138572693, 'train_time [seconds]': 39.12535119056702, 'noise': 0.1, 'drop_rate': 0.2}
[17:46:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.79375, 'ROC_AUC': 0.9936143619138604, 'PR_AUC': 0.8928179957297604, 'Precision': 0.85, 'TPR': 0.81, 'FPR': 0.0020834328477032085, 'inference_time [seconds]': 0.6142720580101013, 'train_time [seconds]': 38.125415325164795, 'noise': 0.15, 'drop_rate': 0.1}
[17:47:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.74375, 'ROC_AUC': 0.9951689754000477, 'PR_AUC': 0.8480162337662337, 'Precision': 0.8275, 'TPR': 0.745, 'FPR': 0.0025865775017912583, 'inference_time [seconds]': 0.6127998232841492, 'train_time [seconds]': 39.90485215187073, 'noise': 0.1, 'drop_rate': 0.1}
[17:48:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.675, 'ROC_AUC': 0.9928564604728924, 'PR_AUC': 0.8291245894909687, 'Precision': 0.7665000000000001, 'TPR': 0.69, 'FPR': 0.003283576148395828, 'inference_time [seconds]': 0.6061181426048279, 'train_time [seconds]': 38.34028911590576, 'noise': 0.1, 'drop_rate': 0.15}
[17:48:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7875, 'ROC_AUC': 0.9960261921821512, 'PR_AUC': 0.8596845238095238, 'Precision': 0.84, 'TPR': 0.79, 'FPR': 0.0021451317570257145, 'inference_time [seconds]': 0.6313100457191467, 'train_time [seconds]': 39.37031054496765, 'noise': 0.2, 'drop_rate': 0.1}
[17:49:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.68125, 'ROC_AUC': 0.993251731550036, 'PR_AUC': 0.8081788302277434, 'Precision': 0.7508333333333335, 'TPR': 0.675, 'FPR': 0.0032174986067988213, 'inference_time [seconds]': 0.6098851561546326, 'train_time [seconds]': 40.10560870170593, 'noise': 0.1, 'drop_rate': 0.1}
[17:50:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.75, 'ROC_AUC': 0.9934000079611497, 'PR_AUC': 0.8670330215020615, 'Precision': 0.8461666666666666, 'TPR': 0.765, 'FPR': 0.0025256747074277526, 'inference_time [seconds]': 0.6098106503486633, 'train_time [seconds]': 39.63277721405029, 'noise': 0.2, 'drop_rate': 0.15}
[17:51:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7625, 'ROC_AUC': 0.994507204840379, 'PR_AUC': 0.8585392496392495, 'Precision': 0.8266666666666667, 'TPR': 0.765, 'FPR': 0.0023982963139877397, 'inference_time [seconds]': 0.6189465522766113, 'train_time [seconds]': 37.91277313232422, 'noise': 0.2, 'drop_rate': 0.1}
steel-plates.csv
7
[17:51:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8, 'ROC_AUC': 0.9674901280008202, 'PR_AUC': 0.9058031860768215, 'Precision': 0.871278345714436, 'TPR': 0.8149840097982513, 'FPR': 0.03913109715210328, 'inference_time [seconds]': 0.07536961482121395, 'train_time [seconds]': 7.4989564418792725, 'noise': 0.1, 'drop_rate': 0.1}
[17:51:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.788659793814433, 'ROC_AUC': 0.9547016813659691, 'PR_AUC': 0.8476544810856795, 'Precision': 0.8505447081298474, 'TPR': 0.7665164428210103, 'FPR': 0.04069631614863071, 'inference_time [seconds]': 0.07471841635163297, 'train_time [seconds]': 7.528863906860352, 'noise': 0.2, 'drop_rate': 0.1}
[17:51:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7525773195876289, 'ROC_AUC': 0.9332944255305088, 'PR_AUC': 0.806881420594375, 'Precision': 0.8292427665249965, 'TPR': 0.714603005381257, 'FPR': 0.0495641834493108, 'inference_time [seconds]': 0.4764967357989439, 'train_time [seconds]': 8.199517250061035, 'noise': 0.2, 'drop_rate': 0.15}
[17:51:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8041237113402062, 'ROC_AUC': 0.9682237870458417, 'PR_AUC': 0.8942795289141593, 'Precision': 0.8437154180081655, 'TPR': 0.8266052976873872, 'FPR': 0.038387741905028985, 'inference_time [seconds]': 0.07457462782712326, 'train_time [seconds]': 8.27123737335205, 'noise': 0.2, 'drop_rate': 0.1}
[17:51:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8092783505154639, 'ROC_AUC': 0.9649888408173951, 'PR_AUC': 0.8911023749376851, 'Precision': 0.8813275392222761, 'TPR': 0.8259251745897463, 'FPR': 0.03827436711178273, 'inference_time [seconds]': 0.11814746660055574, 'train_time [seconds]': 8.228291511535645, 'noise': 0.2, 'drop_rate': 0.2}
[17:51:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7938144329896907, 'ROC_AUC': 0.9582037746613207, 'PR_AUC': 0.844396348415852, 'Precision': 0.8457868155236578, 'TPR': 0.8061122956645345, 'FPR': 0.03991839865024709, 'inference_time [seconds]': 0.0747085846576494, 'train_time [seconds]': 8.256021499633789, 'noise': 0.15, 'drop_rate': 0.2}
[17:52:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8144329896907216, 'ROC_AUC': 0.958630161597723, 'PR_AUC': 0.8859267563686875, 'Precision': 0.894202696528278, 'TPR': 0.7651872790592474, 'FPR': 0.03811793476564849, 'inference_time [seconds]': 0.07549880706157881, 'train_time [seconds]': 8.244815587997437, 'noise': 0.1, 'drop_rate': 0.1}
[17:52:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7989690721649485, 'ROC_AUC': 0.9626032959546148, 'PR_AUC': 0.8706820452357505, 'Precision': 0.8757519783899632, 'TPR': 0.8236586827391628, 'FPR': 0.04002330631000187, 'inference_time [seconds]': 0.15184436876749255, 'train_time [seconds]': 8.241141080856323, 'noise': 0.2, 'drop_rate': 0.1}
[17:52:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8402061855670103, 'ROC_AUC': 0.959990419156742, 'PR_AUC': 0.8793811650538403, 'Precision': 0.8868792337230875, 'TPR': 0.8264890166592954, 'FPR': 0.03187271184078846, 'inference_time [seconds]': 0.07489169995809339, 'train_time [seconds]': 8.221668004989624, 'noise': 0.1, 'drop_rate': 0.1}
[17:52:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7938144329896907, 'ROC_AUC': 0.9479026098997563, 'PR_AUC': 0.8332593015659072, 'Precision': 0.8190439333628188, 'TPR': 0.8000011340568617, 'FPR': 0.038548824904667656, 'inference_time [seconds]': 0.07513995023117852, 'train_time [seconds]': 8.253650903701782, 'noise': 0.2, 'drop_rate': 0.15}
bank.csv
2
[17:52:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9205298013245033, 'ROC_AUC': 0.8982075471698114, 'PR_AUC': 0.8199520928497444, 'Precision': 0.8826168224299065, 'TPR': 0.6931132075471698, 'FPR': 0.3068867924528302, 'inference_time [seconds]': 0.032772817885375706, 'train_time [seconds]': 11.807622909545898, 'noise': 0.1, 'drop_rate': 0.1}
[17:52:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8982300884955752, 'ROC_AUC': 0.8625961538461538, 'PR_AUC': 0.7295010144364417, 'Precision': 0.7692757009345794, 'TPR': 0.6329807692307692, 'FPR': 0.36701923076923076, 'inference_time [seconds]': 0.03303152270021692, 'train_time [seconds]': 11.886935472488403, 'noise': 0.1, 'drop_rate': 0.1}
[17:53:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8982300884955752, 'ROC_AUC': 0.8983653846153846, 'PR_AUC': 0.7393775142489153, 'Precision': 0.7622978436657681, 'TPR': 0.6497115384615385, 'FPR': 0.35028846153846155, 'inference_time [seconds]': 0.03264699362020577, 'train_time [seconds]': 11.850834846496582, 'noise': 0.2, 'drop_rate': 0.1}
[17:53:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8938053097345132, 'ROC_AUC': 0.9215384615384615, 'PR_AUC': 0.76034949197418, 'Precision': 0.7583205325140809, 'TPR': 0.5970192307692308, 'FPR': 0.4029807692307692, 'inference_time [seconds]': 0.03380532813283194, 'train_time [seconds]': 11.845351457595825, 'noise': 0.15, 'drop_rate': 0.15}
[17:53:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9092920353982301, 'ROC_AUC': 0.9157692307692307, 'PR_AUC': 0.7781033240775997, 'Precision': 0.8391890398850955, 'TPR': 0.6475961538461539, 'FPR': 0.3524038461538461, 'inference_time [seconds]': 0.03728033167071047, 'train_time [seconds]': 11.866663694381714, 'noise': 0.1, 'drop_rate': 0.1}
[17:53:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9004424778761062, 'ROC_AUC': 0.9115865384615385, 'PR_AUC': 0.7846744463983993, 'Precision': 0.782963413398196, 'TPR': 0.6342307692307692, 'FPR': 0.3657692307692308, 'inference_time [seconds]': 0.053702729993161905, 'train_time [seconds]': 11.772989988327026, 'noise': 0.1, 'drop_rate': 0.2}
[17:53:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9070796460176991, 'ROC_AUC': 0.9381730769230769, 'PR_AUC': 0.8021121471788666, 'Precision': 0.8217758985200846, 'TPR': 0.6463461538461539, 'FPR': 0.35365384615384615, 'inference_time [seconds]': 0.04889163295779608, 'train_time [seconds]': 11.863363265991211, 'noise': 0.15, 'drop_rate': 0.2}
[17:54:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8849557522123894, 'ROC_AUC': 0.8865865384615385, 'PR_AUC': 0.7154138004652726, 'Precision': 0.704225352112676, 'TPR': 0.60875, 'FPR': 0.39125, 'inference_time [seconds]': 0.033905020857279276, 'train_time [seconds]': 11.886825799942017, 'noise': 0.1, 'drop_rate': 0.2}
[17:54:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8871681415929203, 'ROC_AUC': 0.8684134615384616, 'PR_AUC': 0.7165144013373304, 'Precision': 0.7148854650688841, 'TPR': 0.6267307692307692, 'FPR': 0.3732692307692308, 'inference_time [seconds]': 0.03572058888663233, 'train_time [seconds]': 11.86717438697815, 'noise': 0.15, 'drop_rate': 0.1}
[17:54:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9092920353982301, 'ROC_AUC': 0.9346153846153846, 'PR_AUC': 0.7942583669254377, 'Precision': 0.8130283224400872, 'TPR': 0.6726923076923077, 'FPR': 0.3273076923076923, 'inference_time [seconds]': 0.03311591865742101, 'train_time [seconds]': 11.846757411956787, 'noise': 0.15, 'drop_rate': 0.2}
molec-biol-splice.csv
3
[17:54:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9498432601880877, 'ROC_AUC': 0.9881530774092756, 'PR_AUC': 0.9818552990779187, 'Precision': 0.9496767477536707, 'TPR': 0.9399711399711399, 'FPR': 0.02833530106257379, 'inference_time [seconds]': 0.09365141578602566, 'train_time [seconds]': 9.303110599517822, 'noise': 0.1, 'drop_rate': 0.1}
[17:54:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9529780564263323, 'ROC_AUC': 0.9820745829010291, 'PR_AUC': 0.9591789074473048, 'Precision': 0.9476406577855854, 'TPR': 0.9558441558441558, 'FPR': 0.024596615505706413, 'inference_time [seconds]': 0.049157576127485794, 'train_time [seconds]': 9.27375316619873, 'noise': 0.1, 'drop_rate': 0.2}
[17:55:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9717868338557993, 'ROC_AUC': 0.994817120436955, 'PR_AUC': 0.9886459031451399, 'Precision': 0.9657076841287368, 'TPR': 0.9656565656565657, 'FPR': 0.013970877607241245, 'inference_time [seconds]': 0.05210454934816749, 'train_time [seconds]': 9.289565324783325, 'noise': 0.2, 'drop_rate': 0.1}
[17:55:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9717868338557993, 'ROC_AUC': 0.9917808545907719, 'PR_AUC': 0.9859003869489539, 'Precision': 0.9632295415427946, 'TPR': 0.9748917748917748, 'FPR': 0.012396694214876033, 'inference_time [seconds]': 0.04438397278980028, 'train_time [seconds]': 9.277673721313477, 'noise': 0.2, 'drop_rate': 0.15}
[17:55:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9717868338557993, 'ROC_AUC': 0.9869271224643125, 'PR_AUC': 0.9808605879465597, 'Precision': 0.9661325287204331, 'TPR': 0.9725829725829725, 'FPR': 0.013970877607241245, 'inference_time [seconds]': 0.04545797748625465, 'train_time [seconds]': 9.281376838684082, 'noise': 0.15, 'drop_rate': 0.15}
[17:55:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9686520376175548, 'ROC_AUC': 0.9939898788911531, 'PR_AUC': 0.9861568512385794, 'Precision': 0.9623297735363175, 'TPR': 0.968143935962579, 'FPR': 0.015365245509828597, 'inference_time [seconds]': 0.04446020694361959, 'train_time [seconds]': 9.255492210388184, 'noise': 0.1, 'drop_rate': 0.1}
[17:55:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9655172413793104, 'ROC_AUC': 0.9966949100259114, 'PR_AUC': 0.9919147003979326, 'Precision': 0.9597357723577234, 'TPR': 0.9637579710502983, 'FPR': 0.017538226391464656, 'inference_time [seconds]': 0.04538099593877045, 'train_time [seconds]': 9.2501859664917, 'noise': 0.2, 'drop_rate': 0.1}
[17:55:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9435736677115988, 'ROC_AUC': 0.9833222787770212, 'PR_AUC': 0.971953827091887, 'Precision': 0.9361898264337288, 'TPR': 0.9404178573487387, 'FPR': 0.029566810909651076, 'inference_time [seconds]': 0.04457978993000282, 'train_time [seconds]': 9.239679098129272, 'noise': 0.2, 'drop_rate': 0.15}
[17:56:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9404388714733543, 'ROC_AUC': 0.9877906618722566, 'PR_AUC': 0.976792759091803, 'Precision': 0.9321105753504604, 'TPR': 0.9384667858035011, 'FPR': 0.030944221377970635, 'inference_time [seconds]': 0.04418068171294879, 'train_time [seconds]': 9.214173555374146, 'noise': 0.2, 'drop_rate': 0.1}
[17:56:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9686520376175548, 'ROC_AUC': 0.990751734661668, 'PR_AUC': 0.9772750092466431, 'Precision': 0.960671834625323, 'TPR': 0.9751638131473261, 'FPR': 0.013768436327358887, 'inference_time [seconds]': 0.0436522743918679, 'train_time [seconds]': 9.333948373794556, 'noise': 0.1, 'drop_rate': 0.2}
plant-shape.csv
100
[17:56:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55, 'ROC_AUC': 0.9764373855584748, 'PR_AUC': 0.6805092234922835, 'Precision': 0.6583333333333333, 'TPR': 0.55, 'FPR': 0.0045505931056444545, 'inference_time [seconds]': 0.6134867668151855, 'train_time [seconds]': 40.44228219985962, 'noise': 0.15, 'drop_rate': 0.2}
[17:57:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55, 'ROC_AUC': 0.9778594459039885, 'PR_AUC': 0.7012568722903291, 'Precision': 0.6901666666666667, 'TPR': 0.57, 'FPR': 0.0045450203009314545, 'inference_time [seconds]': 0.6301701068878174, 'train_time [seconds]': 38.33018398284912, 'noise': 0.2, 'drop_rate': 0.1}
[17:58:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.58125, 'ROC_AUC': 0.9742522490247592, 'PR_AUC': 0.6935042204088125, 'Precision': 0.6775, 'TPR': 0.58, 'FPR': 0.004228564604728923, 'inference_time [seconds]': 0.6195828318595886, 'train_time [seconds]': 41.69372773170471, 'noise': 0.15, 'drop_rate': 0.15}
[17:59:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55625, 'ROC_AUC': 0.9806601783297509, 'PR_AUC': 0.6976980963278916, 'Precision': 0.6158333333333332, 'TPR': 0.53, 'FPR': 0.004478942759334447, 'inference_time [seconds]': 0.6247669458389282, 'train_time [seconds]': 38.648768186569214, 'noise': 0.2, 'drop_rate': 0.1}
[17:59:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5625, 'ROC_AUC': 0.97827243053897, 'PR_AUC': 0.6469277671253476, 'Precision': 0.6741666666666666, 'TPR': 0.545, 'FPR': 0.004418836079929942, 'inference_time [seconds]': 0.6186947226524353, 'train_time [seconds]': 40.08770489692688, 'noise': 0.1, 'drop_rate': 0.15}
[18:00:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55, 'ROC_AUC': 0.9780664357933284, 'PR_AUC': 0.6893296309655337, 'Precision': 0.6589999999999999, 'TPR': 0.54, 'FPR': 0.004544224185972454, 'inference_time [seconds]': 0.6040468811988831, 'train_time [seconds]': 37.89087390899658, 'noise': 0.15, 'drop_rate': 0.2}
[18:01:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6375, 'ROC_AUC': 0.9776054852320675, 'PR_AUC': 0.7606325697336405, 'Precision': 0.7583333333333334, 'TPR': 0.655, 'FPR': 0.003660934638961866, 'inference_time [seconds]': 0.6175830960273743, 'train_time [seconds]': 39.83483386039734, 'noise': 0.2, 'drop_rate': 0.1}
[18:02:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.56875, 'ROC_AUC': 0.9762286044104768, 'PR_AUC': 0.6519642548890786, 'Precision': 0.6965, 'TPR': 0.555, 'FPR': 0.004354350768250936, 'inference_time [seconds]': 0.6170868873596191, 'train_time [seconds]': 38.08408522605896, 'noise': 0.1, 'drop_rate': 0.1}
[18:02:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9804989650505535, 'PR_AUC': 0.7520826211498698, 'Precision': 0.6933333333333332, 'TPR': 0.61, 'FPR': 0.004166467637926916, 'inference_time [seconds]': 0.6129488348960876, 'train_time [seconds]': 40.36186504364014, 'noise': 0.15, 'drop_rate': 0.1}
[18:03:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.58125, 'ROC_AUC': 0.9641298463498128, 'PR_AUC': 0.6703411994902717, 'Precision': 0.7065, 'TPR': 0.595, 'FPR': 0.004232545179523923, 'inference_time [seconds]': 0.6082698702812195, 'train_time [seconds]': 38.10180616378784, 'noise': 0.15, 'drop_rate': 0.1}
wall-following.csv
4
[18:03:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.03630206698463077, 'train_time [seconds]': 12.111863374710083, 'noise': 0.2, 'drop_rate': 0.15}
[18:04:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.03640337304754571, 'train_time [seconds]': 13.393985271453857, 'noise': 0.1, 'drop_rate': 0.15}
[18:04:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9981684981684982, 'ROC_AUC': 0.9993077951763729, 'PR_AUC': 0.9960306763622788, 'Precision': 0.9988151658767772, 'TPR': 0.9924242424242424, 'FPR': 0.000744047619047619, 'inference_time [seconds]': 0.07542018051985856, 'train_time [seconds]': 13.44189977645874, 'noise': 0.1, 'drop_rate': 0.1}
[18:04:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.040291866540035484, 'train_time [seconds]': 13.468472480773926, 'noise': 0.2, 'drop_rate': 0.15}
[18:04:50] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9945054945054945, 'ROC_AUC': 0.9989905905097056, 'PR_AUC': 0.9969239316748462, 'Precision': 0.9946182835607834, 'TPR': 0.9947255083683149, 'FPR': 0.0020236363286782757, 'inference_time [seconds]': 0.03970717335795308, 'train_time [seconds]': 13.518356800079346, 'noise': 0.1, 'drop_rate': 0.15}
[18:05:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 0.9999787031647097, 'PR_AUC': 0.9999666184488707, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.05449480189508571, 'train_time [seconds]': 13.42743706703186, 'noise': 0.1, 'drop_rate': 0.1}
[18:05:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9963302752293578, 'ROC_AUC': 0.997966469490366, 'PR_AUC': 0.9926161554750013, 'Precision': 0.9976839441573202, 'TPR': 0.991056278280543, 'FPR': 0.0015178735949880227, 'inference_time [seconds]': 0.03594039777003297, 'train_time [seconds]': 13.406885385513306, 'noise': 0.2, 'drop_rate': 0.1}
[18:05:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9908256880733946, 'ROC_AUC': 0.9995738727860337, 'PR_AUC': 0.9966813596517755, 'Precision': 0.9923558401218694, 'TPR': 0.9809220803706098, 'FPR': 0.0035757039934317695, 'inference_time [seconds]': 0.09898745685542396, 'train_time [seconds]': 13.416168928146362, 'noise': 0.2, 'drop_rate': 0.15}
[18:05:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.036457044268966815, 'train_time [seconds]': 13.478703260421753, 'noise': 0.15, 'drop_rate': 0.1}
[18:06:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9889908256880734, 'ROC_AUC': 0.9983908215191792, 'PR_AUC': 0.9964151189721425, 'Precision': 0.9846469566651241, 'TPR': 0.9828093654313167, 'FPR': 0.004036274792835746, 'inference_time [seconds]': 0.035931648464377866, 'train_time [seconds]': 13.404191970825195, 'noise': 0.2, 'drop_rate': 0.1}
chess-krvkp.csv
2
[18:06:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9875, 'ROC_AUC': 0.9985910531877422, 'PR_AUC': 0.998611445698093, 'Precision': 0.9872611464968153, 'TPR': 0.9880239520958084, 'FPR': 0.011976047904191617, 'inference_time [seconds]': 0.19733905792236328, 'train_time [seconds]': 8.838956832885742, 'noise': 0.15, 'drop_rate': 0.2}
[18:06:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.99375, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9935483870967742, 'TPR': 0.9940119760479043, 'FPR': 0.005988023952095809, 'inference_time [seconds]': 0.06524547934532166, 'train_time [seconds]': 8.858772039413452, 'noise': 0.1, 'drop_rate': 0.1}
[18:06:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.04139915108680725, 'train_time [seconds]': 8.910689353942871, 'noise': 0.2, 'drop_rate': 0.2}
[18:06:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.975, 'ROC_AUC': 0.9994520762396775, 'PR_AUC': 0.9994663334029315, 'Precision': 0.9748818313215359, 'TPR': 0.9757739423114555, 'FPR': 0.024226057688544477, 'inference_time [seconds]': 0.038614124059677124, 'train_time [seconds]': 8.843750476837158, 'noise': 0.1, 'drop_rate': 0.1}
[18:06:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.99375, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9935483870967742, 'TPR': 0.9940119760479043, 'FPR': 0.005988023952095809, 'inference_time [seconds]': 0.04337206482887268, 'train_time [seconds]': 8.850412130355835, 'noise': 0.1, 'drop_rate': 0.1}
[18:06:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.98125, 'ROC_AUC': 0.9995694884740323, 'PR_AUC': 0.9995743092535717, 'Precision': 0.9810089484584424, 'TPR': 0.9817619662635513, 'FPR': 0.01823803373644867, 'inference_time [seconds]': 0.043198466300964355, 'train_time [seconds]': 8.82942509651184, 'noise': 0.1, 'drop_rate': 0.1}
[18:07:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.03808194940740412, 'train_time [seconds]': 8.862910985946655, 'noise': 0.2, 'drop_rate': 0.1}
[18:07:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9717868338557993, 'ROC_AUC': 0.9976757012291206, 'PR_AUC': 0.9977601903997944, 'Precision': 0.9715341668632539, 'TPR': 0.9724629687992437, 'FPR': 0.02753703120075638, 'inference_time [seconds]': 0.03967090833897127, 'train_time [seconds]': 8.811922311782837, 'noise': 0.2, 'drop_rate': 0.15}
[18:07:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9905956112852664, 'ROC_AUC': 0.9998424204223132, 'PR_AUC': 0.9998432949666245, 'Precision': 0.9904520040948106, 'TPR': 0.9907225023636936, 'FPR': 0.009277497636306335, 'inference_time [seconds]': 0.045088765015796436, 'train_time [seconds]': 8.88671088218689, 'noise': 0.15, 'drop_rate': 0.2}
[18:07:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9780564263322884, 'ROC_AUC': 0.9980707142294669, 'PR_AUC': 0.9981043718613667, 'Precision': 0.9779070681657362, 'TPR': 0.9786597369871644, 'FPR': 0.021340263012835654, 'inference_time [seconds]': 0.03981440792263115, 'train_time [seconds]': 8.86543893814087, 'noise': 0.2, 'drop_rate': 0.15}
mushroom.csv
2
[18:07:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.03239736052603446, 'train_time [seconds]': 18.21915864944458, 'noise': 0.15, 'drop_rate': 0.15}
[18:08:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 0.9999999999999999, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.030599690304764376, 'train_time [seconds]': 18.289246320724487, 'noise': 0.15, 'drop_rate': 0.15}
[18:08:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.031780639404447024, 'train_time [seconds]': 18.227572679519653, 'noise': 0.1, 'drop_rate': 0.15}
[18:08:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.032268913616260185, 'train_time [seconds]': 18.09624218940735, 'noise': 0.2, 'drop_rate': 0.1}
[18:09:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.07109953264884761, 'train_time [seconds]': 17.951756238937378, 'noise': 0.1, 'drop_rate': 0.15}
[18:09:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.029144615962587554, 'train_time [seconds]': 18.046051025390625, 'noise': 0.1, 'drop_rate': 0.15}
[18:09:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.030370181417230316, 'train_time [seconds]': 18.079880952835083, 'noise': 0.1, 'drop_rate': 0.1}
[18:09:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.033147522968611697, 'train_time [seconds]': 18.040127277374268, 'noise': 0.2, 'drop_rate': 0.15}
[18:10:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.03432346682243159, 'train_time [seconds]': 18.113847970962524, 'noise': 0.15, 'drop_rate': 0.1}
[18:10:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.06926294618052214, 'train_time [seconds]': 18.06964135169983, 'noise': 0.2, 'drop_rate': 0.15}
plant-texture.csv
100
[18:11:14] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.775, 'ROC_AUC': 0.9890548125149272, 'PR_AUC': 0.869136815654769, 'Precision': 0.8308333333333334, 'TPR': 0.775, 'FPR': 0.0022709179205477274, 'inference_time [seconds]': 0.6119683384895325, 'train_time [seconds]': 40.60063338279724, 'noise': 0.2, 'drop_rate': 0.1}
[18:11:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7625, 'ROC_AUC': 0.9930447416606958, 'PR_AUC': 0.8531422753075675, 'Precision': 0.83, 'TPR': 0.78, 'FPR': 0.0023982963139877397, 'inference_time [seconds]': 0.6028831005096436, 'train_time [seconds]': 37.24945116043091, 'noise': 0.2, 'drop_rate': 0.1}
[18:12:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.775, 'ROC_AUC': 0.9848379906058436, 'PR_AUC': 0.85303440472714, 'Precision': 0.8283333333333335, 'TPR': 0.785, 'FPR': 0.0022725101504657273, 'inference_time [seconds]': 0.599198043346405, 'train_time [seconds]': 39.017608880996704, 'noise': 0.2, 'drop_rate': 0.1}
[18:13:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7625, 'ROC_AUC': 0.9931072366849772, 'PR_AUC': 0.8699490372811269, 'Precision': 0.8308333333333334, 'TPR': 0.77, 'FPR': 0.0023990924289467403, 'inference_time [seconds]': 0.6030187010765076, 'train_time [seconds]': 37.83662533760071, 'noise': 0.2, 'drop_rate': 0.1}
[18:14:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.65, 'ROC_AUC': 0.9791121327919754, 'PR_AUC': 0.8212337906022604, 'Precision': 0.7526666666666668, 'TPR': 0.685, 'FPR': 0.0035359445903988536, 'inference_time [seconds]': 0.6025046110153198, 'train_time [seconds]': 39.63071942329407, 'noise': 0.1, 'drop_rate': 0.1}
[18:14:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.71875, 'ROC_AUC': 0.9897663402595336, 'PR_AUC': 0.8506045372385138, 'Precision': 0.7958333333333334, 'TPR': 0.735, 'FPR': 0.002842528461109784, 'inference_time [seconds]': 0.6013199687004089, 'train_time [seconds]': 38.109813928604126, 'noise': 0.1, 'drop_rate': 0.2}
[18:15:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.775, 'ROC_AUC': 0.9934605126980336, 'PR_AUC': 0.8974626369402584, 'Precision': 0.8325000000000001, 'TPR': 0.79, 'FPR': 0.0022709179205477274, 'inference_time [seconds]': 0.6023958325386047, 'train_time [seconds]': 39.355220079422, 'noise': 0.1, 'drop_rate': 0.1}
[18:16:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.825, 'ROC_AUC': 0.9896485152456015, 'PR_AUC': 0.9047344652278835, 'Precision': 0.8849999999999999, 'TPR': 0.83, 'FPR': 0.0017661810365416767, 'inference_time [seconds]': 0.5895182490348816, 'train_time [seconds]': 36.768893003463745, 'noise': 0.2, 'drop_rate': 0.1}
[18:16:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.76875, 'ROC_AUC': 0.9888681235570417, 'PR_AUC': 0.8620584450082401, 'Precision': 0.835, 'TPR': 0.77, 'FPR': 0.0023358012897062336, 'inference_time [seconds]': 0.5983516573905945, 'train_time [seconds]': 38.2876353263855, 'noise': 0.15, 'drop_rate': 0.1}
[18:17:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7421383647798742, 'ROC_AUC': 0.9892437313553173, 'PR_AUC': 0.8163654319818111, 'Precision': 0.8089999999999999, 'TPR': 0.715, 'FPR': 0.0026034024026445213, 'inference_time [seconds]': 0.6036803407489129, 'train_time [seconds]': 37.67582154273987, 'noise': 0.1, 'drop_rate': 0.15}
waveform.csv
3
[18:17:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.882, 'ROC_AUC': 0.9723678399446616, 'PR_AUC': 0.947330728202825, 'Precision': 0.882987382987383, 'TPR': 0.8815805109922756, 'FPR': 0.05908337102366953, 'inference_time [seconds]': 0.0341486930847168, 'train_time [seconds]': 11.14196515083313, 'noise': 0.2, 'drop_rate': 0.15}
[18:17:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.866, 'ROC_AUC': 0.9694478587454882, 'PR_AUC': 0.9417769783771005, 'Precision': 0.8674221908238158, 'TPR': 0.8656565656565656, 'FPR': 0.0670737222976029, 'inference_time [seconds]': 0.0355687141418457, 'train_time [seconds]': 11.863216638565063, 'noise': 0.2, 'drop_rate': 0.1}
[18:18:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.848, 'ROC_AUC': 0.9643890174794477, 'PR_AUC': 0.932660067604209, 'Precision': 0.8491880688576611, 'TPR': 0.8478312537136067, 'FPR': 0.0759535655058043, 'inference_time [seconds]': 0.03647565841674805, 'train_time [seconds]': 12.630138635635376, 'noise': 0.2, 'drop_rate': 0.15}
[18:18:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.84, 'ROC_AUC': 0.9690218734113291, 'PR_AUC': 0.9429130810927021, 'Precision': 0.8414554738065906, 'TPR': 0.8398074363450935, 'FPR': 0.08009014438655158, 'inference_time [seconds]': 0.1608128547668457, 'train_time [seconds]': 12.574129343032837, 'noise': 0.15, 'drop_rate': 0.2}
[18:18:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.878, 'ROC_AUC': 0.9813097262399845, 'PR_AUC': 0.9644542488822873, 'Precision': 0.8788616324743971, 'TPR': 0.877895225089742, 'FPR': 0.061085836984040576, 'inference_time [seconds]': 0.035701751708984375, 'train_time [seconds]': 12.581563234329224, 'noise': 0.1, 'drop_rate': 0.15}
[18:18:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.838, 'ROC_AUC': 0.9636281368423147, 'PR_AUC': 0.9271555145317629, 'Precision': 0.8415401078322425, 'TPR': 0.8379008141605158, 'FPR': 0.08104742895162056, 'inference_time [seconds]': 0.035326480865478516, 'train_time [seconds]': 12.53459620475769, 'noise': 0.2, 'drop_rate': 0.15}
[18:18:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.854, 'ROC_AUC': 0.9704818998758893, 'PR_AUC': 0.9388424384378778, 'Precision': 0.8536699316364492, 'TPR': 0.8538231822754528, 'FPR': 0.07298785663555875, 'inference_time [seconds]': 0.03569793701171875, 'train_time [seconds]': 12.559432983398438, 'noise': 0.1, 'drop_rate': 0.1}
[18:19:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.818, 'ROC_AUC': 0.9638510405956099, 'PR_AUC': 0.9314917058736493, 'Precision': 0.8175567000993946, 'TPR': 0.8178081520991624, 'FPR': 0.09099737126729542, 'inference_time [seconds]': 0.08810234069824219, 'train_time [seconds]': 12.526560306549072, 'noise': 0.1, 'drop_rate': 0.1}
[18:19:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.87, 'ROC_AUC': 0.9783168035088261, 'PR_AUC': 0.9588488877854418, 'Precision': 0.8698956032968658, 'TPR': 0.8696613961674203, 'FPR': 0.06501872028140139, 'inference_time [seconds]': 0.047415733337402344, 'train_time [seconds]': 12.575260162353516, 'noise': 0.2, 'drop_rate': 0.1}
[18:19:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.832, 'ROC_AUC': 0.9654932461034651, 'PR_AUC': 0.935848557241706, 'Precision': 0.8333705419434057, 'TPR': 0.8321521337276666, 'FPR': 0.08394217562080152, 'inference_time [seconds]': 0.036099910736083984, 'train_time [seconds]': 12.541659593582153, 'noise': 0.1, 'drop_rate': 0.15}
hill-valley.csv
2
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/torch/nn/_reduction.py:42: UserWarning: size_average and reduce args will be deprecated, please use reduction='sum' instead.
  warnings.warn(warning.format(ret))
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
[18:19:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6229508196721312, 'ROC_AUC': 0.6267804353668369, 'PR_AUC': 0.6145553610302639, 'Precision': 0.6279004752585966, 'TPR': 0.6229508196721312, 'FPR': 0.3770491803278688, 'inference_time [seconds]': 0.060144017954341704, 'train_time [seconds]': 3.9672391414642334, 'noise': 0.1, 'drop_rate': 0.15}
[18:19:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5655737704918032, 'ROC_AUC': 0.598226283257189, 'PR_AUC': 0.6172580753856489, 'Precision': 0.567032967032967, 'TPR': 0.5655737704918034, 'FPR': 0.43442622950819676, 'inference_time [seconds]': 0.05964568403900647, 'train_time [seconds]': 3.9376888275146484, 'noise': 0.2, 'drop_rate': 0.15}
[18:19:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5371900826446281, 'ROC_AUC': 0.5226092896174863, 'PR_AUC': 0.5251565289412345, 'Precision': 0.5382907880133185, 'TPR': 0.5377049180327869, 'FPR': 0.46229508196721314, 'inference_time [seconds]': 0.06015241638688017, 'train_time [seconds]': 3.950688123703003, 'noise': 0.15, 'drop_rate': 0.15}
[18:19:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.512396694214876, 'ROC_AUC': 0.5646857923497268, 'PR_AUC': 0.5828423206580733, 'Precision': 0.5142028985507247, 'TPR': 0.5133879781420765, 'FPR': 0.4866120218579235, 'inference_time [seconds]': 0.060164238795761237, 'train_time [seconds]': 3.9577105045318604, 'noise': 0.1, 'drop_rate': 0.2}
[18:20:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5867768595041323, 'ROC_AUC': 0.5898907103825136, 'PR_AUC': 0.5783010133194867, 'Precision': 0.5867486338797814, 'TPR': 0.5867486338797814, 'FPR': 0.4132513661202186, 'inference_time [seconds]': 0.06012680116763785, 'train_time [seconds]': 3.937028169631958, 'noise': 0.1, 'drop_rate': 0.15}
[18:20:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5619834710743802, 'ROC_AUC': 0.5904371584699453, 'PR_AUC': 0.5918983548967114, 'Precision': 0.5619517543859649, 'TPR': 0.5617486338797815, 'FPR': 0.4382513661202186, 'inference_time [seconds]': 0.06017409080316213, 'train_time [seconds]': 3.907174587249756, 'noise': 0.2, 'drop_rate': 0.15}
[18:20:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5702479338842975, 'ROC_AUC': 0.5781420765027323, 'PR_AUC': 0.5565567958802733, 'Precision': 0.5724885844748859, 'TPR': 0.5693989071038251, 'FPR': 0.4306010928961749, 'inference_time [seconds]': 0.06133662767646726, 'train_time [seconds]': 3.927793502807617, 'noise': 0.2, 'drop_rate': 0.2}
[18:20:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5289256198347108, 'ROC_AUC': 0.5528688524590164, 'PR_AUC': 0.5655248083175428, 'Precision': 0.5287878787878788, 'TPR': 0.528551912568306, 'FPR': 0.471448087431694, 'inference_time [seconds]': 0.059900204997417356, 'train_time [seconds]': 3.9518096446990967, 'noise': 0.2, 'drop_rate': 0.15}
[18:20:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6033057851239669, 'ROC_AUC': 0.6185792349726775, 'PR_AUC': 0.6149352705400031, 'Precision': 0.6151234567901235, 'TPR': 0.6019125683060109, 'FPR': 0.3980874316939891, 'inference_time [seconds]': 0.05977015849972559, 'train_time [seconds]': 3.9461662769317627, 'noise': 0.2, 'drop_rate': 0.2}
[18:20:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.512396694214876, 'ROC_AUC': 0.5377049180327869, 'PR_AUC': 0.5382269236823625, 'Precision': 0.5121212121212121, 'TPR': 0.5120218579234972, 'FPR': 0.4879781420765027, 'inference_time [seconds]': 0.060633194348043644, 'train_time [seconds]': 3.953685760498047, 'noise': 0.2, 'drop_rate': 0.2}
musk-1.csv
2
[18:20:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8958333333333334, 'ROC_AUC': 0.9664902998236331, 'PR_AUC': 0.9680656147341165, 'Precision': 0.8933566433566433, 'TPR': 0.8968253968253967, 'FPR': 0.10317460317460317, 'inference_time [seconds]': 0.11403361956278484, 'train_time [seconds]': 3.092703104019165, 'noise': 0.1, 'drop_rate': 0.15}
[18:20:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9166666666666666, 'ROC_AUC': 0.9876543209876543, 'PR_AUC': 0.9881813979841354, 'Precision': 0.935483870967742, 'TPR': 0.9047619047619048, 'FPR': 0.09523809523809523, 'inference_time [seconds]': 0.11264284451802571, 'train_time [seconds]': 3.0896425247192383, 'noise': 0.2, 'drop_rate': 0.2}
[18:20:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.875, 'ROC_AUC': 0.9576719576719577, 'PR_AUC': 0.9616583920879133, 'Precision': 0.8784029038112522, 'TPR': 0.8677248677248677, 'FPR': 0.13227513227513227, 'inference_time [seconds]': 0.11508663495381673, 'train_time [seconds]': 3.0922157764434814, 'noise': 0.15, 'drop_rate': 0.1}
[18:20:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8541666666666666, 'ROC_AUC': 0.9188712522045854, 'PR_AUC': 0.9095473458689068, 'Precision': 0.8535714285714285, 'TPR': 0.8492063492063492, 'FPR': 0.15079365079365079, 'inference_time [seconds]': 0.11198222637176514, 'train_time [seconds]': 3.0774693489074707, 'noise': 0.15, 'drop_rate': 0.1}
[18:20:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8958333333333334, 'ROC_AUC': 0.9523809523809523, 'PR_AUC': 0.9549316977383112, 'Precision': 0.9055555555555556, 'TPR': 0.8862433862433863, 'FPR': 0.11375661375661375, 'inference_time [seconds]': 0.1217871904373169, 'train_time [seconds]': 3.1178972721099854, 'noise': 0.15, 'drop_rate': 0.15}
[18:20:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9166666666666666, 'ROC_AUC': 0.9894179894179894, 'PR_AUC': 0.9899730920420574, 'Precision': 0.9147826086956521, 'TPR': 0.9206349206349206, 'FPR': 0.07936507936507936, 'inference_time [seconds]': 0.17235676447550455, 'train_time [seconds]': 3.4564287662506104, 'noise': 0.2, 'drop_rate': 0.1}
[18:20:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8723404255319149, 'ROC_AUC': 0.9304029304029304, 'PR_AUC': 0.9363512713484443, 'Precision': 0.8759398496240601, 'TPR': 0.8663003663003663, 'FPR': 0.1336996336996337, 'inference_time [seconds]': 0.12611328287327545, 'train_time [seconds]': 3.496917724609375, 'noise': 0.2, 'drop_rate': 0.1}
[18:20:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8936170212765957, 'ROC_AUC': 0.9722222222222223, 'PR_AUC': 0.9716236582836864, 'Precision': 0.8901098901098901, 'TPR': 0.8944444444444444, 'FPR': 0.10555555555555556, 'inference_time [seconds]': 0.3591192529556599, 'train_time [seconds]': 3.4816882610321045, 'noise': 0.2, 'drop_rate': 0.15}
[18:20:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9361702127659575, 'ROC_AUC': 0.9481481481481482, 'PR_AUC': 0.9528341732326538, 'Precision': 0.9379699248120301, 'TPR': 0.9314814814814815, 'FPR': 0.06851851851851852, 'inference_time [seconds]': 0.18110173813840177, 'train_time [seconds]': 3.4743852615356445, 'noise': 0.1, 'drop_rate': 0.1}
[18:21:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8297872340425532, 'ROC_AUC': 0.937037037037037, 'PR_AUC': 0.9417560317537579, 'Precision': 0.8304597701149425, 'TPR': 0.8194444444444444, 'FPR': 0.18055555555555555, 'inference_time [seconds]': 0.1817206118969207, 'train_time [seconds]': 3.516118288040161, 'noise': 0.2, 'drop_rate': 0.15}
semeion.csv
10
[18:21:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.93125, 'ROC_AUC': 0.9940001197318008, 'PR_AUC': 0.9773395413137658, 'Precision': 0.9361029411764706, 'TPR': 0.9308333333333334, 'FPR': 0.007638888888888888, 'inference_time [seconds]': 0.10991096496582031, 'train_time [seconds]': 11.720146179199219, 'noise': 0.15, 'drop_rate': 0.2}
[18:21:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.93125, 'ROC_AUC': 0.9959493471932619, 'PR_AUC': 0.9772389729145987, 'Precision': 0.934014447884417, 'TPR': 0.9302696078431373, 'FPR': 0.007644013075047558, 'inference_time [seconds]': 0.10721683502197266, 'train_time [seconds]': 8.987656593322754, 'noise': 0.2, 'drop_rate': 0.1}
[18:21:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.90625, 'ROC_AUC': 0.9882020710055384, 'PR_AUC': 0.9425808183145161, 'Precision': 0.910513047324193, 'TPR': 0.9065686274509804, 'FPR': 0.010416867615143478, 'inference_time [seconds]': 0.1072421669960022, 'train_time [seconds]': 9.002022981643677, 'noise': 0.15, 'drop_rate': 0.1}
[18:21:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.9939623802123803, 'PR_AUC': 0.9683570813201369, 'Precision': 0.9132953875330037, 'TPR': 0.9041666666666666, 'FPR': 0.010484654234654237, 'inference_time [seconds]': 0.10704994201660156, 'train_time [seconds]': 8.971908569335938, 'noise': 0.15, 'drop_rate': 0.1}
[18:21:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.949685534591195, 'ROC_AUC': 0.9980176767676767, 'PR_AUC': 0.9852544987593994, 'Precision': 0.9495833333333333, 'TPR': 0.9495833333333333, 'FPR': 0.005584693084693085, 'inference_time [seconds]': 0.10880584236960741, 'train_time [seconds]': 8.970841646194458, 'noise': 0.2, 'drop_rate': 0.1}
[18:22:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9433962264150944, 'ROC_AUC': 0.994032634032634, 'PR_AUC': 0.9798273154472467, 'Precision': 0.944436274509804, 'TPR': 0.9433333333333334, 'FPR': 0.006288850038850038, 'inference_time [seconds]': 0.10715340668300413, 'train_time [seconds]': 8.88916802406311, 'noise': 0.2, 'drop_rate': 0.1}
[18:22:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9182389937106918, 'ROC_AUC': 0.993130341880342, 'PR_AUC': 0.9640057329813185, 'Precision': 0.9231443805592413, 'TPR': 0.9183333333333333, 'FPR': 0.009086052836052837, 'inference_time [seconds]': 0.2690306249654518, 'train_time [seconds]': 9.226248979568481, 'noise': 0.1, 'drop_rate': 0.2}
[18:22:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.949685534591195, 'ROC_AUC': 0.9953153328153329, 'PR_AUC': 0.96123493762131, 'Precision': 0.9528594771241832, 'TPR': 0.9491666666666667, 'FPR': 0.005594405594405594, 'inference_time [seconds]': 0.10681602190125664, 'train_time [seconds]': 8.913504600524902, 'noise': 0.2, 'drop_rate': 0.1}
[18:22:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9622641509433962, 'ROC_AUC': 0.998948458948459, 'PR_AUC': 0.9930893026455287, 'Precision': 0.9639705882352942, 'TPR': 0.9620833333333334, 'FPR': 0.004195804195804196, 'inference_time [seconds]': 0.10783567368609351, 'train_time [seconds]': 8.901217460632324, 'noise': 0.2, 'drop_rate': 0.15}
[18:22:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9119496855345912, 'ROC_AUC': 0.9935648148148146, 'PR_AUC': 0.9728310010070361, 'Precision': 0.9138463806575261, 'TPR': 0.9120833333333334, 'FPR': 0.009785353535353536, 'inference_time [seconds]': 0.10689099629720052, 'train_time [seconds]': 8.886929512023926, 'noise': 0.2, 'drop_rate': 0.15}
waveform-noise.csv
3
[18:23:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.854, 'ROC_AUC': 0.970837254679084, 'PR_AUC': 0.9441158993604729, 'Precision': 0.8561472084962017, 'TPR': 0.8544291564680814, 'FPR': 0.07292156004535098, 'inference_time [seconds]': 0.034764766693115234, 'train_time [seconds]': 11.336726903915405, 'noise': 0.15, 'drop_rate': 0.1}
[18:23:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.86, 'ROC_AUC': 0.9719350418646799, 'PR_AUC': 0.9456262007874786, 'Precision': 0.8609807412202621, 'TPR': 0.8607775192575934, 'FPR': 0.0699518130173346, 'inference_time [seconds]': 0.0347599983215332, 'train_time [seconds]': 11.25609564781189, 'noise': 0.2, 'drop_rate': 0.1}
[18:23:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.868, 'ROC_AUC': 0.973588374783168, 'PR_AUC': 0.9515294670048964, 'Precision': 0.8686822376522508, 'TPR': 0.868475803878955, 'FPR': 0.06595362280804311, 'inference_time [seconds]': 0.03543233871459961, 'train_time [seconds]': 12.152337789535522, 'noise': 0.2, 'drop_rate': 0.1}
[18:23:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.868, 'ROC_AUC': 0.973451059476726, 'PR_AUC': 0.9503936589540469, 'Precision': 0.8684686147186147, 'TPR': 0.868212386933425, 'FPR': 0.06597756374341546, 'inference_time [seconds]': 0.034356117248535156, 'train_time [seconds]': 11.255393743515015, 'noise': 0.15, 'drop_rate': 0.15}
[18:23:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.836, 'ROC_AUC': 0.9632229682861985, 'PR_AUC': 0.9317079613193049, 'Precision': 0.8397103251785106, 'TPR': 0.8367020169615165, 'FPR': 0.08188572127513022, 'inference_time [seconds]': 0.03540611267089844, 'train_time [seconds]': 11.155416011810303, 'noise': 0.2, 'drop_rate': 0.2}
[18:24:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.838, 'ROC_AUC': 0.9655735582337867, 'PR_AUC': 0.934136942524212, 'Precision': 0.8396317829457365, 'TPR': 0.838562091503268, 'FPR': 0.08088346148047641, 'inference_time [seconds]': 0.034601688385009766, 'train_time [seconds]': 11.19901990890503, 'noise': 0.1, 'drop_rate': 0.15}
[18:24:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.868, 'ROC_AUC': 0.9740274563013808, 'PR_AUC': 0.9501660594083127, 'Precision': 0.8696525254104092, 'TPR': 0.8678550207961973, 'FPR': 0.06612392582541836, 'inference_time [seconds]': 0.03588390350341797, 'train_time [seconds]': 11.20279836654663, 'noise': 0.2, 'drop_rate': 0.2}
[18:24:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.88, 'ROC_AUC': 0.9748915764076594, 'PR_AUC': 0.9532947413374074, 'Precision': 0.8810190670186305, 'TPR': 0.8802744778648393, 'FPR': 0.06003785367894323, 'inference_time [seconds]': 0.035538673400878906, 'train_time [seconds]': 11.286906242370605, 'noise': 0.15, 'drop_rate': 0.2}
[18:24:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.846, 'ROC_AUC': 0.9680528131153517, 'PR_AUC': 0.9385968480550684, 'Precision': 0.8469131165136305, 'TPR': 0.8464457075207771, 'FPR': 0.07694997343546212, 'inference_time [seconds]': 0.03463935852050781, 'train_time [seconds]': 11.259138584136963, 'noise': 0.2, 'drop_rate': 0.2}
[18:24:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.87, 'ROC_AUC': 0.977482605298342, 'PR_AUC': 0.9575342090078279, 'Precision': 0.8703893903240308, 'TPR': 0.8700778368989676, 'FPR': 0.06494657346262518, 'inference_time [seconds]': 0.0345768928527832, 'train_time [seconds]': 11.274824380874634, 'noise': 0.1, 'drop_rate': 0.1}
low-res-spect.csv
9
[18:25:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9259259259259259, 'ROC_AUC': 0.9956207780107151, 'PR_AUC': 0.9112420501309391, 'Precision': 0.8166666666666667, 'TPR': 0.7671957671957671, 'FPR': 0.012316968130921618, 'inference_time [seconds]': 0.1996578993620696, 'train_time [seconds]': 4.762779235839844, 'noise': 0.1, 'drop_rate': 0.2}
[18:25:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8679245283018868, 'ROC_AUC': 0.982974802974803, 'PR_AUC': 0.8466214038926457, 'Precision': 0.7153846153846154, 'TPR': 0.6185064935064936, 'FPR': 0.025023310023310024, 'inference_time [seconds]': 0.20701030515274912, 'train_time [seconds]': 4.91446852684021, 'noise': 0.1, 'drop_rate': 0.1}
[18:25:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8867924528301887, 'ROC_AUC': 0.9723227609108008, 'PR_AUC': 0.9329366199615148, 'Precision': 0.8762445887445889, 'TPR': 0.7320105820105821, 'FPR': 0.025009204527476955, 'inference_time [seconds]': 0.2031506232495578, 'train_time [seconds]': 4.865736961364746, 'noise': 0.15, 'drop_rate': 0.15}
[18:25:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9622641509433962, 'ROC_AUC': 0.9972202646621251, 'PR_AUC': 0.9905349794238684, 'Precision': 0.8428571428571429, 'TPR': 0.8166666666666668, 'FPR': 0.0059421710365106595, 'inference_time [seconds]': 0.20284472771410672, 'train_time [seconds]': 4.841630697250366, 'noise': 0.1, 'drop_rate': 0.15}
[18:25:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9433962264150944, 'ROC_AUC': 0.9598453970048655, 'PR_AUC': 0.7822491077006677, 'Precision': 0.9555555555555556, 'TPR': 0.7981481481481482, 'FPR': 0.01673469387755102, 'inference_time [seconds]': 0.20207998887547907, 'train_time [seconds]': 4.833560943603516, 'noise': 0.15, 'drop_rate': 0.1}
[18:25:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.9915642392552692, 'PR_AUC': 0.8927180259076811, 'Precision': 0.7867405582922825, 'TPR': 0.6129629629629629, 'FPR': 0.017487360540883838, 'inference_time [seconds]': 0.2049500087522111, 'train_time [seconds]': 5.0098347663879395, 'noise': 0.1, 'drop_rate': 0.15}
[18:25:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8867924528301887, 'ROC_AUC': 0.964993490574886, 'PR_AUC': 0.7749749522182174, 'Precision': 0.8741105637657361, 'TPR': 0.6645502645502646, 'FPR': 0.025224775224775228, 'inference_time [seconds]': 0.2235106702120799, 'train_time [seconds]': 5.1147894859313965, 'noise': 0.2, 'drop_rate': 0.1}
[18:25:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.9082577198856269, 'PR_AUC': 0.8459807065465348, 'Precision': 0.8486111111111111, 'TPR': 0.6698412698412699, 'FPR': 0.01962247658002375, 'inference_time [seconds]': 0.21720382402528007, 'train_time [seconds]': 5.505551099777222, 'noise': 0.1, 'drop_rate': 0.15}
[18:25:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8301886792452831, 'ROC_AUC': 0.9732401482045525, 'PR_AUC': 0.764852991200704, 'Precision': 0.9129251700680273, 'TPR': 0.5970899470899471, 'FPR': 0.038513811769625726, 'inference_time [seconds]': 0.22159432465175413, 'train_time [seconds]': 5.496730089187622, 'noise': 0.1, 'drop_rate': 0.15}
[18:25:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8301886792452831, 'ROC_AUC': 0.970856083951322, 'PR_AUC': 0.9250504818009536, 'Precision': 0.6535714285714286, 'TPR': 0.539702581369248, 'FPR': 0.027667245153768064, 'inference_time [seconds]': 0.2129347819202351, 'train_time [seconds]': 5.386327505111694, 'noise': 0.2, 'drop_rate': 0.1}
ozone.csv
2
[18:25:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9763779527559056, 'ROC_AUC': 0.9705031810294968, 'PR_AUC': 0.8933264431905087, 'Precision': 0.9881422924901186, 'TPR': 0.5714285714285714, 'FPR': 0.42857142857142855, 'inference_time [seconds]': 0.04358178987277774, 'train_time [seconds]': 7.10778284072876, 'noise': 0.1, 'drop_rate': 0.15}
[18:26:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9763779527559056, 'ROC_AUC': 0.8906882591093117, 'PR_AUC': 0.6957121528783046, 'Precision': 0.9881422924901186, 'TPR': 0.5714285714285714, 'FPR': 0.42857142857142855, 'inference_time [seconds]': 0.07638687223900022, 'train_time [seconds]': 7.162133693695068, 'noise': 0.15, 'drop_rate': 0.1}
[18:26:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.7802197802197802, 'PR_AUC': 0.6127932194099927, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.04135811422753522, 'train_time [seconds]': 7.175853490829468, 'noise': 0.1, 'drop_rate': 0.2}
[18:26:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.9410569105691056, 'PR_AUC': 0.7079403348491581, 'Precision': 0.7361111111111112, 'TPR': 0.5604674796747968, 'FPR': 0.43953252032520324, 'inference_time [seconds]': 0.0467178389782042, 'train_time [seconds]': 7.148629903793335, 'noise': 0.15, 'drop_rate': 0.2}
[18:26:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.9085365853658536, 'PR_AUC': 0.6207423814539392, 'Precision': 0.7361111111111112, 'TPR': 0.5604674796747968, 'FPR': 0.43953252032520324, 'inference_time [seconds]': 0.07932017168660802, 'train_time [seconds]': 7.211662292480469, 'noise': 0.2, 'drop_rate': 0.15}
[18:26:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.9242886178861789, 'PR_AUC': 0.7233803586243686, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.04467813987431564, 'train_time [seconds]': 7.139373779296875, 'noise': 0.2, 'drop_rate': 0.15}
[18:26:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.835075493612079, 'PR_AUC': 0.6343971070628666, 'Precision': 0.7380478087649402, 'TPR': 0.5693960511033682, 'FPR': 0.4306039488966318, 'inference_time [seconds]': 0.15327487538454562, 'train_time [seconds]': 7.110965728759766, 'noise': 0.2, 'drop_rate': 0.2}
[18:26:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.854239256678281, 'PR_AUC': 0.6741659681202836, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.047144682511039405, 'train_time [seconds]': 7.192596197128296, 'noise': 0.1, 'drop_rate': 0.1}
[18:26:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.9518002322880371, 'PR_AUC': 0.6644469996132449, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.048440435658330505, 'train_time [seconds]': 7.1369242668151855, 'noise': 0.15, 'drop_rate': 0.2}
[18:27:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.9192799070847851, 'PR_AUC': 0.7183636553429353, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.04932249016441376, 'train_time [seconds]': 7.145192384719849, 'noise': 0.1, 'drop_rate': 0.2}
spambase.csv
2
[18:27:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9479392624728851, 'ROC_AUC': 0.9827090472251763, 'PR_AUC': 0.9820884787996913, 'Precision': 0.9463127718465797, 'TPR': 0.9445724526369688, 'FPR': 0.05542754736303123, 'inference_time [seconds]': 0.03229046074790706, 'train_time [seconds]': 11.9813392162323, 'noise': 0.1, 'drop_rate': 0.15}
[18:27:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9456521739130435, 'ROC_AUC': 0.9865206735710332, 'PR_AUC': 0.9864552322098802, 'Precision': 0.9483902952305794, 'TPR': 0.9379595224918966, 'FPR': 0.0620404775081034, 'inference_time [seconds]': 0.04053530485733696, 'train_time [seconds]': 11.97212815284729, 'noise': 0.15, 'drop_rate': 0.15}
[18:27:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9586956521739131, 'ROC_AUC': 0.9919361214325242, 'PR_AUC': 0.9912811289345108, 'Precision': 0.9572169745935564, 'TPR': 0.9563404221677603, 'FPR': 0.0436595778322397, 'inference_time [seconds]': 0.03255657527757728, 'train_time [seconds]': 11.931888580322266, 'noise': 0.1, 'drop_rate': 0.2}
[18:27:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9939404740687934, 'PR_AUC': 0.9934884103389652, 'Precision': 0.9488604669694796, 'TPR': 0.9461672508366502, 'FPR': 0.05383274916334976, 'inference_time [seconds]': 0.032623436139977494, 'train_time [seconds]': 11.995235204696655, 'noise': 0.15, 'drop_rate': 0.2}
[18:28:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9565217391304348, 'ROC_AUC': 0.9845541495871205, 'PR_AUC': 0.983041899216266, 'Precision': 0.9518928522618559, 'TPR': 0.9583358086298739, 'FPR': 0.04166419137012614, 'inference_time [seconds]': 0.0324565431346064, 'train_time [seconds]': 11.895173072814941, 'noise': 0.15, 'drop_rate': 0.1}
[18:28:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9565217391304348, 'ROC_AUC': 0.9893067189449296, 'PR_AUC': 0.9892535843308857, 'Precision': 0.9544545436543298, 'TPR': 0.9544545436543298, 'FPR': 0.04554545634567021, 'inference_time [seconds]': 0.03280069517052692, 'train_time [seconds]': 11.989844799041748, 'noise': 0.15, 'drop_rate': 0.15}
[18:28:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9434782608695652, 'ROC_AUC': 0.9854056515970613, 'PR_AUC': 0.9826515597598934, 'Precision': 0.9415694148989046, 'TPR': 0.9398205905067427, 'FPR': 0.06017940949325729, 'inference_time [seconds]': 0.032607887102210006, 'train_time [seconds]': 12.101036071777344, 'noise': 0.1, 'drop_rate': 0.2}
[18:28:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9543478260869566, 'ROC_AUC': 0.9884948216796372, 'PR_AUC': 0.9850542468580623, 'Precision': 0.9543854033290653, 'TPR': 0.9497514802273312, 'FPR': 0.05024851977266877, 'inference_time [seconds]': 0.03267993097719939, 'train_time [seconds]': 11.942812442779541, 'noise': 0.15, 'drop_rate': 0.15}
[18:28:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9608695652173913, 'ROC_AUC': 0.985564070575655, 'PR_AUC': 0.9847546279087207, 'Precision': 0.9640826402800542, 'TPR': 0.9541575080694666, 'FPR': 0.045842491930533275, 'inference_time [seconds]': 0.032359620799189026, 'train_time [seconds]': 12.113210678100586, 'noise': 0.2, 'drop_rate': 0.2}
[18:29:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9326086956521739, 'ROC_AUC': 0.9845145448424721, 'PR_AUC': 0.9841059596713935, 'Precision': 0.9355430528375734, 'TPR': 0.9230974870789521, 'FPR': 0.07690251292104794, 'inference_time [seconds]': 0.03260114918584409, 'train_time [seconds]': 12.171825885772705, 'noise': 0.1, 'drop_rate': 0.15}
wine-quality-white.csv
7
[18:29:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6938775510204082, 'ROC_AUC': 0.8871143599672627, 'PR_AUC': 0.5913922079328026, 'Precision': 0.8512680428222722, 'TPR': 0.4680902497985496, 'FPR': 0.08428256006787765, 'inference_time [seconds]': 0.07758724446199378, 'train_time [seconds]': 14.099657773971558, 'noise': 0.2, 'drop_rate': 0.1}
[18:29:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6918367346938775, 'ROC_AUC': 0.7234734689649999, 'PR_AUC': 0.49744374558770726, 'Precision': 0.8030843410378079, 'TPR': 0.4210112812248186, 'FPR': 0.08453150619932986, 'inference_time [seconds]': 0.05480269996487364, 'train_time [seconds]': 14.448569297790527, 'noise': 0.1, 'drop_rate': 0.15}
[18:29:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7224489795918367, 'ROC_AUC': 0.8778372276572327, 'PR_AUC': 0.6039799733753753, 'Precision': 0.7866998081283795, 'TPR': 0.4724134984006056, 'FPR': 0.07527159442003825, 'inference_time [seconds]': 0.07540595774747888, 'train_time [seconds]': 14.378684759140015, 'noise': 0.2, 'drop_rate': 0.1}
[18:30:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6918367346938775, 'ROC_AUC': 0.8306355870410721, 'PR_AUC': 0.4677057672199319, 'Precision': 0.8022873377141845, 'TPR': 0.42336236487122875, 'FPR': 0.07015974010567573, 'inference_time [seconds]': 0.054469400522660236, 'train_time [seconds]': 14.333630800247192, 'noise': 0.1, 'drop_rate': 0.1}
[18:30:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6938775510204082, 'ROC_AUC': 0.8228757824060587, 'PR_AUC': 0.4634076359751886, 'Precision': 0.8448893985454878, 'TPR': 0.40000170055568923, 'FPR': 0.07141072799698277, 'inference_time [seconds]': 0.06251140516631458, 'train_time [seconds]': 14.280998945236206, 'noise': 0.2, 'drop_rate': 0.1}
[18:30:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7163265306122449, 'ROC_AUC': 0.8055752963243356, 'PR_AUC': 0.4553270428599025, 'Precision': 0.8863067496502148, 'TPR': 0.39435301288749564, 'FPR': 0.06691559455998133, 'inference_time [seconds]': 0.05351037395243742, 'train_time [seconds]': 14.30861520767212, 'noise': 0.15, 'drop_rate': 0.1}
[18:30:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6959183673469388, 'ROC_AUC': 0.8736641373487197, 'PR_AUC': 0.5074428023566837, 'Precision': 0.8677583078955727, 'TPR': 0.4012750659302383, 'FPR': 0.07144814231121824, 'inference_time [seconds]': 0.0523664513412787, 'train_time [seconds]': 14.45527982711792, 'noise': 0.2, 'drop_rate': 0.15}
[18:31:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7020408163265306, 'ROC_AUC': 0.91153295554901, 'PR_AUC': 0.5133516865480006, 'Precision': 0.8433822948748322, 'TPR': 0.3669384734039906, 'FPR': 0.07004171166600626, 'inference_time [seconds]': 0.08470476890096859, 'train_time [seconds]': 14.34322452545166, 'noise': 0.2, 'drop_rate': 0.1}
[18:31:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6871165644171779, 'ROC_AUC': 0.8071716055428152, 'PR_AUC': 0.5628133258793164, 'Precision': 0.7914957883093678, 'TPR': 0.4554578317420783, 'FPR': 0.08534592604297149, 'inference_time [seconds]': 0.09823625560674687, 'train_time [seconds]': 14.274085998535156, 'noise': 0.1, 'drop_rate': 0.1}
[18:31:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8638059270758677, 'PR_AUC': 0.5469601740100604, 'Precision': 0.8397372124080199, 'TPR': 0.4280375098012084, 'FPR': 0.09128642418716552, 'inference_time [seconds]': 0.05026097677968031, 'train_time [seconds]': 14.306919574737549, 'noise': 0.2, 'drop_rate': 0.2}
finish
