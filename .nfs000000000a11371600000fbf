Thu Aug 5 17:41:55 IDT 2021

SLURM_JOBID:		 148965
SLURM_JOB_NODELIST:	 ise-titan-01 


/home/amirbial/Computational_Learning/Scratch/train.py
2021-08-05 17:41:58.947137: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
start main
Improve =True
0.05
arrhythmia.csv
13
[17:42:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6739130434782609, 'ROC_AUC': 0.8292834905916945, 'PR_AUC': 0.5932595406429553, 'Precision': 0.6418732782369146, 'TPR': 0.2781818181818182, 'FPR': 0.05141020595566049, 'inference_time [seconds]': 0.33711350482443103, 'train_time [seconds]': 12.083311796188354, 'noise': 0.15, 'drop_rate': 0.1}
[17:42:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6956521739130435, 'ROC_AUC': 0.878577219774559, 'PR_AUC': 0.6295126247822328, 'Precision': 0.7682291666666666, 'TPR': 0.5109090909090909, 'FPR': 0.04519182508312942, 'inference_time [seconds]': 0.33194085826044495, 'train_time [seconds]': 8.23551630973816, 'noise': 0.1, 'drop_rate': 0.2}
[17:42:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.7825768412592009, 'PR_AUC': 0.6505215929028378, 'Precision': 0.890625, 'TPR': 0.5391666666666666, 'FPR': 0.05969802555168409, 'inference_time [seconds]': 0.32406383090549046, 'train_time [seconds]': 8.218489408493042, 'noise': 0.1, 'drop_rate': 0.2}
[17:42:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8523550090484294, 'PR_AUC': 0.637955102169633, 'Precision': 0.8420833333333333, 'TPR': 0.43166666666666664, 'FPR': 0.05948157533523386, 'inference_time [seconds]': 0.3270414140489366, 'train_time [seconds]': 9.310427904129028, 'noise': 0.1, 'drop_rate': 0.2}
[17:42:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8154363143631436, 'PR_AUC': 0.5239113671772719, 'Precision': 0.7105882352941176, 'TPR': 0.33999999999999997, 'FPR': 0.059589800443458976, 'inference_time [seconds]': 0.40797657436794704, 'train_time [seconds]': 8.282737493515015, 'noise': 0.1, 'drop_rate': 0.2}
[17:43:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.874496955618907, 'PR_AUC': 0.6589942221465439, 'Precision': 0.7833333333333333, 'TPR': 0.41500000000000004, 'FPR': 0.06435460880582831, 'inference_time [seconds]': 0.3333992428249783, 'train_time [seconds]': 9.135316371917725, 'noise': 0.2, 'drop_rate': 0.1}
[17:43:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8905342293365548, 'PR_AUC': 0.7022766445708422, 'Precision': 0.7963458110516934, 'TPR': 0.4091666666666667, 'FPR': 0.05645743145743147, 'inference_time [seconds]': 0.33165083991156685, 'train_time [seconds]': 9.149529457092285, 'noise': 0.15, 'drop_rate': 0.2}
[17:43:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6, 'ROC_AUC': 0.8657441860465116, 'PR_AUC': 0.589124511207834, 'Precision': 0.6410984848484849, 'TPR': 0.252, 'FPR': 0.06024088666794798, 'inference_time [seconds]': 0.3331078423394097, 'train_time [seconds]': 9.063140392303467, 'noise': 0.1, 'drop_rate': 0.2}
[17:43:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8180422832980974, 'PR_AUC': 0.5723506924498476, 'Precision': 0.748663101604278, 'TPR': 0.2818181818181818, 'FPR': 0.05392561983471074, 'inference_time [seconds]': 0.3516303168402778, 'train_time [seconds]': 9.071801900863647, 'noise': 0.2, 'drop_rate': 0.1}
[17:43:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7111111111111111, 'ROC_AUC': 0.9332234672304441, 'PR_AUC': 0.693966690931238, 'Precision': 0.7766666666666666, 'TPR': 0.492, 'FPR': 0.04982558139534883, 'inference_time [seconds]': 0.340678956773546, 'train_time [seconds]': 9.153892040252686, 'noise': 0.15, 'drop_rate': 0.15}
mfeat-karhunen.csv
10
[17:44:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.88, 'ROC_AUC': 0.9931388888888888, 'PR_AUC': 0.9725300399270782, 'Precision': 0.9034586221173658, 'TPR': 0.8800000000000001, 'FPR': 0.013333333333333332, 'inference_time [seconds]': 0.09180188179016113, 'train_time [seconds]': 29.41683602333069, 'noise': 0.1, 'drop_rate': 0.1}
[17:44:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.999388888888889, 'PR_AUC': 0.9953068417090158, 'Precision': 0.9548654244306418, 'TPR': 0.95, 'FPR': 0.005555555555555556, 'inference_time [seconds]': 0.09452581405639648, 'train_time [seconds]': 26.73872947692871, 'noise': 0.2, 'drop_rate': 0.15}
[17:45:14] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.955, 'ROC_AUC': 0.9960833333333333, 'PR_AUC': 0.9847123519437593, 'Precision': 0.9571695543205841, 'TPR': 0.9549999999999998, 'FPR': 0.005, 'inference_time [seconds]': 0.11317253112792969, 'train_time [seconds]': 29.041068077087402, 'noise': 0.1, 'drop_rate': 0.15}
[17:45:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.91, 'ROC_AUC': 0.9953055555555557, 'PR_AUC': 0.9751149429137215, 'Precision': 0.9178468899521531, 'TPR': 0.9099999999999999, 'FPR': 0.01, 'inference_time [seconds]': 0.09338021278381348, 'train_time [seconds]': 27.320042848587036, 'noise': 0.2, 'drop_rate': 0.1}
[17:46:14] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9966111111111111, 'PR_AUC': 0.9835795769358484, 'Precision': 0.9518113465481888, 'TPR': 0.95, 'FPR': 0.005555555555555556, 'inference_time [seconds]': 0.09273529052734375, 'train_time [seconds]': 29.0623836517334, 'noise': 0.2, 'drop_rate': 0.1}
[17:46:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.925, 'ROC_AUC': 0.9936666666666667, 'PR_AUC': 0.9708509000629381, 'Precision': 0.9271428571428573, 'TPR': 0.925, 'FPR': 0.008333333333333333, 'inference_time [seconds]': 0.09186744689941406, 'train_time [seconds]': 28.32201313972473, 'noise': 0.2, 'drop_rate': 0.15}
[17:47:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.915, 'ROC_AUC': 0.9952500000000001, 'PR_AUC': 0.9754655214372754, 'Precision': 0.9212303692179853, 'TPR': 0.915, 'FPR': 0.009444444444444445, 'inference_time [seconds]': 0.0956416130065918, 'train_time [seconds]': 29.397651195526123, 'noise': 0.2, 'drop_rate': 0.15}
[17:47:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.91, 'ROC_AUC': 0.9943333333333333, 'PR_AUC': 0.9677104207780491, 'Precision': 0.9226421404682273, 'TPR': 0.9099999999999998, 'FPR': 0.01, 'inference_time [seconds]': 0.0924825668334961, 'train_time [seconds]': 28.937200784683228, 'noise': 0.2, 'drop_rate': 0.1}
[17:48:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.855, 'ROC_AUC': 0.9978888888888889, 'PR_AUC': 0.9870517245228043, 'Precision': 0.8932259222259222, 'TPR': 0.8549999999999999, 'FPR': 0.01611111111111111, 'inference_time [seconds]': 0.09372711181640625, 'train_time [seconds]': 30.154115200042725, 'noise': 0.1, 'drop_rate': 0.2}
[17:48:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9981944444444444, 'PR_AUC': 0.9898445025607499, 'Precision': 0.9522476646160856, 'TPR': 0.9499999999999998, 'FPR': 0.005555555555555556, 'inference_time [seconds]': 0.09103536605834961, 'train_time [seconds]': 29.02973747253418, 'noise': 0.2, 'drop_rate': 0.1}
plant-margin.csv
100
[17:49:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.59375, 'ROC_AUC': 0.9918177294801369, 'PR_AUC': 0.8042639801569336, 'Precision': 0.7646666666666667, 'TPR': 0.62, 'FPR': 0.0041039726136454105, 'inference_time [seconds]': 0.6358310580253601, 'train_time [seconds]': 36.328383922576904, 'noise': 0.2, 'drop_rate': 0.15}
[17:50:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.61875, 'ROC_AUC': 0.9923244566515405, 'PR_AUC': 0.8423778767528768, 'Precision': 0.7774523809523809, 'TPR': 0.635, 'FPR': 0.003852400286601385, 'inference_time [seconds]': 0.6462574005126953, 'train_time [seconds]': 38.84642052650452, 'noise': 0.2, 'drop_rate': 0.2}
[17:50:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6375, 'ROC_AUC': 0.9907310325611017, 'PR_AUC': 0.8955597800762033, 'Precision': 0.8185000000000001, 'TPR': 0.66, 'FPR': 0.0036601385240028657, 'inference_time [seconds]': 0.6407350301742554, 'train_time [seconds]': 39.248974084854126, 'noise': 0.15, 'drop_rate': 0.1}
[17:51:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.63125, 'ROC_AUC': 0.9900131358968235, 'PR_AUC': 0.8686924210626868, 'Precision': 0.8111666666666667, 'TPR': 0.655, 'FPR': 0.0037278082955178727, 'inference_time [seconds]': 0.6341889500617981, 'train_time [seconds]': 41.482980251312256, 'noise': 0.15, 'drop_rate': 0.1}
[17:52:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.59375, 'ROC_AUC': 0.9943770400445827, 'PR_AUC': 0.8260576506826507, 'Precision': 0.8153333333333334, 'TPR': 0.61, 'FPR': 0.004102778441206911, 'inference_time [seconds]': 0.6377816200256348, 'train_time [seconds]': 40.299012899398804, 'noise': 0.15, 'drop_rate': 0.15}
[17:53:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55625, 'ROC_AUC': 0.9902987421383648, 'PR_AUC': 0.7991682402846194, 'Precision': 0.7056666666666667, 'TPR': 0.57, 'FPR': 0.004483321391608949, 'inference_time [seconds]': 0.6310731172561646, 'train_time [seconds]': 35.770976305007935, 'noise': 0.2, 'drop_rate': 0.2}
[17:53:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.65625, 'ROC_AUC': 0.9911267016957249, 'PR_AUC': 0.822863278527662, 'Precision': 0.8106666666666668, 'TPR': 0.64, 'FPR': 0.0034722553936788474, 'inference_time [seconds]': 0.6284475326538086, 'train_time [seconds]': 37.869216442108154, 'noise': 0.1, 'drop_rate': 0.2}
[17:54:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.59375, 'ROC_AUC': 0.987296990685455, 'PR_AUC': 0.79457720850578, 'Precision': 0.7777063492063492, 'TPR': 0.6, 'FPR': 0.00409800175145291, 'inference_time [seconds]': 0.6399646401405334, 'train_time [seconds]': 35.91760444641113, 'noise': 0.2, 'drop_rate': 0.2}
[17:55:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.61875, 'ROC_AUC': 0.9891109386195366, 'PR_AUC': 0.8160057462622864, 'Precision': 0.7920238095238095, 'TPR': 0.62, 'FPR': 0.0038512061141628856, 'inference_time [seconds]': 0.6340250372886658, 'train_time [seconds]': 37.52404856681824, 'noise': 0.2, 'drop_rate': 0.2}
[17:55:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55, 'ROC_AUC': 0.9914748029615477, 'PR_AUC': 0.8187787725346548, 'Precision': 0.7825, 'TPR': 0.55, 'FPR': 0.004541835841095455, 'inference_time [seconds]': 0.6358429789543152, 'train_time [seconds]': 40.049888610839844, 'noise': 0.15, 'drop_rate': 0.1}
steel-plates.csv
7
[17:56:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.764102564102564, 'ROC_AUC': 0.9658057279533573, 'PR_AUC': 0.9045837178062957, 'Precision': 0.8337221100378995, 'TPR': 0.7387977863210062, 'FPR': 0.046131621959943865, 'inference_time [seconds]': 0.08013065044696514, 'train_time [seconds]': 26.869097232818604, 'noise': 0.2, 'drop_rate': 0.15}
[17:56:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7474226804123711, 'ROC_AUC': 0.9476408450028776, 'PR_AUC': 0.8310170373880695, 'Precision': 0.8127929241600753, 'TPR': 0.7397219163210635, 'FPR': 0.04798251898728058, 'inference_time [seconds]': 0.10437080540607885, 'train_time [seconds]': 27.572411060333252, 'noise': 0.15, 'drop_rate': 0.15}
[17:57:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7474226804123711, 'ROC_AUC': 0.9227366290894621, 'PR_AUC': 0.7690233205095044, 'Precision': 0.8151937229371222, 'TPR': 0.7095628864271551, 'FPR': 0.05062413771947679, 'inference_time [seconds]': 0.08054615296039384, 'train_time [seconds]': 27.383480548858643, 'noise': 0.15, 'drop_rate': 0.2}
[17:57:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8041237113402062, 'ROC_AUC': 0.9605660509415829, 'PR_AUC': 0.8781114805964619, 'Precision': 0.8479152005629839, 'TPR': 0.8142030233448144, 'FPR': 0.03867684066504469, 'inference_time [seconds]': 0.08077719776900773, 'train_time [seconds]': 27.780078649520874, 'noise': 0.2, 'drop_rate': 0.15}
[17:58:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7474226804123711, 'ROC_AUC': 0.9528962834496829, 'PR_AUC': 0.8596204616427744, 'Precision': 0.8434739863311291, 'TPR': 0.7660535420887795, 'FPR': 0.04880846090724305, 'inference_time [seconds]': 0.08069362837014739, 'train_time [seconds]': 25.28766918182373, 'noise': 0.15, 'drop_rate': 0.1}
[17:58:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7371134020618557, 'ROC_AUC': 0.9529324035339434, 'PR_AUC': 0.8373879152192804, 'Precision': 0.7779527595634127, 'TPR': 0.7021095002143706, 'FPR': 0.05249332850410128, 'inference_time [seconds]': 0.0887040010432607, 'train_time [seconds]': 27.214678287506104, 'noise': 0.2, 'drop_rate': 0.15}
[17:59:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7577319587628866, 'ROC_AUC': 0.9635646864793976, 'PR_AUC': 0.885494024567457, 'Precision': 0.8197725210035054, 'TPR': 0.730902269575217, 'FPR': 0.04762746011426131, 'inference_time [seconds]': 0.09165965404707133, 'train_time [seconds]': 27.593282222747803, 'noise': 0.1, 'drop_rate': 0.15}
[17:59:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7474226804123711, 'ROC_AUC': 0.9570011976189831, 'PR_AUC': 0.8669647201937746, 'Precision': 0.8564265099979386, 'TPR': 0.7330523802926712, 'FPR': 0.05064013900988672, 'inference_time [seconds]': 0.08101438738636135, 'train_time [seconds]': 27.779916048049927, 'noise': 0.1, 'drop_rate': 0.2}
[18:00:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7938144329896907, 'ROC_AUC': 0.9466893278120637, 'PR_AUC': 0.8547469416667598, 'Precision': 0.8549998699565655, 'TPR': 0.7913349550346453, 'FPR': 0.040841685582308086, 'inference_time [seconds]': 0.08127738520042184, 'train_time [seconds]': 27.66755986213684, 'noise': 0.15, 'drop_rate': 0.2}
[18:00:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6907216494845361, 'ROC_AUC': 0.9432370669613114, 'PR_AUC': 0.7839044199622256, 'Precision': 0.736086136086136, 'TPR': 0.6798052824368614, 'FPR': 0.06142970560549017, 'inference_time [seconds]': 0.08176774093785237, 'train_time [seconds]': 27.704056978225708, 'noise': 0.15, 'drop_rate': 0.1}
bank.csv
2
[18:01:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8962472406181016, 'ROC_AUC': 0.9117452830188679, 'PR_AUC': 0.8025620554567681, 'Precision': 0.8081679140904654, 'TPR': 0.5893396226415094, 'FPR': 0.4106603773584906, 'inference_time [seconds]': 0.11526669887517461, 'train_time [seconds]': 57.524181842803955, 'noise': 0.1, 'drop_rate': 0.15}
[18:02:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8893805309734514, 'ROC_AUC': 0.8683653846153846, 'PR_AUC': 0.7257053747768738, 'Precision': 0.7293906810035842, 'TPR': 0.5861538461538461, 'FPR': 0.41384615384615386, 'inference_time [seconds]': 0.04964381192637756, 'train_time [seconds]': 57.316304445266724, 'noise': 0.2, 'drop_rate': 0.1}
[18:03:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8982300884955752, 'ROC_AUC': 0.8900000000000001, 'PR_AUC': 0.7300706962185539, 'Precision': 0.7692757009345794, 'TPR': 0.6329807692307692, 'FPR': 0.36701923076923076, 'inference_time [seconds]': 0.040884039043325236, 'train_time [seconds]': 57.28388786315918, 'noise': 0.2, 'drop_rate': 0.1}
[18:04:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8849557522123894, 'ROC_AUC': 0.9245673076923078, 'PR_AUC': 0.7651952344879822, 'Precision': 0.6959459459459459, 'TPR': 0.5334615384615384, 'FPR': 0.46653846153846157, 'inference_time [seconds]': 0.036318217758583814, 'train_time [seconds]': 57.61517548561096, 'noise': 0.15, 'drop_rate': 0.2}
[18:05:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8893805309734514, 'ROC_AUC': 0.8987019230769231, 'PR_AUC': 0.7481003716980772, 'Precision': 0.7795216741405082, 'TPR': 0.5359615384615385, 'FPR': 0.46403846153846157, 'inference_time [seconds]': 0.048806709525859464, 'train_time [seconds]': 58.12008762359619, 'noise': 0.15, 'drop_rate': 0.2}
[18:06:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.915929203539823, 'ROC_AUC': 0.9038581730769231, 'PR_AUC': 0.7938231079002385, 'Precision': 0.8194483535040811, 'TPR': 0.7182692307692308, 'FPR': 0.28173076923076923, 'inference_time [seconds]': 0.03797554336817919, 'train_time [seconds]': 57.35543942451477, 'noise': 0.15, 'drop_rate': 0.2}
[18:07:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9048672566371682, 'ROC_AUC': 0.9238942307692308, 'PR_AUC': 0.7737500908958399, 'Precision': 0.7845758945674661, 'TPR': 0.6785576923076924, 'FPR': 0.3214423076923077, 'inference_time [seconds]': 0.0525665494193018, 'train_time [seconds]': 57.341490507125854, 'noise': 0.15, 'drop_rate': 0.2}
[18:08:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8893805309734514, 'ROC_AUC': 0.8876442307692307, 'PR_AUC': 0.7196041958948524, 'Precision': 0.759572072072072, 'TPR': 0.5443269230769231, 'FPR': 0.4556730769230769, 'inference_time [seconds]': 0.04024051986964403, 'train_time [seconds]': 57.33478784561157, 'noise': 0.1, 'drop_rate': 0.2}
[18:09:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8915929203539823, 'ROC_AUC': 0.8766826923076922, 'PR_AUC': 0.7261572001648284, 'Precision': 0.745841784989858, 'TPR': 0.5874038461538462, 'FPR': 0.41259615384615383, 'inference_time [seconds]': 0.03625703068961084, 'train_time [seconds]': 57.317639112472534, 'noise': 0.2, 'drop_rate': 0.2}
[18:10:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8938053097345132, 'ROC_AUC': 0.9426442307692309, 'PR_AUC': 0.8143978011102795, 'Precision': 0.8231981981981982, 'TPR': 0.5551923076923077, 'FPR': 0.4448076923076923, 'inference_time [seconds]': 0.042765541414243984, 'train_time [seconds]': 57.36537408828735, 'noise': 0.2, 'drop_rate': 0.2}
molec-biol-splice.csv
3
[18:10:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9122257053291536, 'ROC_AUC': 0.9812874912048466, 'PR_AUC': 0.9676749540309473, 'Precision': 0.9014403323923093, 'TPR': 0.8995670995670996, 'FPR': 0.045651318378591106, 'inference_time [seconds]': 0.04896624334927263, 'train_time [seconds]': 43.213809967041016, 'noise': 0.15, 'drop_rate': 0.1}
[18:11:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9278996865203761, 'ROC_AUC': 0.9786113794378256, 'PR_AUC': 0.9553197221045645, 'Precision': 0.9199362522147331, 'TPR': 0.9327561327561327, 'FPR': 0.0371900826446281, 'inference_time [seconds]': 0.04893410542168214, 'train_time [seconds]': 43.169294118881226, 'noise': 0.2, 'drop_rate': 0.2}
[18:12:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9028213166144201, 'ROC_AUC': 0.9846397862926789, 'PR_AUC': 0.9671432960689152, 'Precision': 0.9299452562610457, 'TPR': 0.8704184704184704, 'FPR': 0.06395120031483668, 'inference_time [seconds]': 0.05001035229913119, 'train_time [seconds]': 43.26749610900879, 'noise': 0.2, 'drop_rate': 0.15}
[18:13:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9184952978056427, 'ROC_AUC': 0.9849534304079759, 'PR_AUC': 0.9686086059698161, 'Precision': 0.9084678695789806, 'TPR': 0.9174603174603174, 'FPR': 0.04210940574576938, 'inference_time [seconds]': 0.04896624334927263, 'train_time [seconds]': 43.21095585823059, 'noise': 0.2, 'drop_rate': 0.2}
[18:13:50] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8432601880877743, 'ROC_AUC': 0.979600014310758, 'PR_AUC': 0.9636064341464925, 'Precision': 0.8750380749314651, 'TPR': 0.8020202020202021, 'FPR': 0.09956709956709957, 'inference_time [seconds]': 0.15547357756516028, 'train_time [seconds]': 43.26326870918274, 'noise': 0.1, 'drop_rate': 0.2}
[18:14:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8996865203761756, 'ROC_AUC': 0.9846477690029684, 'PR_AUC': 0.9658942353733093, 'Precision': 0.8935158096834743, 'TPR': 0.8911318548287476, 'FPR': 0.055254799263513864, 'inference_time [seconds]': 0.053607558008271695, 'train_time [seconds]': 43.210546255111694, 'noise': 0.15, 'drop_rate': 0.15}
[18:15:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9216300940438872, 'ROC_AUC': 0.9889692753153921, 'PR_AUC': 0.9728747385939984, 'Precision': 0.9325, 'TPR': 0.900147411244431, 'FPR': 0.048834886129399895, 'inference_time [seconds]': 0.04978164983767327, 'train_time [seconds]': 42.63191533088684, 'noise': 0.2, 'drop_rate': 0.1}
[18:16:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8683385579937304, 'ROC_AUC': 0.9677834656321327, 'PR_AUC': 0.9446143527726973, 'Precision': 0.8754365641424896, 'TPR': 0.8403662496877463, 'FPR': 0.07785953547490486, 'inference_time [seconds]': 0.38611253600882883, 'train_time [seconds]': 42.39779543876648, 'noise': 0.1, 'drop_rate': 0.1}
[18:16:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9122257053291536, 'ROC_AUC': 0.9810601531212478, 'PR_AUC': 0.9593732060905688, 'Precision': 0.9120413436692506, 'TPR': 0.8992209439260802, 'FPR': 0.05054639615938883, 'inference_time [seconds]': 0.5140020555837027, 'train_time [seconds]': 42.50495982170105, 'noise': 0.2, 'drop_rate': 0.15}
[18:17:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8683385579937304, 'ROC_AUC': 0.9807970416906286, 'PR_AUC': 0.9569063715474426, 'Precision': 0.8554727587671994, 'TPR': 0.8690153642594987, 'FPR': 0.06654016230169925, 'inference_time [seconds]': 0.048705402960224214, 'train_time [seconds]': 42.334145307540894, 'noise': 0.15, 'drop_rate': 0.2}
plant-shape.csv
100
[18:18:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5, 'ROC_AUC': 0.9653668099673594, 'PR_AUC': 0.6781824396435703, 'Precision': 0.6979523809523809, 'TPR': 0.52, 'FPR': 0.005051747472335004, 'inference_time [seconds]': 0.6339147686958313, 'train_time [seconds]': 38.3133499622345, 'noise': 0.15, 'drop_rate': 0.2}
[18:18:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5, 'ROC_AUC': 0.9733231828676061, 'PR_AUC': 0.6748174214631539, 'Precision': 0.7132063492063492, 'TPR': 0.525, 'FPR': 0.005051349414855505, 'inference_time [seconds]': 0.6361976265907288, 'train_time [seconds]': 33.808866024017334, 'noise': 0.2, 'drop_rate': 0.1}
[18:19:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.50625, 'ROC_AUC': 0.9746238356818724, 'PR_AUC': 0.7005107417996669, 'Precision': 0.7031666666666667, 'TPR': 0.495, 'FPR': 0.004984873815778998, 'inference_time [seconds]': 0.6234169006347656, 'train_time [seconds]': 36.426393270492554, 'noise': 0.1, 'drop_rate': 0.1}
[18:20:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.53125, 'ROC_AUC': 0.9664023565002786, 'PR_AUC': 0.6660752436243412, 'Precision': 0.701047619047619, 'TPR': 0.51, 'FPR': 0.004731311201337474, 'inference_time [seconds]': 0.6431177258491516, 'train_time [seconds]': 36.57793164253235, 'noise': 0.1, 'drop_rate': 0.15}
[18:20:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.45625, 'ROC_AUC': 0.960918119576467, 'PR_AUC': 0.6086220148512895, 'Precision': 0.7166025641025641, 'TPR': 0.45, 'FPR': 0.005486426239949049, 'inference_time [seconds]': 0.6321489810943604, 'train_time [seconds]': 37.441113233566284, 'noise': 0.2, 'drop_rate': 0.1}
[18:21:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.43125, 'ROC_AUC': 0.9705787755751929, 'PR_AUC': 0.6547438642549689, 'Precision': 0.6707063492063492, 'TPR': 0.425, 'FPR': 0.005746755831542075, 'inference_time [seconds]': 0.6325498223304749, 'train_time [seconds]': 40.88997006416321, 'noise': 0.1, 'drop_rate': 0.1}
[18:22:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.56875, 'ROC_AUC': 0.9654304991640792, 'PR_AUC': 0.7436840736686294, 'Precision': 0.7258333333333334, 'TPR': 0.6, 'FPR': 0.004350768250935434, 'inference_time [seconds]': 0.6303861737251282, 'train_time [seconds]': 38.66466450691223, 'noise': 0.1, 'drop_rate': 0.15}
[18:23:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.4875, 'ROC_AUC': 0.9587465169970544, 'PR_AUC': 0.6266733472937319, 'Precision': 0.6919999999999998, 'TPR': 0.47, 'FPR': 0.005175145290980018, 'inference_time [seconds]': 0.6337180733680725, 'train_time [seconds]': 40.57593035697937, 'noise': 0.2, 'drop_rate': 0.15}
[18:24:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55625, 'ROC_AUC': 0.9737918955497175, 'PR_AUC': 0.7209208800649316, 'Precision': 0.7005476190476191, 'TPR': 0.57, 'FPR': 0.004484117506567948, 'inference_time [seconds]': 0.650593638420105, 'train_time [seconds]': 38.91777038574219, 'noise': 0.2, 'drop_rate': 0.2}
[18:24:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5125, 'ROC_AUC': 0.9584583233818964, 'PR_AUC': 0.6632522977826922, 'Precision': 0.7175, 'TPR': 0.52, 'FPR': 0.004925165193853993, 'inference_time [seconds]': 0.630544126033783, 'train_time [seconds]': 35.45992732048035, 'noise': 0.15, 'drop_rate': 0.15}
wall-following.csv
4
[18:25:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9761904761904762, 'ROC_AUC': 0.9999930284439487, 'PR_AUC': 0.9999897624897625, 'Precision': 0.9854260089686099, 'TPR': 0.9659090909090909, 'FPR': 0.009672619047619048, 'inference_time [seconds]': 0.06204909020727807, 'train_time [seconds]': 67.87859845161438, 'noise': 0.2, 'drop_rate': 0.15}
[18:27:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9963369963369964, 'ROC_AUC': 0.9996641851351278, 'PR_AUC': 0.9985888413547552, 'Precision': 0.9958389754005867, 'TPR': 0.9977272727272728, 'FPR': 0.0012840044225033427, 'inference_time [seconds]': 0.04566239786672068, 'train_time [seconds]': 69.37291145324707, 'noise': 0.2, 'drop_rate': 0.1}
[18:28:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9853479853479854, 'ROC_AUC': 0.9994275272325652, 'PR_AUC': 0.9969353436097621, 'Precision': 0.9908256880733946, 'TPR': 0.9715909090909092, 'FPR': 0.005952380952380952, 'inference_time [seconds]': 0.267093871539329, 'train_time [seconds]': 69.1271231174469, 'noise': 0.15, 'drop_rate': 0.15}
[18:29:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.967032967032967, 'ROC_AUC': 0.999805081796032, 'PR_AUC': 0.9997713053563553, 'Precision': 0.9784960819770947, 'TPR': 0.9531115868353364, 'FPR': 0.0136168798803788, 'inference_time [seconds]': 0.03898187434716976, 'train_time [seconds]': 69.24021553993225, 'noise': 0.2, 'drop_rate': 0.1}
[18:30:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9615384615384616, 'ROC_AUC': 0.9968658350912902, 'PR_AUC': 0.9910215503422786, 'Precision': 0.9743616017090195, 'TPR': 0.9383142346606109, 'FPR': 0.015486316082159217, 'inference_time [seconds]': 0.04557244506947723, 'train_time [seconds]': 69.48611998558044, 'noise': 0.1, 'drop_rate': 0.1}
[18:31:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.989010989010989, 'ROC_AUC': 0.9999893515823548, 'PR_AUC': 0.9999830730342151, 'Precision': 0.9930232558139535, 'TPR': 0.9830064808803293, 'FPR': 0.004451038575667656, 'inference_time [seconds]': 0.03853735032972399, 'train_time [seconds]': 69.48861479759216, 'noise': 0.2, 'drop_rate': 0.1}
[18:32:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.981651376146789, 'ROC_AUC': 0.9980544439729552, 'PR_AUC': 0.9935598391218118, 'Precision': 0.9888309367467376, 'TPR': 0.9685835931464518, 'FPR': 0.007665376819605675, 'inference_time [seconds]': 0.03902102829119481, 'train_time [seconds]': 69.2589898109436, 'noise': 0.15, 'drop_rate': 0.15}
[18:34:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.981651376146789, 'ROC_AUC': 0.9992247215533038, 'PR_AUC': 0.997127655180513, 'Precision': 0.986656232473216, 'TPR': 0.9619626696832579, 'FPR': 0.007281710995458672, 'inference_time [seconds]': 0.045914168751567876, 'train_time [seconds]': 69.08861660957336, 'noise': 0.15, 'drop_rate': 0.2}
[18:35:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.998165137614679, 'ROC_AUC': 0.999982925650444, 'PR_AUC': 0.9999479803017863, 'Precision': 0.998868778280543, 'TPR': 0.9969512195121951, 'FPR': 0.0007692307692307692, 'inference_time [seconds]': 0.039657102812320814, 'train_time [seconds]': 69.33197021484375, 'noise': 0.2, 'drop_rate': 0.1}
[18:36:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9908256880733946, 'ROC_AUC': 0.997982718126934, 'PR_AUC': 0.9958665886587025, 'Precision': 0.9941860465116279, 'TPR': 0.9776145602365115, 'FPR': 0.0037313432835820895, 'inference_time [seconds]': 0.039980827121559634, 'train_time [seconds]': 69.30040907859802, 'noise': 0.2, 'drop_rate': 0.2}
chess-krvkp.csv
2
[18:37:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.975, 'ROC_AUC': 0.9988650150679034, 'PR_AUC': 0.998882435273535, 'Precision': 0.9748818313215359, 'TPR': 0.9757739423114555, 'FPR': 0.024226057688544477, 'inference_time [seconds]': 0.041732192039489746, 'train_time [seconds]': 41.68103909492493, 'noise': 0.2, 'drop_rate': 0.15}
[18:37:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95625, 'ROC_AUC': 0.9978083049587101, 'PR_AUC': 0.9978552626402959, 'Precision': 0.9560117302052786, 'TPR': 0.9564400610543619, 'FPR': 0.04355993894563814, 'inference_time [seconds]': 0.044449418783187866, 'train_time [seconds]': 41.70654559135437, 'noise': 0.1, 'drop_rate': 0.15}
[18:38:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.946875, 'ROC_AUC': 0.9977691675472584, 'PR_AUC': 0.9978105187291355, 'Precision': 0.9491792929292929, 'TPR': 0.9455402919650895, 'FPR': 0.05445970803491057, 'inference_time [seconds]': 0.04854649305343628, 'train_time [seconds]': 41.783297300338745, 'noise': 0.15, 'drop_rate': 0.15}
[18:39:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.93125, 'ROC_AUC': 0.9942859379280655, 'PR_AUC': 0.9944798504674985, 'Precision': 0.9309913641514596, 'TPR': 0.931666079605495, 'FPR': 0.06833392039450512, 'inference_time [seconds]': 0.04749596118927002, 'train_time [seconds]': 41.80969953536987, 'noise': 0.2, 'drop_rate': 0.2}
[18:39:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.965625, 'ROC_AUC': 0.9990607021251614, 'PR_AUC': 0.9990726035067422, 'Precision': 0.9666090509113765, 'TPR': 0.964874173222183, 'FPR': 0.035125826777816914, 'inference_time [seconds]': 0.041269510984420776, 'train_time [seconds]': 41.697731733322144, 'noise': 0.15, 'drop_rate': 0.1}
[18:40:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.875, 'ROC_AUC': 0.9796876834566162, 'PR_AUC': 0.9808817835563646, 'Precision': 0.8749559152004389, 'TPR': 0.8744863214746976, 'FPR': 0.12551367852530235, 'inference_time [seconds]': 0.04161745309829712, 'train_time [seconds]': 41.861605405807495, 'noise': 0.1, 'drop_rate': 0.15}
[18:41:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9498432601880877, 'ROC_AUC': 0.9992908919004098, 'PR_AUC': 0.9992977596390378, 'Precision': 0.9549403475058051, 'TPR': 0.9476638827607942, 'FPR': 0.0523361172392058, 'inference_time [seconds]': 0.04164328022062965, 'train_time [seconds]': 41.83244204521179, 'noise': 0.15, 'drop_rate': 0.1}
[18:42:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8996865203761756, 'ROC_AUC': 0.9890088244563504, 'PR_AUC': 0.9894487658824708, 'Precision': 0.9028332003192339, 'TPR': 0.8976914591868894, 'FPR': 0.10230854081311062, 'inference_time [seconds]': 0.05113144279647397, 'train_time [seconds]': 41.62328124046326, 'noise': 0.2, 'drop_rate': 0.15}
[18:42:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9623824451410659, 'ROC_AUC': 0.9989363378506146, 'PR_AUC': 0.9989492302239362, 'Precision': 0.964484126984127, 'TPR': 0.961117239205799, 'FPR': 0.03888276079420107, 'inference_time [seconds]': 0.04526888688903617, 'train_time [seconds]': 41.63878774642944, 'noise': 0.15, 'drop_rate': 0.15}
[18:43:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9247648902821317, 'ROC_AUC': 0.991731632412001, 'PR_AUC': 0.9920505429267008, 'Precision': 0.9245279307631786, 'TPR': 0.9248956610756753, 'FPR': 0.07510433892432475, 'inference_time [seconds]': 0.04433315002058741, 'train_time [seconds]': 41.65826392173767, 'noise': 0.15, 'drop_rate': 0.2}
mushroom.csv
2
[18:45:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.976629766297663, 'ROC_AUC': 0.9998909302438315, 'PR_AUC': 0.9998915979439562, 'Precision': 0.9781187214611872, 'TPR': 0.9758531678704736, 'FPR': 0.024146832129526397, 'inference_time [seconds]': 0.10020207948203749, 'train_time [seconds]': 101.04288840293884, 'noise': 0.2, 'drop_rate': 0.15}
[18:46:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.993849938499385, 'ROC_AUC': 0.9999757622764069, 'PR_AUC': 0.9999758150014557, 'Precision': 0.9939976718242227, 'TPR': 0.9937103107276164, 'FPR': 0.006289689272383537, 'inference_time [seconds]': 0.032495601883966836, 'train_time [seconds]': 101.39258527755737, 'noise': 0.15, 'drop_rate': 0.2}
[18:48:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9876998769987699, 'ROC_AUC': 0.9998545736584419, 'PR_AUC': 0.9998553201426268, 'Precision': 0.9877795962902346, 'TPR': 0.9875963449512821, 'FPR': 0.012403655048717824, 'inference_time [seconds]': 0.05714714453815681, 'train_time [seconds]': 101.13604474067688, 'noise': 0.1, 'drop_rate': 0.15}
[18:50:14] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.991389913899139, 'ROC_AUC': 0.9999272868292209, 'PR_AUC': 0.999927489480499, 'Precision': 0.9914243463715591, 'TPR': 0.9913350138155024, 'FPR': 0.008664986184497552, 'inference_time [seconds]': 0.03441614711709861, 'train_time [seconds]': 101.12659811973572, 'noise': 0.15, 'drop_rate': 0.1}
[18:51:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9766009852216748, 'ROC_AUC': 0.9997084548104958, 'PR_AUC': 0.9997107166408714, 'Precision': 0.9775664657814718, 'TPR': 0.9760204081632653, 'FPR': 0.023979591836734693, 'inference_time [seconds]': 0.03572902068715965, 'train_time [seconds]': 101.11998152732849, 'noise': 0.15, 'drop_rate': 0.1}
[18:53:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9827586206896551, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9827586206896552, 'TPR': 0.9833333333333334, 'FPR': 0.016666666666666666, 'inference_time [seconds]': 0.03238117753578524, 'train_time [seconds]': 101.13318061828613, 'noise': 0.15, 'drop_rate': 0.15}
[18:55:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9938423645320197, 'ROC_AUC': 0.9999757002873442, 'PR_AUC': 0.999975752838141, 'Precision': 0.9937276856192165, 'TPR': 0.9939706337972554, 'FPR': 0.006029366202744653, 'inference_time [seconds]': 0.03191549789729377, 'train_time [seconds]': 101.22481918334961, 'noise': 0.2, 'drop_rate': 0.15}
[18:56:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9864532019704434, 'ROC_AUC': 0.9998116772269168, 'PR_AUC': 0.9998126425537122, 'Precision': 0.9864807388504071, 'TPR': 0.9863891234486152, 'FPR': 0.013610876551384779, 'inference_time [seconds]': 0.035760731532655916, 'train_time [seconds]': 101.05934739112854, 'noise': 0.1, 'drop_rate': 0.1}
[18:58:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9889162561576355, 'ROC_AUC': 0.9998785014367205, 'PR_AUC': 0.9998790649009996, 'Precision': 0.9889476242556812, 'TPR': 0.9888555442831888, 'FPR': 0.01114445571681115, 'inference_time [seconds]': 0.03869339750318104, 'train_time [seconds]': 101.33171582221985, 'noise': 0.1, 'drop_rate': 0.1}
[19:00:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9889162561576355, 'ROC_AUC': 0.9999149510057044, 'PR_AUC': 0.9999152628618376, 'Precision': 0.989193363983556, 'TPR': 0.9886732964382696, 'FPR': 0.011326703561730381, 'inference_time [seconds]': 0.03612188282858562, 'train_time [seconds]': 101.32858061790466, 'noise': 0.15, 'drop_rate': 0.1}
plant-texture.csv
100
[19:01:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.68125, 'ROC_AUC': 0.9881762996576705, 'PR_AUC': 0.8418702299511124, 'Precision': 0.8335952380952381, 'TPR': 0.68, 'FPR': 0.0032198869516758223, 'inference_time [seconds]': 0.6410062313079834, 'train_time [seconds]': 38.27821159362793, 'noise': 0.15, 'drop_rate': 0.15}
[19:01:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.65, 'ROC_AUC': 0.9879933922458403, 'PR_AUC': 0.8214116700487409, 'Precision': 0.8042619047619048, 'TPR': 0.675, 'FPR': 0.0035343523604808537, 'inference_time [seconds]': 0.6245240569114685, 'train_time [seconds]': 37.13156795501709, 'noise': 0.15, 'drop_rate': 0.2}
[19:02:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.54375, 'ROC_AUC': 0.9882778043149432, 'PR_AUC': 0.8332781642877388, 'Precision': 0.7696785714285715, 'TPR': 0.545, 'FPR': 0.004609505612610461, 'inference_time [seconds]': 0.6341561675071716, 'train_time [seconds]': 36.162060022354126, 'noise': 0.2, 'drop_rate': 0.1}
[19:03:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9897307141151183, 'PR_AUC': 0.8044755694344429, 'Precision': 0.7848333333333335, 'TPR': 0.6, 'FPR': 0.004164875408008917, 'inference_time [seconds]': 0.635121762752533, 'train_time [seconds]': 33.9308705329895, 'noise': 0.1, 'drop_rate': 0.1}
[19:03:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9742783217896666, 'PR_AUC': 0.7587994452320921, 'Precision': 0.7496904761904761, 'TPR': 0.595, 'FPR': 0.004166467637926916, 'inference_time [seconds]': 0.6220415234565735, 'train_time [seconds]': 35.75761604309082, 'noise': 0.1, 'drop_rate': 0.2}
[19:04:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9902718732584986, 'PR_AUC': 0.812853834675816, 'Precision': 0.7779920634920634, 'TPR': 0.6, 'FPR': 0.004168457925324417, 'inference_time [seconds]': 0.6220236420631409, 'train_time [seconds]': 41.34516668319702, 'noise': 0.1, 'drop_rate': 0.15}
[19:05:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6375, 'ROC_AUC': 0.9903572565878513, 'PR_AUC': 0.8594746732735863, 'Precision': 0.7656666666666666, 'TPR': 0.655, 'FPR': 0.003658944351564366, 'inference_time [seconds]': 0.6209626793861389, 'train_time [seconds]': 39.523433685302734, 'noise': 0.1, 'drop_rate': 0.15}
[19:05:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.63125, 'ROC_AUC': 0.992200660775416, 'PR_AUC': 0.8620506957920752, 'Precision': 0.8073333333333333, 'TPR': 0.645, 'FPR': 0.0037230316057638726, 'inference_time [seconds]': 0.620606541633606, 'train_time [seconds]': 40.39795160293579, 'noise': 0.15, 'drop_rate': 0.1}
[19:06:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.66875, 'ROC_AUC': 0.9882648674468594, 'PR_AUC': 0.8476853140177311, 'Precision': 0.7891666666666666, 'TPR': 0.68, 'FPR': 0.0033444789427593347, 'inference_time [seconds]': 0.6199195981025696, 'train_time [seconds]': 38.27350425720215, 'noise': 0.1, 'drop_rate': 0.2}
[19:07:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5974842767295597, 'ROC_AUC': 0.9871567362734821, 'PR_AUC': 0.7945868106961559, 'Precision': 0.7642738095238095, 'TPR': 0.575, 'FPR': 0.004064339272756591, 'inference_time [seconds]': 0.622458427957019, 'train_time [seconds]': 37.99564599990845, 'noise': 0.2, 'drop_rate': 0.2}
waveform.csv
3
[19:08:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.86, 'ROC_AUC': 0.9653194810262414, 'PR_AUC': 0.9315680578212175, 'Precision': 0.8621548025566939, 'TPR': 0.8593582887700535, 'FPR': 0.07011910146238505, 'inference_time [seconds]': 0.038726806640625, 'train_time [seconds]': 61.704334020614624, 'noise': 0.15, 'drop_rate': 0.2}
[19:09:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.846, 'ROC_AUC': 0.9641724532418124, 'PR_AUC': 0.9314539083133563, 'Precision': 0.8485817425884018, 'TPR': 0.8464052287581699, 'FPR': 0.07694859038142621, 'inference_time [seconds]': 0.27866172790527344, 'train_time [seconds]': 62.80666756629944, 'noise': 0.15, 'drop_rate': 0.1}
[19:10:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.848, 'ROC_AUC': 0.9621860394994722, 'PR_AUC': 0.927090464490329, 'Precision': 0.848349906200275, 'TPR': 0.8472370766488414, 'FPR': 0.07604402231267902, 'inference_time [seconds]': 0.03917884826660156, 'train_time [seconds]': 60.53157377243042, 'noise': 0.2, 'drop_rate': 0.2}
[19:11:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.838, 'ROC_AUC': 0.9600977540472119, 'PR_AUC': 0.9252752478477126, 'Precision': 0.8376703426631487, 'TPR': 0.8377083657441818, 'FPR': 0.08107054289689021, 'inference_time [seconds]': 0.038301944732666016, 'train_time [seconds]': 62.85909366607666, 'noise': 0.15, 'drop_rate': 0.1}
[19:12:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.868, 'ROC_AUC': 0.9771107511721767, 'PR_AUC': 0.9565299727673837, 'Precision': 0.8687361219012719, 'TPR': 0.8677815998571042, 'FPR': 0.0660760729623005, 'inference_time [seconds]': 0.039073944091796875, 'train_time [seconds]': 60.16228628158569, 'noise': 0.15, 'drop_rate': 0.15}
[19:13:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.83, 'ROC_AUC': 0.9611001216590225, 'PR_AUC': 0.9248718786839744, 'Precision': 0.8296857463524131, 'TPR': 0.829646563297667, 'FPR': 0.08500866232902161, 'inference_time [seconds]': 0.038877010345458984, 'train_time [seconds]': 60.14950108528137, 'noise': 0.15, 'drop_rate': 0.15}
[19:14:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.86, 'ROC_AUC': 0.9681441510514105, 'PR_AUC': 0.9379842294100601, 'Precision': 0.8601466142140929, 'TPR': 0.8599672493092326, 'FPR': 0.06996979571991878, 'inference_time [seconds]': 0.039119720458984375, 'train_time [seconds]': 62.674306869506836, 'noise': 0.2, 'drop_rate': 0.1}
[19:15:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/torch/nn/_reduction.py:42: UserWarning: size_average and reduce args will be deprecated, please use reduction='sum' instead.
  warnings.warn(warning.format(ret))
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
{'Accuracy': 0.826, 'ROC_AUC': 0.9598840383971909, 'PR_AUC': 0.9256892232243187, 'Precision': 0.8302046623891798, 'TPR': 0.8253881943409284, 'FPR': 0.08711677065222938, 'inference_time [seconds]': 0.038725852966308594, 'train_time [seconds]': 62.60683608055115, 'noise': 0.2, 'drop_rate': 0.15}
[19:16:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.88, 'ROC_AUC': 0.9764835483409368, 'PR_AUC': 0.9547168033494483, 'Precision': 0.8798449158170242, 'TPR': 0.879594620187762, 'FPR': 0.06001358873091172, 'inference_time [seconds]': 0.03813028335571289, 'train_time [seconds]': 57.339787006378174, 'noise': 0.2, 'drop_rate': 0.1}
[19:17:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.84, 'ROC_AUC': 0.9659072037412969, 'PR_AUC': 0.935883584239698, 'Precision': 0.8398549221902516, 'TPR': 0.8398608599720742, 'FPR': 0.07995590187708634, 'inference_time [seconds]': 0.03928995132446289, 'train_time [seconds]': 62.532636642456055, 'noise': 0.15, 'drop_rate': 0.1}
hill-valley.csv
2
[19:18:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5573770491803278, 'ROC_AUC': 0.6163665681268475, 'PR_AUC': 0.6135816749970702, 'Precision': 0.5583811867651081, 'TPR': 0.5573770491803278, 'FPR': 0.4426229508196721, 'inference_time [seconds]': 0.0877165403522429, 'train_time [seconds]': 16.572667598724365, 'noise': 0.2, 'drop_rate': 0.2}
[19:18:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5163934426229508, 'ROC_AUC': 0.5517334049986562, 'PR_AUC': 0.5591071858564938, 'Precision': 0.5166122004357299, 'TPR': 0.5163934426229508, 'FPR': 0.48360655737704916, 'inference_time [seconds]': 0.08843179608954758, 'train_time [seconds]': 16.65765905380249, 'noise': 0.15, 'drop_rate': 0.1}
[19:18:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5619834710743802, 'ROC_AUC': 0.5476775956284153, 'PR_AUC': 0.541532851781713, 'Precision': 0.562121212121212, 'TPR': 0.5616120218579235, 'FPR': 0.43838797814207653, 'inference_time [seconds]': 0.07077485076652086, 'train_time [seconds]': 16.657240629196167, 'noise': 0.1, 'drop_rate': 0.2}
[19:18:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5041322314049587, 'ROC_AUC': 0.5579234972677596, 'PR_AUC': 0.576325609583831, 'Precision': 0.5040983606557377, 'TPR': 0.5040983606557377, 'FPR': 0.4959016393442623, 'inference_time [seconds]': 0.07242801760839036, 'train_time [seconds]': 16.662915229797363, 'noise': 0.2, 'drop_rate': 0.15}
[19:19:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6198347107438017, 'ROC_AUC': 0.6024590163934426, 'PR_AUC': 0.592931159170129, 'Precision': 0.6320810971973763, 'TPR': 0.6210382513661202, 'FPR': 0.37896174863387977, 'inference_time [seconds]': 0.07866433829315438, 'train_time [seconds]': 16.482372283935547, 'noise': 0.1, 'drop_rate': 0.15}
[19:19:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5454545454545454, 'ROC_AUC': 0.6009562841530054, 'PR_AUC': 0.6256100254048571, 'Precision': 0.559407796101949, 'TPR': 0.5433060109289618, 'FPR': 0.45669398907103825, 'inference_time [seconds]': 0.07065071547326963, 'train_time [seconds]': 16.62992024421692, 'noise': 0.15, 'drop_rate': 0.1}
[19:19:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5371900826446281, 'ROC_AUC': 0.5812841530054644, 'PR_AUC': 0.561016971828274, 'Precision': 0.5376056338028169, 'TPR': 0.5364754098360656, 'FPR': 0.46352459016393444, 'inference_time [seconds]': 0.4298686981201172, 'train_time [seconds]': 16.63827109336853, 'noise': 0.1, 'drop_rate': 0.1}
[19:20:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5289256198347108, 'ROC_AUC': 0.5547814207650272, 'PR_AUC': 0.5820494845470335, 'Precision': 0.5297125483692648, 'TPR': 0.5293715846994536, 'FPR': 0.47062841530054644, 'inference_time [seconds]': 0.07047732014301394, 'train_time [seconds]': 16.686233282089233, 'noise': 0.1, 'drop_rate': 0.15}
[19:20:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6115702479338843, 'ROC_AUC': 0.5915300546448088, 'PR_AUC': 0.5728872837392607, 'Precision': 0.6182748538011695, 'TPR': 0.6105191256830601, 'FPR': 0.3894808743169399, 'inference_time [seconds]': 0.07119257588031863, 'train_time [seconds]': 16.46184253692627, 'noise': 0.15, 'drop_rate': 0.2}
[19:20:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5454545454545454, 'ROC_AUC': 0.583879781420765, 'PR_AUC': 0.580267208638344, 'Precision': 0.5457033388067871, 'TPR': 0.5456284153005464, 'FPR': 0.45437158469945355, 'inference_time [seconds]': 0.07060933704218589, 'train_time [seconds]': 16.774195909500122, 'noise': 0.15, 'drop_rate': 0.2}
musk-1.csv
2
[19:20:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5416666666666666, 'ROC_AUC': 0.7601410934744268, 'PR_AUC': 0.7977854642711539, 'Precision': 0.5391304347826087, 'TPR': 0.5396825396825398, 'FPR': 0.4603174603174603, 'inference_time [seconds]': 0.5829036235809326, 'train_time [seconds]': 8.452787637710571, 'noise': 0.2, 'drop_rate': 0.15}
[19:20:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7708333333333334, 'ROC_AUC': 0.9365079365079365, 'PR_AUC': 0.940056242628777, 'Precision': 0.7722222222222223, 'TPR': 0.7592592592592593, 'FPR': 0.24074074074074073, 'inference_time [seconds]': 0.12931724389394125, 'train_time [seconds]': 8.455310583114624, 'noise': 0.15, 'drop_rate': 0.1}
[19:21:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7083333333333334, 'ROC_AUC': 0.8624338624338624, 'PR_AUC': 0.8637869185157617, 'Precision': 0.7151515151515151, 'TPR': 0.6878306878306879, 'FPR': 0.31216931216931215, 'inference_time [seconds]': 0.19291043281555176, 'train_time [seconds]': 8.561837434768677, 'noise': 0.2, 'drop_rate': 0.15}
[19:21:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6041666666666666, 'ROC_AUC': 0.8165784832451499, 'PR_AUC': 0.8274273814703571, 'Precision': 0.6277777777777778, 'TPR': 0.6216931216931216, 'FPR': 0.37830687830687826, 'inference_time [seconds]': 0.19354124863942465, 'train_time [seconds]': 8.500138282775879, 'noise': 0.2, 'drop_rate': 0.2}
[19:21:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6875, 'ROC_AUC': 0.8800705467372134, 'PR_AUC': 0.8878624889611333, 'Precision': 0.6875, 'TPR': 0.6693121693121693, 'FPR': 0.3306878306878307, 'inference_time [seconds]': 0.19041200478871664, 'train_time [seconds]': 8.509464263916016, 'noise': 0.1, 'drop_rate': 0.1}
[19:21:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6875, 'ROC_AUC': 0.8289241622574957, 'PR_AUC': 0.849567534879062, 'Precision': 0.6821428571428572, 'TPR': 0.6798941798941799, 'FPR': 0.3201058201058201, 'inference_time [seconds]': 0.31808515389760333, 'train_time [seconds]': 8.345731019973755, 'noise': 0.2, 'drop_rate': 0.2}
[19:21:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5319148936170213, 'ROC_AUC': 0.7307692307692307, 'PR_AUC': 0.7653625099720487, 'Precision': 0.5544354838709677, 'TPR': 0.5494505494505495, 'FPR': 0.45054945054945056, 'inference_time [seconds]': 0.1728839062629862, 'train_time [seconds]': 8.423853158950806, 'noise': 0.1, 'drop_rate': 0.15}
[19:21:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.851063829787234, 'ROC_AUC': 0.9444444444444444, 'PR_AUC': 0.941754816033859, 'Precision': 0.8572727272727273, 'TPR': 0.8638888888888889, 'FPR': 0.1361111111111111, 'inference_time [seconds]': 0.13056207210459608, 'train_time [seconds]': 8.363419771194458, 'noise': 0.15, 'drop_rate': 0.15}
[19:21:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7446808510638298, 'ROC_AUC': 0.8888888888888888, 'PR_AUC': 0.897403792633948, 'Precision': 0.7404214559386972, 'TPR': 0.7324074074074074, 'FPR': 0.2675925925925926, 'inference_time [seconds]': 0.16951560974121094, 'train_time [seconds]': 8.372880697250366, 'noise': 0.15, 'drop_rate': 0.1}
[19:22:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6808510638297872, 'ROC_AUC': 0.7777777777777777, 'PR_AUC': 0.8109975143620757, 'Precision': 0.6735294117647059, 'TPR': 0.663888888888889, 'FPR': 0.33611111111111114, 'inference_time [seconds]': 0.8511949092783826, 'train_time [seconds]': 8.454987287521362, 'noise': 0.2, 'drop_rate': 0.15}
semeion.csv
10
[19:22:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.83125, 'ROC_AUC': 0.9945158045977012, 'PR_AUC': 0.9570338782465813, 'Precision': 0.8647995223730518, 'TPR': 0.8308333333333333, 'FPR': 0.018735632183908047, 'inference_time [seconds]': 0.11664777994155884, 'train_time [seconds]': 29.240925550460815, 'noise': 0.2, 'drop_rate': 0.1}
[19:23:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.90625, 'ROC_AUC': 0.992189791723799, 'PR_AUC': 0.9623217613397346, 'Precision': 0.9161928104575164, 'TPR': 0.9060539215686274, 'FPR': 0.010397777509846476, 'inference_time [seconds]': 0.11730194091796875, 'train_time [seconds]': 25.212113618850708, 'noise': 0.2, 'drop_rate': 0.15}
[19:23:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.88125, 'ROC_AUC': 0.9802356863119414, 'PR_AUC': 0.9293536693188467, 'Precision': 0.8945539943372761, 'TPR': 0.881936274509804, 'FPR': 0.013199635613428717, 'inference_time [seconds]': 0.11612176895141602, 'train_time [seconds]': 24.984778881072998, 'noise': 0.15, 'drop_rate': 0.15}
[19:23:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8742138364779874, 'ROC_AUC': 0.9872435897435896, 'PR_AUC': 0.9376569849443724, 'Precision': 0.8874778412162312, 'TPR': 0.8729166666666666, 'FPR': 0.01398115773115773, 'inference_time [seconds]': 0.11824361933102398, 'train_time [seconds]': 29.33827042579651, 'noise': 0.1, 'drop_rate': 0.2}
[19:24:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8616352201257862, 'ROC_AUC': 0.9897983035483036, 'PR_AUC': 0.9499361562506443, 'Precision': 0.8757196299572462, 'TPR': 0.8616666666666667, 'FPR': 0.015379759129759132, 'inference_time [seconds]': 0.13669781714865248, 'train_time [seconds]': 25.41583490371704, 'noise': 0.15, 'drop_rate': 0.15}
[19:24:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8490566037735849, 'ROC_AUC': 0.9896438746438745, 'PR_AUC': 0.9469586693053615, 'Precision': 0.864438483249898, 'TPR': 0.8495833333333334, 'FPR': 0.016778360528360528, 'inference_time [seconds]': 0.1165701908135564, 'train_time [seconds]': 25.214743852615356, 'noise': 0.2, 'drop_rate': 0.2}
[19:25:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8930817610062893, 'ROC_AUC': 0.9812548562548564, 'PR_AUC': 0.9277189845538061, 'Precision': 0.896662014885699, 'TPR': 0.8933333333333333, 'FPR': 0.011883255633255634, 'inference_time [seconds]': 0.11559252469044812, 'train_time [seconds]': 28.681915283203125, 'noise': 0.15, 'drop_rate': 0.1}
[19:25:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.991513209013209, 'PR_AUC': 0.9616933291823544, 'Precision': 0.9145676691729323, 'TPR': 0.9058333333333334, 'FPR': 0.01048951048951049, 'inference_time [seconds]': 0.11697955101541004, 'train_time [seconds]': 25.187111377716064, 'noise': 0.2, 'drop_rate': 0.15}
[19:26:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.949685534591195, 'ROC_AUC': 0.9939983164983165, 'PR_AUC': 0.9685349890292387, 'Precision': 0.9524019607843137, 'TPR': 0.9495833333333333, 'FPR': 0.005589549339549339, 'inference_time [seconds]': 0.11830359884777909, 'train_time [seconds]': 25.070942163467407, 'noise': 0.2, 'drop_rate': 0.15}
[19:26:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8930817610062893, 'ROC_AUC': 0.9883634421134421, 'PR_AUC': 0.9510921578371322, 'Precision': 0.9048418394471025, 'TPR': 0.8933333333333333, 'FPR': 0.011883255633255634, 'inference_time [seconds]': 0.11708151619389372, 'train_time [seconds]': 29.06472396850586, 'noise': 0.1, 'drop_rate': 0.2}
waveform-noise.csv
3
[19:27:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.864, 'ROC_AUC': 0.9618158807765435, 'PR_AUC': 0.9241106970324976, 'Precision': 0.8640564826700898, 'TPR': 0.8641006918115351, 'FPR': 0.0679977286712592, 'inference_time [seconds]': 0.038739681243896484, 'train_time [seconds]': 55.82986617088318, 'noise': 0.15, 'drop_rate': 0.1}
[19:28:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.84, 'ROC_AUC': 0.9594003653478925, 'PR_AUC': 0.9234256639248833, 'Precision': 0.8399921446457932, 'TPR': 0.8402051454878147, 'FPR': 0.07998303793729221, 'inference_time [seconds]': 0.03911542892456055, 'train_time [seconds]': 63.04874539375305, 'noise': 0.1, 'drop_rate': 0.2}
[19:29:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.84, 'ROC_AUC': 0.9664135675716312, 'PR_AUC': 0.9371293874708266, 'Precision': 0.8454806412593975, 'TPR': 0.8409467167576529, 'FPR': 0.07985959811449833, 'inference_time [seconds]': 0.03878593444824219, 'train_time [seconds]': 61.663235664367676, 'noise': 0.15, 'drop_rate': 0.1}
[19:30:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.856, 'ROC_AUC': 0.9638067539368506, 'PR_AUC': 0.9311028797695245, 'Precision': 0.857702011301441, 'TPR': 0.8563206744856421, 'FPR': 0.07195995347538228, 'inference_time [seconds]': 0.03914213180541992, 'train_time [seconds]': 59.69614768028259, 'noise': 0.2, 'drop_rate': 0.1}
[19:31:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.802, 'ROC_AUC': 0.9523445668592393, 'PR_AUC': 0.9059524752408631, 'Precision': 0.8166082041147021, 'TPR': 0.8033166195353405, 'FPR': 0.09875878850586693, 'inference_time [seconds]': 0.04474163055419922, 'train_time [seconds]': 57.4407639503479, 'noise': 0.2, 'drop_rate': 0.1}
[19:33:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.818, 'ROC_AUC': 0.9549957875506602, 'PR_AUC': 0.9067874670113639, 'Precision': 0.8217576315722571, 'TPR': 0.8172905525846703, 'FPR': 0.09118046132971507, 'inference_time [seconds]': 0.03896379470825195, 'train_time [seconds]': 63.021841287612915, 'noise': 0.2, 'drop_rate': 0.2}
[19:34:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.86, 'ROC_AUC': 0.9658677202224174, 'PR_AUC': 0.9347223144390151, 'Precision': 0.8612119688352523, 'TPR': 0.8599524658348189, 'FPR': 0.07011910146238505, 'inference_time [seconds]': 0.03970956802368164, 'train_time [seconds]': 64.95001935958862, 'noise': 0.15, 'drop_rate': 0.15}
[19:35:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.872, 'ROC_AUC': 0.9653010702152541, 'PR_AUC': 0.9334213693468417, 'Precision': 0.8723203371605731, 'TPR': 0.8722893006488928, 'FPR': 0.06396953128958749, 'inference_time [seconds]': 0.03825950622558594, 'train_time [seconds]': 59.026761531829834, 'noise': 0.2, 'drop_rate': 0.15}
[19:36:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.856, 'ROC_AUC': 0.9639151274029144, 'PR_AUC': 0.9299388571487213, 'Precision': 0.856085171848993, 'TPR': 0.856295470567945, 'FPR': 0.0719868735271487, 'inference_time [seconds]': 0.24500560760498047, 'train_time [seconds]': 60.144572019577026, 'noise': 0.2, 'drop_rate': 0.1}
[19:37:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.85, 'ROC_AUC': 0.968565210366076, 'PR_AUC': 0.9406157159640465, 'Precision': 0.8530309009293887, 'TPR': 0.8501287920194315, 'FPR': 0.0749390698694598, 'inference_time [seconds]': 0.03832292556762695, 'train_time [seconds]': 58.39715337753296, 'noise': 0.2, 'drop_rate': 0.15}
low-res-spect.csv
9
[19:37:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8518518518518519, 'ROC_AUC': 0.9899287642631457, 'PR_AUC': 0.8867561193950083, 'Precision': 0.9087301587301587, 'TPR': 0.4755291005291005, 'FPR': 0.03250844762472669, 'inference_time [seconds]': 0.19827153947618273, 'train_time [seconds]': 8.8067626953125, 'noise': 0.2, 'drop_rate': 0.2}
[19:37:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7735849056603774, 'ROC_AUC': 0.9666374366374367, 'PR_AUC': 0.7178086160714576, 'Precision': 0.8445833333333334, 'TPR': 0.5703463203463203, 'FPR': 0.05381673881673882, 'inference_time [seconds]': 0.19842723630509287, 'train_time [seconds]': 8.79631519317627, 'noise': 0.1, 'drop_rate': 0.15}
[19:37:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8679245283018868, 'ROC_AUC': 0.9793616596274403, 'PR_AUC': 0.9317500400833735, 'Precision': 0.6840676883780331, 'TPR': 0.6333333333333333, 'FPR': 0.02851276077189698, 'inference_time [seconds]': 0.21165271974959463, 'train_time [seconds]': 9.681289434432983, 'noise': 0.1, 'drop_rate': 0.2}
[19:37:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.9956698770652258, 'PR_AUC': 0.9881957981373186, 'Precision': 0.8958333333333334, 'TPR': 0.7379629629629628, 'FPR': 0.01881714630884066, 'inference_time [seconds]': 0.19930443673763634, 'train_time [seconds]': 9.126775979995728, 'noise': 0.2, 'drop_rate': 0.15}
[19:37:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8867924528301887, 'ROC_AUC': 0.980839273928975, 'PR_AUC': 0.9060659689819955, 'Precision': 0.7901477832512315, 'TPR': 0.6088624338624339, 'FPR': 0.023532947606879066, 'inference_time [seconds]': 0.19876012262308373, 'train_time [seconds]': 8.742398023605347, 'noise': 0.2, 'drop_rate': 0.15}
[19:38:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8867924528301887, 'ROC_AUC': 0.9904803213274974, 'PR_AUC': 0.9651988392206606, 'Precision': 0.8831168831168831, 'TPR': 0.7695767195767195, 'FPR': 0.021567717996289426, 'inference_time [seconds]': 0.1969607371204304, 'train_time [seconds]': 8.5054349899292, 'noise': 0.2, 'drop_rate': 0.1}
[19:38:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7169811320754716, 'ROC_AUC': 0.974816957375097, 'PR_AUC': 0.8860411825963522, 'Precision': 0.9005102040816327, 'TPR': 0.5182539682539683, 'FPR': 0.05544455544455545, 'inference_time [seconds]': 0.2210635059284714, 'train_time [seconds]': 9.298405408859253, 'noise': 0.2, 'drop_rate': 0.15}
[19:38:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9245283018867925, 'ROC_AUC': 0.8829612248216899, 'PR_AUC': 0.8426200327783862, 'Precision': 0.8428571428571429, 'TPR': 0.6841269841269841, 'FPR': 0.019230769230769235, 'inference_time [seconds]': 0.22592634524939195, 'train_time [seconds]': 9.69653582572937, 'noise': 0.1, 'drop_rate': 0.1}
[19:38:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7924528301886793, 'ROC_AUC': 0.978921595200665, 'PR_AUC': 0.8125768397691682, 'Precision': 0.8880952380952382, 'TPR': 0.3970899470899471, 'FPR': 0.04493181237367284, 'inference_time [seconds]': 0.84237332613963, 'train_time [seconds]': 9.772828817367554, 'noise': 0.1, 'drop_rate': 0.2}
[19:38:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7924528301886793, 'ROC_AUC': 0.9640921248064105, 'PR_AUC': 0.7948271931180689, 'Precision': 0.6365740740740741, 'TPR': 0.5183782267115601, 'FPR': 0.033349063335586245, 'inference_time [seconds]': 0.21245344629827537, 'train_time [seconds]': 9.798283100128174, 'noise': 0.2, 'drop_rate': 0.15}
ozone.csv
2
[19:39:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.9855407750144591, 'PR_AUC': 0.8334821144320963, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.044267008623738925, 'train_time [seconds]': 33.96117353439331, 'noise': 0.15, 'drop_rate': 0.1}
[19:39:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8617698091382302, 'PR_AUC': 0.6956499804715995, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.20581343042568898, 'train_time [seconds]': 34.112870931625366, 'noise': 0.1, 'drop_rate': 0.2}
[19:40:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8455754771544245, 'PR_AUC': 0.6275743540272907, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.05155754840280127, 'train_time [seconds]': 33.919281244277954, 'noise': 0.1, 'drop_rate': 0.2}
[19:41:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.8795731707317074, 'PR_AUC': 0.682210026353646, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.07757333319956862, 'train_time [seconds]': 33.952529430389404, 'noise': 0.15, 'drop_rate': 0.15}
[19:41:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.8826219512195123, 'PR_AUC': 0.6186909919291582, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.06231266682542215, 'train_time [seconds]': 33.90771555900574, 'noise': 0.1, 'drop_rate': 0.2}
[19:42:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.9405487804878049, 'PR_AUC': 0.6589361493813147, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.28943733906182717, 'train_time [seconds]': 33.89184284210205, 'noise': 0.2, 'drop_rate': 0.2}
[19:42:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9683794466403162, 'ROC_AUC': 0.7880371660859466, 'PR_AUC': 0.5628748757833193, 'Precision': 0.4861111111111111, 'TPR': 0.49796747967479676, 'FPR': 0.5020325203252033, 'inference_time [seconds]': 0.32732326522646216, 'train_time [seconds]': 33.9709050655365, 'noise': 0.1, 'drop_rate': 0.15}
[19:43:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8763066202090593, 'PR_AUC': 0.6687085665854586, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.049430862245823555, 'train_time [seconds]': 34.00793194770813, 'noise': 0.1, 'drop_rate': 0.15}
[19:43:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.9657375145180024, 'PR_AUC': 0.6598504674216373, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.06034345966082788, 'train_time [seconds]': 33.84854865074158, 'noise': 0.1, 'drop_rate': 0.1}
[19:44:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8844367015098722, 'PR_AUC': 0.6698821883831877, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.04875235877960567, 'train_time [seconds]': 34.13059902191162, 'noise': 0.2, 'drop_rate': 0.15}
spambase.csv
2
[19:45:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9240780911062907, 'ROC_AUC': 0.9795186891961085, 'PR_AUC': 0.9777017017857641, 'Precision': 0.9242333012202955, 'TPR': 0.916262948521013, 'FPR': 0.08373705147898697, 'inference_time [seconds]': 0.035989827551190096, 'train_time [seconds]': 58.98093891143799, 'noise': 0.1, 'drop_rate': 0.2}
[19:46:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9260869565217391, 'ROC_AUC': 0.9856115107913669, 'PR_AUC': 0.9855601522696199, 'Precision': 0.9279918864097363, 'TPR': 0.9170290141513163, 'FPR': 0.08297098584868369, 'inference_time [seconds]': 0.03849734430727751, 'train_time [seconds]': 58.87831115722656, 'noise': 0.2, 'drop_rate': 0.15}
[19:47:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9434782608695652, 'ROC_AUC': 0.9889319313779745, 'PR_AUC': 0.9873933911044009, 'Precision': 0.9402173913043479, 'TPR': 0.9418531109178592, 'FPR': 0.058146889082140885, 'inference_time [seconds]': 0.03547512966653575, 'train_time [seconds]': 58.7594690322876, 'noise': 0.2, 'drop_rate': 0.1}
[19:48:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9326086956521739, 'ROC_AUC': 0.9876037149250481, 'PR_AUC': 0.9875443368910699, 'Precision': 0.9323004581625272, 'TPR': 0.9260084358106102, 'FPR': 0.07399156418938989, 'inference_time [seconds]': 0.03605459047400433, 'train_time [seconds]': 58.61043453216553, 'noise': 0.15, 'drop_rate': 0.2}
[19:49:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9586956521739131, 'ROC_AUC': 0.9832273906413989, 'PR_AUC': 0.9777809076523305, 'Precision': 0.9538986354775829, 'TPR': 0.9610982395691003, 'FPR': 0.03890176043089962, 'inference_time [seconds]': 0.035882514456044075, 'train_time [seconds]': 58.86914110183716, 'noise': 0.2, 'drop_rate': 0.15}
[19:50:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9391304347826087, 'ROC_AUC': 0.9823362838868096, 'PR_AUC': 0.9818295108529382, 'Precision': 0.934938574938575, 'TPR': 0.9381769936038338, 'FPR': 0.06182300639616626, 'inference_time [seconds]': 0.03563891286435335, 'train_time [seconds]': 58.881831407547, 'noise': 0.15, 'drop_rate': 0.2}
[19:51:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9260869565217391, 'ROC_AUC': 0.9838808689280976, 'PR_AUC': 0.9801475611780233, 'Precision': 0.9249122807017545, 'TPR': 0.9196617754807026, 'FPR': 0.08033822451929741, 'inference_time [seconds]': 0.03553836242012356, 'train_time [seconds]': 58.96945238113403, 'noise': 0.1, 'drop_rate': 0.1}
[19:52:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9347826086956522, 'ROC_AUC': 0.98643537495792, 'PR_AUC': 0.9839498050339206, 'Precision': 0.9316818154814948, 'TPR': 0.9316818154814948, 'FPR': 0.06831818451850531, 'inference_time [seconds]': 0.03608776175457498, 'train_time [seconds]': 59.06552314758301, 'noise': 0.2, 'drop_rate': 0.2}
[19:53:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9347826086956522, 'ROC_AUC': 0.9835640309709104, 'PR_AUC': 0.9838872235036473, 'Precision': 0.9341353383458646, 'TPR': 0.9287708667498367, 'FPR': 0.07122913325016336, 'inference_time [seconds]': 0.03620904424916143, 'train_time [seconds]': 58.963393211364746, 'noise': 0.2, 'drop_rate': 0.1}
[19:54:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8956521739130435, 'ROC_AUC': 0.9742569159785343, 'PR_AUC': 0.9740477072618388, 'Precision': 0.8919167115849155, 'TPR': 0.8887502722826195, 'FPR': 0.11124972771738054, 'inference_time [seconds]': 0.03610538399737814, 'train_time [seconds]': 59.010048627853394, 'noise': 0.1, 'drop_rate': 0.15}
wine-quality-white.csv
7
[19:55:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6448979591836734, 'ROC_AUC': 0.8556680117692892, 'PR_AUC': 0.5342798006531074, 'Precision': 0.7983466442482836, 'TPR': 0.4177486997289575, 'FPR': 0.09870668094809017, 'inference_time [seconds]': 0.05482070300043845, 'train_time [seconds]': 62.96698617935181, 'noise': 0.1, 'drop_rate': 0.15}
[19:56:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6714285714285714, 'ROC_AUC': 0.7587031054979035, 'PR_AUC': 0.4577771153420394, 'Precision': 0.8154795434750642, 'TPR': 0.3813514882914561, 'FPR': 0.09070304066543798, 'inference_time [seconds]': 0.05301699346425582, 'train_time [seconds]': 63.14764475822449, 'noise': 0.15, 'drop_rate': 0.1}
[19:57:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7061224489795919, 'ROC_AUC': 0.833325027680957, 'PR_AUC': 0.579460455787406, 'Precision': 0.7604678521771383, 'TPR': 0.4542502991233854, 'FPR': 0.07933687213451185, 'inference_time [seconds]': 0.05327487478450853, 'train_time [seconds]': 59.61894154548645, 'noise': 0.1, 'drop_rate': 0.2}
[19:58:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6530612244897959, 'ROC_AUC': 0.8154224468639313, 'PR_AUC': 0.47645838086645337, 'Precision': 0.7988660275894318, 'TPR': 0.38872662389987134, 'FPR': 0.0810687341802373, 'inference_time [seconds]': 0.05324032841896524, 'train_time [seconds]': 62.846440076828, 'noise': 0.15, 'drop_rate': 0.15}
[19:59:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6755102040816326, 'ROC_AUC': 0.8373881516779255, 'PR_AUC': 0.43758641166006385, 'Precision': 0.8722688653940587, 'TPR': 0.38102153688374474, 'FPR': 0.075955907064897, 'inference_time [seconds]': 0.15893517708291813, 'train_time [seconds]': 62.92543625831604, 'noise': 0.1, 'drop_rate': 0.2}
[20:00:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7, 'ROC_AUC': 0.7955560153194241, 'PR_AUC': 0.43920715057143334, 'Precision': 0.8849737778610226, 'TPR': 0.3620546598994875, 'FPR': 0.07120951488245454, 'inference_time [seconds]': 0.055494600412796954, 'train_time [seconds]': 62.772332429885864, 'noise': 0.15, 'drop_rate': 0.15}
[20:01:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6877551020408164, 'ROC_AUC': 0.8293978710502088, 'PR_AUC': 0.590813311183077, 'Precision': 0.8674991622041214, 'TPR': 0.37612641190227397, 'FPR': 0.07339561680898475, 'inference_time [seconds]': 0.05401689179089605, 'train_time [seconds]': 63.06240177154541, 'noise': 0.1, 'drop_rate': 0.1}
[20:02:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6795918367346939, 'ROC_AUC': 0.7879341375905037, 'PR_AUC': 0.4545820294472994, 'Precision': 0.831418983239019, 'TPR': 0.3371747026919441, 'FPR': 0.07753564297564165, 'inference_time [seconds]': 0.053417925931969465, 'train_time [seconds]': 62.7293975353241, 'noise': 0.15, 'drop_rate': 0.2}
[20:03:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6707566462167689, 'ROC_AUC': 0.8322520564249559, 'PR_AUC': 0.520113508107196, 'Precision': 0.7937203065134101, 'TPR': 0.4349877196623772, 'FPR': 0.08723582522833691, 'inference_time [seconds]': 0.052825561086580555, 'train_time [seconds]': 61.7974328994751, 'noise': 0.2, 'drop_rate': 0.1}
[20:05:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.65439672801636, 'ROC_AUC': 0.8550384169605464, 'PR_AUC': 0.5382285604670394, 'Precision': 0.8265711491995765, 'TPR': 0.4210109081684424, 'FPR': 0.09207231085443716, 'inference_time [seconds]': 0.28793553389410786, 'train_time [seconds]': 61.73239469528198, 'noise': 0.1, 'drop_rate': 0.2}
finish
