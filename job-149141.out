Fri Aug 6 10:28:41 IDT 2021

SLURM_JOBID:		 149141
SLURM_JOB_NODELIST:	 dt-gpu-03 


/home/amirbial/Computational_Learning/Scratch/train.py
2021-08-06 10:29:14.014570: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
start main
Improve =True
0.1
arrhythmia.csv
13
[10:30:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.717391304347826, 'ROC_AUC': 0.8049939688298889, 'PR_AUC': 0.5878635209325617, 'Precision': 0.7077922077922078, 'TPR': 0.4754545454545454, 'FPR': 0.04059457418659193, 'inference_time [seconds]': 0.5110554073167883, 'train_time [seconds]': 67.02310633659363, 'noise': 0.1, 'drop_rate': 0.1}
[10:30:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6956521739130435, 'ROC_AUC': 0.7909498053067897, 'PR_AUC': 0.5401327993772976, 'Precision': 0.7244318181818182, 'TPR': 0.4881818181818182, 'FPR': 0.04934409025318116, 'inference_time [seconds]': 0.42146185170049255, 'train_time [seconds]': 11.91258430480957, 'noise': 0.1, 'drop_rate': 0.1}
[10:31:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.8204621103671019, 'PR_AUC': 0.6835657104667046, 'Precision': 0.8783333333333333, 'TPR': 0.3975, 'FPR': 0.05511324041811847, 'inference_time [seconds]': 0.46299828423394096, 'train_time [seconds]': 11.647128343582153, 'noise': 0.1, 'drop_rate': 0.1}
[10:31:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7555555555555555, 'ROC_AUC': 0.8559840782838514, 'PR_AUC': 0.6835145903571906, 'Precision': 0.8816666666666668, 'TPR': 0.5733333333333334, 'FPR': 0.04518542527617967, 'inference_time [seconds]': 0.946134991115994, 'train_time [seconds]': 12.23437213897705, 'noise': 0.15, 'drop_rate': 0.15}
[10:31:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8060847675359872, 'PR_AUC': 0.5449386265979609, 'Precision': 0.6454545454545454, 'TPR': 0.2891666666666667, 'FPR': 0.04748914549358008, 'inference_time [seconds]': 0.4105356004503038, 'train_time [seconds]': 12.823371648788452, 'noise': 0.2, 'drop_rate': 0.1}
[10:31:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7111111111111111, 'ROC_AUC': 0.8544794636258051, 'PR_AUC': 0.6127424832096249, 'Precision': 0.875, 'TPR': 0.45499999999999996, 'FPR': 0.050534262485482, 'inference_time [seconds]': 0.5008061726888021, 'train_time [seconds]': 14.011005640029907, 'noise': 0.1, 'drop_rate': 0.1}
[10:32:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.9099003322259135, 'PR_AUC': 0.7248753978266305, 'Precision': 0.7774621212121211, 'TPR': 0.3291666666666667, 'FPR': 0.05187590187590186, 'inference_time [seconds]': 0.458828608194987, 'train_time [seconds]': 14.962261199951172, 'noise': 0.2, 'drop_rate': 0.15}
[10:32:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.9137389006342496, 'PR_AUC': 0.6928746703693278, 'Precision': 0.7335115864527629, 'TPR': 0.36, 'FPR': 0.053627180899908165, 'inference_time [seconds]': 0.43668217129177517, 'train_time [seconds]': 12.517398357391357, 'noise': 0.1, 'drop_rate': 0.1}
[10:32:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6444444444444445, 'ROC_AUC': 0.8295869690563137, 'PR_AUC': 0.7153017490836354, 'Precision': 0.7878787878787878, 'TPR': 0.35090909090909095, 'FPR': 0.0631126273303863, 'inference_time [seconds]': 0.47286881340874565, 'train_time [seconds]': 11.891761779785156, 'noise': 0.2, 'drop_rate': 0.15}
[10:32:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.890859619450317, 'PR_AUC': 0.651561409972311, 'Precision': 0.6311111111111111, 'TPR': 0.504, 'FPR': 0.04919661733615222, 'inference_time [seconds]': 0.4528098636203342, 'train_time [seconds]': 13.000520467758179, 'noise': 0.15, 'drop_rate': 0.15}
mfeat-karhunen.csv
10
[10:33:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.955, 'ROC_AUC': 0.9948333333333335, 'PR_AUC': 0.9815044885679226, 'Precision': 0.9587963485789572, 'TPR': 0.9550000000000001, 'FPR': 0.005, 'inference_time [seconds]': 0.12010574340820312, 'train_time [seconds]': 36.907514572143555, 'noise': 0.2, 'drop_rate': 0.1}
[10:34:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.97, 'ROC_AUC': 0.9998888888888888, 'PR_AUC': 0.9990573593073595, 'Precision': 0.9722943722943723, 'TPR': 0.97, 'FPR': 0.003333333333333333, 'inference_time [seconds]': 0.11783003807067871, 'train_time [seconds]': 36.31644344329834, 'noise': 0.1, 'drop_rate': 0.15}
[10:34:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.965, 'ROC_AUC': 0.9980833333333334, 'PR_AUC': 0.9904250580337539, 'Precision': 0.966147186147186, 'TPR': 0.9649999999999999, 'FPR': 0.0038888888888888888, 'inference_time [seconds]': 0.1375126838684082, 'train_time [seconds]': 35.987123012542725, 'noise': 0.1, 'drop_rate': 0.15}
[10:35:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.92, 'ROC_AUC': 0.9965277777777779, 'PR_AUC': 0.9787022759526325, 'Precision': 0.921060985797828, 'TPR': 0.9200000000000002, 'FPR': 0.008888888888888887, 'inference_time [seconds]': 0.12882351875305176, 'train_time [seconds]': 37.36135649681091, 'noise': 0.15, 'drop_rate': 0.1}
[10:36:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.99725, 'PR_AUC': 0.9842156302804523, 'Precision': 0.9522476646160856, 'TPR': 0.95, 'FPR': 0.005555555555555555, 'inference_time [seconds]': 0.12018322944641113, 'train_time [seconds]': 35.50950527191162, 'noise': 0.2, 'drop_rate': 0.1}
[10:36:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.92, 'ROC_AUC': 0.9952500000000001, 'PR_AUC': 0.9750502381834554, 'Precision': 0.9213669869861821, 'TPR': 0.9199999999999999, 'FPR': 0.008888888888888887, 'inference_time [seconds]': 0.12490510940551758, 'train_time [seconds]': 35.6941933631897, 'noise': 0.15, 'drop_rate': 0.15}
[10:37:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9962777777777777, 'PR_AUC': 0.9807210292632156, 'Precision': 0.9529870129870129, 'TPR': 0.95, 'FPR': 0.005555555555555555, 'inference_time [seconds]': 0.13237237930297852, 'train_time [seconds]': 35.69231820106506, 'noise': 0.1, 'drop_rate': 0.15}
[10:37:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.935, 'ROC_AUC': 0.9961111111111111, 'PR_AUC': 0.9760578287569539, 'Precision': 0.9401948051948052, 'TPR': 0.9349999999999999, 'FPR': 0.007222222222222222, 'inference_time [seconds]': 0.12129902839660645, 'train_time [seconds]': 37.29355597496033, 'noise': 0.2, 'drop_rate': 0.1}
[10:38:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.955, 'ROC_AUC': 0.9979444444444445, 'PR_AUC': 0.9875227260567758, 'Precision': 0.9572226019594441, 'TPR': 0.9549999999999998, 'FPR': 0.005, 'inference_time [seconds]': 0.1337265968322754, 'train_time [seconds]': 36.881322145462036, 'noise': 0.15, 'drop_rate': 0.2}
[10:39:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9987777777777778, 'PR_AUC': 0.9920247636369256, 'Precision': 0.9521758942811575, 'TPR': 0.95, 'FPR': 0.005555555555555556, 'inference_time [seconds]': 0.12125253677368164, 'train_time [seconds]': 36.686198711395264, 'noise': 0.2, 'drop_rate': 0.1}
plant-margin.csv
100
[10:40:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6875, 'ROC_AUC': 0.9943754478146645, 'PR_AUC': 0.8283333333333335, 'Precision': 0.8021666666666667, 'TPR': 0.69, 'FPR': 0.003156993869914816, 'inference_time [seconds]': 0.8776187896728516, 'train_time [seconds]': 54.63347125053406, 'noise': 0.2, 'drop_rate': 0.15}
[10:41:14] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.725, 'ROC_AUC': 0.9932405859406097, 'PR_AUC': 0.8760976007136999, 'Precision': 0.8445, 'TPR': 0.73, 'FPR': 0.0027784412069102775, 'inference_time [seconds]': 1.0023653507232666, 'train_time [seconds]': 53.79731011390686, 'noise': 0.2, 'drop_rate': 0.1}
[10:42:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.78125, 'ROC_AUC': 0.9942424966165114, 'PR_AUC': 0.911873556998557, 'Precision': 0.8630000000000001, 'TPR': 0.785, 'FPR': 0.002211209298622721, 'inference_time [seconds]': 0.8465886116027832, 'train_time [seconds]': 54.54661965370178, 'noise': 0.15, 'drop_rate': 0.2}
[10:43:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.725, 'ROC_AUC': 0.9921970782581004, 'PR_AUC': 0.8738226201639995, 'Precision': 0.8365, 'TPR': 0.745, 'FPR': 0.0027768489769922776, 'inference_time [seconds]': 0.9571224451065063, 'train_time [seconds]': 54.816176891326904, 'noise': 0.15, 'drop_rate': 0.15}
[10:44:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.66875, 'ROC_AUC': 0.9922335005174747, 'PR_AUC': 0.8080141537384183, 'Precision': 0.7958333333333333, 'TPR': 0.665, 'FPR': 0.0033456731151978347, 'inference_time [seconds]': 0.8492529392242432, 'train_time [seconds]': 52.89581060409546, 'noise': 0.1, 'drop_rate': 0.1}
[10:45:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.59375, 'ROC_AUC': 0.9927975479659265, 'PR_AUC': 0.8144722222222223, 'Precision': 0.746, 'TPR': 0.61, 'FPR': 0.004104768728604411, 'inference_time [seconds]': 1.1527180671691895, 'train_time [seconds]': 56.127846240997314, 'noise': 0.15, 'drop_rate': 0.1}
[10:46:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.725, 'ROC_AUC': 0.9953916885598281, 'PR_AUC': 0.8473396464646464, 'Precision': 0.8155, 'TPR': 0.71, 'FPR': 0.0027764509195127773, 'inference_time [seconds]': 0.8829668164253235, 'train_time [seconds]': 55.167423486709595, 'noise': 0.15, 'drop_rate': 0.2}
[10:47:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.675, 'ROC_AUC': 0.9881546055250376, 'PR_AUC': 0.800756894463929, 'Precision': 0.7608333333333333, 'TPR': 0.68, 'FPR': 0.003282780033436829, 'inference_time [seconds]': 0.9646669030189514, 'train_time [seconds]': 55.87509059906006, 'noise': 0.15, 'drop_rate': 0.2}
[10:48:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.73125, 'ROC_AUC': 0.9919238117984238, 'PR_AUC': 0.8405262944571767, 'Precision': 0.8190000000000001, 'TPR': 0.74, 'FPR': 0.0027155481251492715, 'inference_time [seconds]': 0.846824049949646, 'train_time [seconds]': 52.11233329772949, 'noise': 0.1, 'drop_rate': 0.2}
[10:49:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.73125, 'ROC_AUC': 0.9939732107316296, 'PR_AUC': 0.8349209956709955, 'Precision': 0.7878333333333333, 'TPR': 0.725, 'FPR': 0.002711965607833772, 'inference_time [seconds]': 0.8636444807052612, 'train_time [seconds]': 49.86904311180115, 'noise': 0.2, 'drop_rate': 0.1}
steel-plates.csv
7
[10:49:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7897435897435897, 'ROC_AUC': 0.9700256183951599, 'PR_AUC': 0.9097377925850126, 'Precision': 0.8555275570200944, 'TPR': 0.814729697547035, 'FPR': 0.04064173225842066, 'inference_time [seconds]': 0.16181407830654046, 'train_time [seconds]': 34.47248840332031, 'noise': 0.1, 'drop_rate': 0.15}
[10:50:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7525773195876289, 'ROC_AUC': 0.9472328705833173, 'PR_AUC': 0.8235644220666941, 'Precision': 0.8335722598880493, 'TPR': 0.72259654692743, 'FPR': 0.0486562302502771, 'inference_time [seconds]': 0.1151537157825588, 'train_time [seconds]': 35.57861137390137, 'noise': 0.2, 'drop_rate': 0.1}
[10:50:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7577319587628866, 'ROC_AUC': 0.9375052761356433, 'PR_AUC': 0.8067044517470594, 'Precision': 0.8224666926757519, 'TPR': 0.7152043940423471, 'FPR': 0.048587865067066964, 'inference_time [seconds]': 0.10329546387662593, 'train_time [seconds]': 31.07763147354126, 'noise': 0.2, 'drop_rate': 0.1}
[10:51:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7835051546391752, 'ROC_AUC': 0.9605877737669228, 'PR_AUC': 0.8713896971512048, 'Precision': 0.8288668098818475, 'TPR': 0.8339969110491499, 'FPR': 0.04278184701976983, 'inference_time [seconds]': 0.11652769501676265, 'train_time [seconds]': 34.65911841392517, 'noise': 0.2, 'drop_rate': 0.1}
[10:52:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7989690721649485, 'ROC_AUC': 0.9575414918205143, 'PR_AUC': 0.8632743528276329, 'Precision': 0.8556766850884499, 'TPR': 0.8173430850375077, 'FPR': 0.03923492119982509, 'inference_time [seconds]': 0.10802082179747906, 'train_time [seconds]': 35.06920003890991, 'noise': 0.1, 'drop_rate': 0.1}
[10:52:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.788659793814433, 'ROC_AUC': 0.9658148623703179, 'PR_AUC': 0.8732804333823532, 'Precision': 0.7976744397224946, 'TPR': 0.7998495808982848, 'FPR': 0.04000882675557289, 'inference_time [seconds]': 0.11507383326894229, 'train_time [seconds]': 36.112098932266235, 'noise': 0.1, 'drop_rate': 0.1}
[10:53:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7680412371134021, 'ROC_AUC': 0.9644195392078808, 'PR_AUC': 0.8688309814604203, 'Precision': 0.8356310456672121, 'TPR': 0.7447030392460267, 'FPR': 0.04570345248125231, 'inference_time [seconds]': 0.10817321305422439, 'train_time [seconds]': 34.09170603752136, 'noise': 0.1, 'drop_rate': 0.1}
[10:53:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8144329896907216, 'ROC_AUC': 0.9644756008927968, 'PR_AUC': 0.8799600614256947, 'Precision': 0.8222279776952863, 'TPR': 0.8342326774765033, 'FPR': 0.03575471858121877, 'inference_time [seconds]': 0.11713971796723985, 'train_time [seconds]': 35.41000723838806, 'noise': 0.2, 'drop_rate': 0.1}
[10:54:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7783505154639175, 'ROC_AUC': 0.9612697304351575, 'PR_AUC': 0.870368451666686, 'Precision': 0.8246599036393645, 'TPR': 0.7865730502727406, 'FPR': 0.04508373362323881, 'inference_time [seconds]': 0.10601392726308291, 'train_time [seconds]': 33.26119828224182, 'noise': 0.1, 'drop_rate': 0.1}
[10:55:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7783505154639175, 'ROC_AUC': 0.9500258378733817, 'PR_AUC': 0.8328070423537736, 'Precision': 0.7991196070431438, 'TPR': 0.79075743657787, 'FPR': 0.04158444775595871, 'inference_time [seconds]': 0.11541425567312338, 'train_time [seconds]': 33.43037986755371, 'noise': 0.2, 'drop_rate': 0.1}
bank.csv
2
[10:56:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9050772626931567, 'ROC_AUC': 0.9024056603773585, 'PR_AUC': 0.8054902342699732, 'Precision': 0.8207129297616537, 'TPR': 0.6434433962264151, 'FPR': 0.3565566037735849, 'inference_time [seconds]': 0.13130074305250156, 'train_time [seconds]': 69.80220222473145, 'noise': 0.2, 'drop_rate': 0.1}
[10:57:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8915929203539823, 'ROC_AUC': 0.8691826923076924, 'PR_AUC': 0.7230325184150241, 'Precision': 0.7371541501976284, 'TPR': 0.6125, 'FPR': 0.3875, 'inference_time [seconds]': 0.057727362202332086, 'train_time [seconds]': 75.18348455429077, 'noise': 0.1, 'drop_rate': 0.2}
[10:58:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8960176991150443, 'ROC_AUC': 0.8974519230769231, 'PR_AUC': 0.7300936747725305, 'Precision': 0.7566744730679157, 'TPR': 0.6317307692307692, 'FPR': 0.3682692307692308, 'inference_time [seconds]': 0.13832813870590344, 'train_time [seconds]': 75.14426636695862, 'noise': 0.15, 'drop_rate': 0.15}
[11:00:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8893805309734514, 'ROC_AUC': 0.9081250000000001, 'PR_AUC': 0.7435756431984518, 'Precision': 0.7354859752120027, 'TPR': 0.5694230769230769, 'FPR': 0.4305769230769231, 'inference_time [seconds]': 0.05749105352216062, 'train_time [seconds]': 75.21426725387573, 'noise': 0.2, 'drop_rate': 0.2}
[11:01:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8982300884955752, 'ROC_AUC': 0.9140865384615384, 'PR_AUC': 0.7961217317295886, 'Precision': 0.7967316513761468, 'TPR': 0.5995192307692307, 'FPR': 0.4004807692307692, 'inference_time [seconds]': 0.1386050629404794, 'train_time [seconds]': 75.00795340538025, 'noise': 0.15, 'drop_rate': 0.1}
[11:02:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8982300884955752, 'ROC_AUC': 0.9036057692307692, 'PR_AUC': 0.7785464225901668, 'Precision': 0.7967316513761468, 'TPR': 0.5995192307692307, 'FPR': 0.4004807692307692, 'inference_time [seconds]': 0.05285138577486562, 'train_time [seconds]': 74.83840870857239, 'noise': 0.15, 'drop_rate': 0.2}
[11:03:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9092920353982301, 'ROC_AUC': 0.9311538461538461, 'PR_AUC': 0.7889528643203663, 'Precision': 0.8287726765987635, 'TPR': 0.6559615384615385, 'FPR': 0.34403846153846157, 'inference_time [seconds]': 0.05280655042260094, 'train_time [seconds]': 75.06813144683838, 'noise': 0.15, 'drop_rate': 0.15}
[11:05:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8960176991150443, 'ROC_AUC': 0.8765384615384616, 'PR_AUC': 0.7185602799133721, 'Precision': 0.7852784134248665, 'TPR': 0.5899038461538462, 'FPR': 0.41009615384615383, 'inference_time [seconds]': 0.049121084466444705, 'train_time [seconds]': 74.94596219062805, 'noise': 0.2, 'drop_rate': 0.15}
[11:06:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8938053097345132, 'ROC_AUC': 0.8778365384615384, 'PR_AUC': 0.71493545084541, 'Precision': 0.7450343084145901, 'TPR': 0.6304807692307692, 'FPR': 0.36951923076923077, 'inference_time [seconds]': 0.05198685468825619, 'train_time [seconds]': 75.3790225982666, 'noise': 0.15, 'drop_rate': 0.15}
[11:07:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8960176991150443, 'ROC_AUC': 0.9302403846153846, 'PR_AUC': 0.778820388409713, 'Precision': 0.7517322898834271, 'TPR': 0.6484615384615384, 'FPR': 0.3515384615384616, 'inference_time [seconds]': 0.26879321157404806, 'train_time [seconds]': 75.0780246257782, 'noise': 0.1, 'drop_rate': 0.2}
molec-biol-splice.csv
3
[11:08:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9090909090909091, 'ROC_AUC': 0.979695419364841, 'PR_AUC': 0.9524475524056116, 'Precision': 0.9029958792738612, 'TPR': 0.9044733044733045, 'FPR': 0.04939000393545848, 'inference_time [seconds]': 0.06983422186681096, 'train_time [seconds]': 55.23832702636719, 'noise': 0.15, 'drop_rate': 0.1}
[11:09:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9278996865203761, 'ROC_AUC': 0.9847483095416979, 'PR_AUC': 0.9732855866632768, 'Precision': 0.9295686839984733, 'TPR': 0.918903318903319, 'FPR': 0.04191263282172373, 'inference_time [seconds]': 0.06402547830324562, 'train_time [seconds]': 51.737701654434204, 'noise': 0.2, 'drop_rate': 0.1}
[11:10:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9404388714733543, 'ROC_AUC': 0.9890570402967097, 'PR_AUC': 0.976218933591424, 'Precision': 0.9339509425125864, 'TPR': 0.9269841269841269, 'FPR': 0.03168044077134986, 'inference_time [seconds]': 0.06541563051995065, 'train_time [seconds]': 54.519742250442505, 'noise': 0.2, 'drop_rate': 0.1}
[11:11:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9404388714733543, 'ROC_AUC': 0.9903676672271713, 'PR_AUC': 0.9790505279447593, 'Precision': 0.93052494228646, 'TPR': 0.9362193362193363, 'FPR': 0.03010625737898465, 'inference_time [seconds]': 0.06495673080970502, 'train_time [seconds]': 52.38749551773071, 'noise': 0.2, 'drop_rate': 0.1}
[11:12:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9310344827586207, 'ROC_AUC': 0.9876450454962852, 'PR_AUC': 0.9785864353090044, 'Precision': 0.9239191431220416, 'TPR': 0.9255411255411254, 'FPR': 0.03502558048012593, 'inference_time [seconds]': 0.07313844925931255, 'train_time [seconds]': 54.756532192230225, 'noise': 0.2, 'drop_rate': 0.2}
[11:13:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9373040752351097, 'ROC_AUC': 0.9872267676872936, 'PR_AUC': 0.9710684664379404, 'Precision': 0.9378948078374648, 'TPR': 0.9246260503394302, 'FPR': 0.03633349404789294, 'inference_time [seconds]': 0.10102370689655173, 'train_time [seconds]': 55.254658222198486, 'noise': 0.2, 'drop_rate': 0.15}
[11:14:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9373040752351097, 'ROC_AUC': 0.9906945627218394, 'PR_AUC': 0.9798385071572606, 'Precision': 0.9293045785967639, 'TPR': 0.9341377814744968, 'FPR': 0.03229895842294337, 'inference_time [seconds]': 0.06933645768599077, 'train_time [seconds]': 55.52721643447876, 'noise': 0.15, 'drop_rate': 0.2}
[11:14:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9059561128526645, 'ROC_AUC': 0.9803576876643084, 'PR_AUC': 0.9657039784946092, 'Precision': 0.90119825708061, 'TPR': 0.8931117498016673, 'FPR': 0.05248864161520133, 'inference_time [seconds]': 0.06931029890771943, 'train_time [seconds]': 51.665300607681274, 'noise': 0.15, 'drop_rate': 0.15}
[11:15:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9247648902821317, 'ROC_AUC': 0.9824616229584869, 'PR_AUC': 0.9666918866631186, 'Precision': 0.9161822696071272, 'TPR': 0.9145577525412656, 'FPR': 0.04022365331535464, 'inference_time [seconds]': 0.07541276818158858, 'train_time [seconds]': 54.285263538360596, 'noise': 0.2, 'drop_rate': 0.15}
[11:16:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9122257053291536, 'ROC_AUC': 0.9848428682749554, 'PR_AUC': 0.9624495558985111, 'Precision': 0.9124886741165811, 'TPR': 0.899050062176251, 'FPR': 0.050557732871062244, 'inference_time [seconds]': 0.07040224105213129, 'train_time [seconds]': 55.19116568565369, 'noise': 0.2, 'drop_rate': 0.2}
plant-shape.csv
100
[11:17:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55, 'ROC_AUC': 0.9726715627736645, 'PR_AUC': 0.6709648158137901, 'Precision': 0.6658333333333333, 'TPR': 0.555, 'FPR': 0.004549398933205955, 'inference_time [seconds]': 1.0448187589645386, 'train_time [seconds]': 56.507402181625366, 'noise': 0.2, 'drop_rate': 0.15}
[11:18:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5125, 'ROC_AUC': 0.9647096170687048, 'PR_AUC': 0.6791781264762905, 'Precision': 0.6638333333333333, 'TPR': 0.53, 'FPR': 0.0049219807340179925, 'inference_time [seconds]': 0.8771032094955444, 'train_time [seconds]': 53.90881943702698, 'noise': 0.2, 'drop_rate': 0.2}
[11:19:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5625, 'ROC_AUC': 0.9676476793248945, 'PR_AUC': 0.6899020843905836, 'Precision': 0.6923333333333332, 'TPR': 0.555, 'FPR': 0.004419234137409442, 'inference_time [seconds]': 0.8854463696479797, 'train_time [seconds]': 54.5583393573761, 'noise': 0.1, 'drop_rate': 0.15}
[11:20:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5625, 'ROC_AUC': 0.9712168617148318, 'PR_AUC': 0.6994086656584311, 'Precision': 0.6756666666666666, 'TPR': 0.535, 'FPR': 0.0044168457925324416, 'inference_time [seconds]': 0.963088870048523, 'train_time [seconds]': 52.636770486831665, 'noise': 0.15, 'drop_rate': 0.2}
[11:21:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.53125, 'ROC_AUC': 0.9700372183743334, 'PR_AUC': 0.6360622922718941, 'Precision': 0.6923333333333332, 'TPR': 0.515, 'FPR': 0.004733699546214473, 'inference_time [seconds]': 1.0258123278617859, 'train_time [seconds]': 51.14293694496155, 'noise': 0.15, 'drop_rate': 0.1}
[11:22:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5125, 'ROC_AUC': 0.9794425204999601, 'PR_AUC': 0.6944257662658646, 'Precision': 0.6293333333333333, 'TPR': 0.495, 'FPR': 0.004923971021415493, 'inference_time [seconds]': 0.8169323205947876, 'train_time [seconds]': 51.06332206726074, 'noise': 0.1, 'drop_rate': 0.2}
[11:24:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6, 'ROC_AUC': 0.9715118223071413, 'PR_AUC': 0.7434281947182325, 'Precision': 0.6975, 'TPR': 0.615, 'FPR': 0.0040402834169254035, 'inference_time [seconds]': 0.8889257907867432, 'train_time [seconds]': 54.62974405288696, 'noise': 0.15, 'drop_rate': 0.2}
[11:25:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.54375, 'ROC_AUC': 0.9612966722394714, 'PR_AUC': 0.6388353370274302, 'Precision': 0.7158333333333333, 'TPR': 0.53, 'FPR': 0.00460512698033596, 'inference_time [seconds]': 1.0011538863182068, 'train_time [seconds]': 51.961071491241455, 'noise': 0.2, 'drop_rate': 0.15}
[11:26:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.56875, 'ROC_AUC': 0.9794815301329513, 'PR_AUC': 0.730315247670723, 'Precision': 0.7085000000000001, 'TPR': 0.595, 'FPR': 0.004355942998168935, 'inference_time [seconds]': 0.8646905422210693, 'train_time [seconds]': 53.582926988601685, 'noise': 0.2, 'drop_rate': 0.1}
[11:27:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5625, 'ROC_AUC': 0.9674508399012818, 'PR_AUC': 0.6759640453553084, 'Precision': 0.7048333333333335, 'TPR': 0.58, 'FPR': 0.004421622482286442, 'inference_time [seconds]': 0.8753329515457153, 'train_time [seconds]': 55.22025513648987, 'noise': 0.15, 'drop_rate': 0.15}
wall-following.csv
4
[11:28:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9981684981684982, 'ROC_AUC': 0.9999795513842413, 'PR_AUC': 0.9999434335249737, 'Precision': 0.998868778280543, 'TPR': 0.9969879518072289, 'FPR': 0.0007668711656441718, 'inference_time [seconds]': 0.0597889170105204, 'train_time [seconds]': 89.27111220359802, 'noise': 0.15, 'drop_rate': 0.15}
[11:30:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9981684981684982, 'ROC_AUC': 0.9998735950970833, 'PR_AUC': 0.9998119093473194, 'Precision': 0.998868778280543, 'TPR': 0.9969879518072289, 'FPR': 0.0007668711656441718, 'inference_time [seconds]': 0.05885663923326429, 'train_time [seconds]': 91.7245020866394, 'noise': 0.1, 'drop_rate': 0.1}
[11:31:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9963369963369964, 'ROC_AUC': 0.9997568330660456, 'PR_AUC': 0.9980813628054915, 'Precision': 0.9976783020900668, 'TPR': 0.9912337662337662, 'FPR': 0.0015109187846917907, 'inference_time [seconds]': 0.059776690416720325, 'train_time [seconds]': 92.0184805393219, 'noise': 0.15, 'drop_rate': 0.1}
[11:33:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9908424908424909, 'ROC_AUC': 0.9997734432794392, 'PR_AUC': 0.9991514506958588, 'Precision': 0.9923289738430583, 'TPR': 0.9878993555464144, 'FPR': 0.0035073158539008276, 'inference_time [seconds]': 0.05879768958458534, 'train_time [seconds]': 91.90411591529846, 'noise': 0.1, 'drop_rate': 0.15}
[11:35:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9945054945054945, 'ROC_AUC': 0.998053588660508, 'PR_AUC': 0.9957559122802357, 'Precision': 0.9946182835607834, 'TPR': 0.9947255083683149, 'FPR': 0.0020236363286782757, 'inference_time [seconds]': 0.05534455016419128, 'train_time [seconds]': 91.87623143196106, 'noise': 0.2, 'drop_rate': 0.1}
[11:36:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 0.9999574063294194, 'PR_AUC': 0.9999350494706531, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.05315074990520547, 'train_time [seconds]': 88.59514689445496, 'noise': 0.2, 'drop_rate': 0.2}
[11:38:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9926605504587156, 'ROC_AUC': 0.9981879097454327, 'PR_AUC': 0.9927950057638787, 'Precision': 0.9954462951099723, 'TPR': 0.9868170216022619, 'FPR': 0.0030610834715312325, 'inference_time [seconds]': 0.06022847026859948, 'train_time [seconds]': 92.32999730110168, 'noise': 0.1, 'drop_rate': 0.1}
[11:39:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9908256880733946, 'ROC_AUC': 0.9992863242172526, 'PR_AUC': 0.9945253070905633, 'Precision': 0.9923558401218694, 'TPR': 0.9809220803706098, 'FPR': 0.0035757039934317695, 'inference_time [seconds]': 0.06937280707403061, 'train_time [seconds]': 92.06208610534668, 'noise': 0.2, 'drop_rate': 0.1}
[11:41:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9889908256880734, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9930555555555556, 'TPR': 0.9738636363636364, 'FPR': 0.004477611940298508, 'inference_time [seconds]': 0.10501747831292109, 'train_time [seconds]': 92.47652697563171, 'noise': 0.1, 'drop_rate': 0.2}
[11:42:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9798165137614679, 'ROC_AUC': 0.9980645700863999, 'PR_AUC': 0.9962265836729909, 'Precision': 0.9874164556436548, 'TPR': 0.9430722732552002, 'FPR': 0.0082548794489093, 'inference_time [seconds]': 0.06003467314833895, 'train_time [seconds]': 91.9663736820221, 'noise': 0.1, 'drop_rate': 0.1}
chess-krvkp.csv
2
[11:43:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.984375, 'ROC_AUC': 0.998904152479355, 'PR_AUC': 0.9989180989253651, 'Precision': 0.9842356438741982, 'TPR': 0.984482016359438, 'FPR': 0.015517983640562012, 'inference_time [seconds]': 0.09530559182167053, 'train_time [seconds]': 54.84709930419922, 'noise': 0.1, 'drop_rate': 0.1}
[11:44:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9625, 'ROC_AUC': 0.9983562287190325, 'PR_AUC': 0.9983831218327425, 'Precision': 0.9631853683425566, 'TPR': 0.9618801612461352, 'FPR': 0.03811983875386482, 'inference_time [seconds]': 0.175534188747406, 'train_time [seconds]': 54.660239934921265, 'noise': 0.1, 'drop_rate': 0.1}
[11:45:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.99375, 'ROC_AUC': 0.9998825877656451, 'PR_AUC': 0.9998830847508334, 'Precision': 0.993738014167743, 'TPR': 0.993738014167743, 'FPR': 0.006261985832257054, 'inference_time [seconds]': 0.07602348923683167, 'train_time [seconds]': 54.830496311187744, 'noise': 0.1, 'drop_rate': 0.2}
[11:46:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.971875, 'ROC_AUC': 0.9992563891824195, 'PR_AUC': 0.9992808024082036, 'Precision': 0.971875, 'TPR': 0.9727799303354077, 'FPR': 0.027220069664592384, 'inference_time [seconds]': 0.060602277517318726, 'train_time [seconds]': 54.71950364112854, 'noise': 0.2, 'drop_rate': 0.2}
[11:47:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.99375, 'ROC_AUC': 0.9998825877656451, 'PR_AUC': 0.9998830847508334, 'Precision': 0.993738014167743, 'TPR': 0.993738014167743, 'FPR': 0.006261985832257054, 'inference_time [seconds]': 0.3028564155101776, 'train_time [seconds]': 54.51681733131409, 'noise': 0.1, 'drop_rate': 0.1}
[11:48:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.978125, 'ROC_AUC': 0.9982779538961293, 'PR_AUC': 0.9983085994017145, 'Precision': 0.9779262384747617, 'TPR': 0.9787679542875034, 'FPR': 0.021232045712496574, 'inference_time [seconds]': 0.0609666109085083, 'train_time [seconds]': 54.87187051773071, 'noise': 0.2, 'drop_rate': 0.1}
[11:49:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9843260188087775, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9854651162790697, 'TPR': 0.9835526315789473, 'FPR': 0.01644736842105263, 'inference_time [seconds]': 0.12385807814642927, 'train_time [seconds]': 54.59044861793518, 'noise': 0.2, 'drop_rate': 0.1}
[11:50:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9498432601880877, 'ROC_AUC': 0.9963756697132051, 'PR_AUC': 0.9964909666320327, 'Precision': 0.9495438099732578, 'TPR': 0.9503230381342578, 'FPR': 0.0496769618657422, 'inference_time [seconds]': 0.06198210402342219, 'train_time [seconds]': 54.25919961929321, 'noise': 0.1, 'drop_rate': 0.15}
[11:51:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.987460815047022, 'ROC_AUC': 0.9996454459502049, 'PR_AUC': 0.9996484093350744, 'Precision': 0.9877909270216962, 'TPR': 0.9871375669713205, 'FPR': 0.012862433028679482, 'inference_time [seconds]': 0.1273730705524313, 'train_time [seconds]': 54.487348794937134, 'noise': 0.2, 'drop_rate': 0.15}
[11:51:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9717868338557993, 'ROC_AUC': 0.9985431923773526, 'PR_AUC': 0.9985660649640193, 'Precision': 0.9718553459119497, 'TPR': 0.9726356406016221, 'FPR': 0.027364359398377825, 'inference_time [seconds]': 0.06008521890191822, 'train_time [seconds]': 54.50541019439697, 'noise': 0.1, 'drop_rate': 0.15}
mushroom.csv
2
[11:54:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.995079950799508, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.994949494949495, 'TPR': 0.995249406175772, 'FPR': 0.004750593824228029, 'inference_time [seconds]': 0.05177554169264227, 'train_time [seconds]': 132.83351683616638, 'noise': 0.15, 'drop_rate': 0.1}
[11:56:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.986469864698647, 'ROC_AUC': 0.9998182170730525, 'PR_AUC': 0.9998194170339377, 'Precision': 0.9864140312613595, 'TPR': 0.9864965582432498, 'FPR': 0.013503441756750206, 'inference_time [seconds]': 0.044181338095577, 'train_time [seconds]': 132.38628602027893, 'noise': 0.15, 'drop_rate': 0.15}
[11:58:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.997539975399754, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9976359338061466, 'TPR': 0.9974489795918368, 'FPR': 0.002551020408163265, 'inference_time [seconds]': 0.04618546179739751, 'train_time [seconds]': 132.66683387756348, 'noise': 0.15, 'drop_rate': 0.1}
[12:00:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.05073037094735571, 'train_time [seconds]': 132.3501935005188, 'noise': 0.1, 'drop_rate': 0.2}
[12:03:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9938423645320197, 'ROC_AUC': 0.9999574829931973, 'PR_AUC': 0.9999575895524185, 'Precision': 0.9937965712620015, 'TPR': 0.9938775510204082, 'FPR': 0.006122448979591836, 'inference_time [seconds]': 0.04732139004862367, 'train_time [seconds]': 132.55250763893127, 'noise': 0.15, 'drop_rate': 0.15}
[12:05:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9963054187192119, 'ROC_AUC': 0.9999878522837706, 'PR_AUC': 0.9999878631273738, 'Precision': 0.9962621533154791, 'TPR': 0.9963435374149661, 'FPR': 0.0036564625850340135, 'inference_time [seconds]': 0.041326865774070104, 'train_time [seconds]': 132.45549130439758, 'noise': 0.1, 'drop_rate': 0.2}
[12:07:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.04875571856945019, 'train_time [seconds]': 132.61861944198608, 'noise': 0.2, 'drop_rate': 0.2}
[12:09:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9975369458128078, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9976359338061466, 'TPR': 0.9974424552429668, 'FPR': 0.0025575447570332483, 'inference_time [seconds]': 0.04700751140199859, 'train_time [seconds]': 132.56900215148926, 'noise': 0.15, 'drop_rate': 0.1}
[12:11:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9987684729064039, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9988151658767772, 'TPR': 0.9987212276214834, 'FPR': 0.0012787723785166241, 'inference_time [seconds]': 0.04641029047848556, 'train_time [seconds]': 132.3398401737213, 'noise': 0.2, 'drop_rate': 0.2}
[12:14:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9975369458128078, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9976359338061466, 'TPR': 0.9974424552429668, 'FPR': 0.0025575447570332483, 'inference_time [seconds]': 0.04346264994203163, 'train_time [seconds]': 132.814035654068, 'noise': 0.15, 'drop_rate': 0.15}
plant-texture.csv
100
[12:15:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.76875, 'ROC_AUC': 0.9899305389698272, 'PR_AUC': 0.863357444487254, 'Precision': 0.8709285714285714, 'TPR': 0.765, 'FPR': 0.0023338110023087334, 'inference_time [seconds]': 0.8987486362457275, 'train_time [seconds]': 57.008285999298096, 'noise': 0.15, 'drop_rate': 0.15}
[12:16:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.74375, 'ROC_AUC': 0.9900451795239232, 'PR_AUC': 0.8521241019898355, 'Precision': 0.8422619047619047, 'TPR': 0.76, 'FPR': 0.0025877716742297584, 'inference_time [seconds]': 1.0181725025177002, 'train_time [seconds]': 53.3343768119812, 'noise': 0.2, 'drop_rate': 0.15}
[12:16:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.71875, 'ROC_AUC': 0.9880214552981451, 'PR_AUC': 0.8457688942184173, 'Precision': 0.8161666666666667, 'TPR': 0.735, 'FPR': 0.002838547886314784, 'inference_time [seconds]': 0.8072629570960999, 'train_time [seconds]': 50.72112274169922, 'noise': 0.2, 'drop_rate': 0.1}
[12:17:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.70625, 'ROC_AUC': 0.9918481808773187, 'PR_AUC': 0.8210210414585414, 'Precision': 0.7986666666666666, 'TPR': 0.705, 'FPR': 0.0029687126821112977, 'inference_time [seconds]': 0.8739426732063293, 'train_time [seconds]': 56.37432551383972, 'noise': 0.1, 'drop_rate': 0.1}
[12:18:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.625, 'ROC_AUC': 0.9841523365974048, 'PR_AUC': 0.8166722370419178, 'Precision': 0.7513333333333333, 'TPR': 0.66, 'FPR': 0.0037879149749223784, 'inference_time [seconds]': 1.0055974125862122, 'train_time [seconds]': 52.83236289024353, 'noise': 0.2, 'drop_rate': 0.1}
[12:19:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6625, 'ROC_AUC': 0.9898521216463658, 'PR_AUC': 0.826133470026214, 'Precision': 0.7556666666666668, 'TPR': 0.685, 'FPR': 0.0034093623119178414, 'inference_time [seconds]': 0.8765488862991333, 'train_time [seconds]': 53.27383852005005, 'noise': 0.1, 'drop_rate': 0.2}
[12:20:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7, 'ROC_AUC': 0.990573998885439, 'PR_AUC': 0.8514359657227304, 'Precision': 0.8253333333333334, 'TPR': 0.71, 'FPR': 0.003032003821351803, 'inference_time [seconds]': 0.9810313582420349, 'train_time [seconds]': 52.40312695503235, 'noise': 0.15, 'drop_rate': 0.1}
[12:21:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.775, 'ROC_AUC': 0.987790581960035, 'PR_AUC': 0.8683682454086146, 'Precision': 0.8570238095238096, 'TPR': 0.775, 'FPR': 0.0022725101504657273, 'inference_time [seconds]': 0.9915351867675781, 'train_time [seconds]': 56.85053825378418, 'noise': 0.15, 'drop_rate': 0.2}
[12:22:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7375, 'ROC_AUC': 0.9878206352997373, 'PR_AUC': 0.8479756254400089, 'Precision': 0.8229999999999998, 'TPR': 0.735, 'FPR': 0.002652256985908765, 'inference_time [seconds]': 0.8705779910087585, 'train_time [seconds]': 53.86314654350281, 'noise': 0.1, 'drop_rate': 0.2}
[12:23:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7169811320754716, 'ROC_AUC': 0.9873699911311778, 'PR_AUC': 0.8042276106956413, 'Precision': 0.7933333333333334, 'TPR': 0.695, 'FPR': 0.002858582600983633, 'inference_time [seconds]': 0.8837906819469524, 'train_time [seconds]': 57.300009965896606, 'noise': 0.2, 'drop_rate': 0.15}
waveform.csv
3
[12:25:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.864, 'ROC_AUC': 0.9722438609093569, 'PR_AUC': 0.9456608792382829, 'Precision': 0.8647064900911055, 'TPR': 0.8637551990493167, 'FPR': 0.06802351876978742, 'inference_time [seconds]': 0.056437015533447266, 'train_time [seconds]': 83.34483695030212, 'noise': 0.15, 'drop_rate': 0.2}
[12:26:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.862, 'ROC_AUC': 0.9683373684163851, 'PR_AUC': 0.9398504586124522, 'Precision': 0.8631292206309333, 'TPR': 0.8617944147355913, 'FPR': 0.06903361977988844, 'inference_time [seconds]': 0.055323123931884766, 'train_time [seconds]': 79.60862588882446, 'noise': 0.15, 'drop_rate': 0.15}
[12:28:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.858, 'ROC_AUC': 0.9647994430698558, 'PR_AUC': 0.9346357276005491, 'Precision': 0.8592592592592592, 'TPR': 0.8575163398692811, 'FPR': 0.07097844112769486, 'inference_time [seconds]': 0.05803537368774414, 'train_time [seconds]': 83.3588969707489, 'noise': 0.2, 'drop_rate': 0.15}
[12:29:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.842, 'ROC_AUC': 0.9650272293361802, 'PR_AUC': 0.9342170586035176, 'Precision': 0.8432807363576594, 'TPR': 0.8418399566702967, 'FPR': 0.07908004337645057, 'inference_time [seconds]': 0.2465839385986328, 'train_time [seconds]': 81.03712034225464, 'noise': 0.1, 'drop_rate': 0.15}
[12:30:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.878, 'ROC_AUC': 0.979406562542373, 'PR_AUC': 0.9601208029294912, 'Precision': 0.8809028673349392, 'TPR': 0.8776100096224209, 'FPR': 0.06117008407427569, 'inference_time [seconds]': 0.05722522735595703, 'train_time [seconds]': 78.0957362651825, 'noise': 0.15, 'drop_rate': 0.2}
[12:32:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.846, 'ROC_AUC': 0.9664677977188588, 'PR_AUC': 0.9353778047733403, 'Precision': 0.8469442044456245, 'TPR': 0.8457877420730266, 'FPR': 0.07703078691102644, 'inference_time [seconds]': 0.05739879608154297, 'train_time [seconds]': 83.8617992401123, 'noise': 0.2, 'drop_rate': 0.15}
[12:33:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.862, 'ROC_AUC': 0.972355602383093, 'PR_AUC': 0.9470240060198112, 'Precision': 0.8619854202401371, 'TPR': 0.8616996946005288, 'FPR': 0.06901073624946527, 'inference_time [seconds]': 0.05693960189819336, 'train_time [seconds]': 80.62202095985413, 'noise': 0.2, 'drop_rate': 0.15}
[12:35:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.828, 'ROC_AUC': 0.964698398303749, 'PR_AUC': 0.9335789205441, 'Precision': 0.82801411042056, 'TPR': 0.8278491768760535, 'FPR': 0.08599830595381362, 'inference_time [seconds]': 0.055478572845458984, 'train_time [seconds]': 82.1232545375824, 'noise': 0.2, 'drop_rate': 0.2}
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/torch/nn/_reduction.py:42: UserWarning: size_average and reduce args will be deprecated, please use reduction='sum' instead.
  warnings.warn(warning.format(ret))
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
[12:36:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.88, 'ROC_AUC': 0.9763942297493986, 'PR_AUC': 0.9561894438573318, 'Precision': 0.8800924634440545, 'TPR': 0.8796902510526237, 'FPR': 0.06002263408431368, 'inference_time [seconds]': 0.05690813064575195, 'train_time [seconds]': 77.11344337463379, 'noise': 0.1, 'drop_rate': 0.15}
[12:37:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.836, 'ROC_AUC': 0.9645901426523585, 'PR_AUC': 0.9333466208059468, 'Precision': 0.8371745368114606, 'TPR': 0.8360256158217233, 'FPR': 0.08194914675316366, 'inference_time [seconds]': 0.05654764175415039, 'train_time [seconds]': 78.95526599884033, 'noise': 0.2, 'drop_rate': 0.1}
hill-valley.csv
2
[12:38:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5983606557377049, 'ROC_AUC': 0.6042730448804086, 'PR_AUC': 0.5986204010796496, 'Precision': 0.6005494505494506, 'TPR': 0.5983606557377049, 'FPR': 0.4016393442622951, 'inference_time [seconds]': 0.09182828371642066, 'train_time [seconds]': 23.071709156036377, 'noise': 0.2, 'drop_rate': 0.2}
[12:38:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5245901639344263, 'ROC_AUC': 0.569470572426767, 'PR_AUC': 0.5803058938400938, 'Precision': 0.5246963562753036, 'TPR': 0.5245901639344261, 'FPR': 0.47540983606557374, 'inference_time [seconds]': 0.09260607547447329, 'train_time [seconds]': 20.339946746826172, 'noise': 0.1, 'drop_rate': 0.1}
[12:38:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.512396694214876, 'ROC_AUC': 0.52827868852459, 'PR_AUC': 0.5297020460826578, 'Precision': 0.5129906025428413, 'TPR': 0.5128415300546448, 'FPR': 0.4871584699453552, 'inference_time [seconds]': 0.14420580272832192, 'train_time [seconds]': 22.278460264205933, 'noise': 0.2, 'drop_rate': 0.2}
[12:39:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5454545454545454, 'ROC_AUC': 0.5791666666666666, 'PR_AUC': 0.600898438593854, 'Precision': 0.5503246753246753, 'TPR': 0.5465846994535519, 'FPR': 0.4534153005464481, 'inference_time [seconds]': 0.09297339384220848, 'train_time [seconds]': 20.858198404312134, 'noise': 0.15, 'drop_rate': 0.15}
[12:39:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5785123966942148, 'ROC_AUC': 0.5942622950819672, 'PR_AUC': 0.5871956843871583, 'Precision': 0.580685618729097, 'TPR': 0.5790983606557377, 'FPR': 0.4209016393442623, 'inference_time [seconds]': 0.09188573222515012, 'train_time [seconds]': 20.74690580368042, 'noise': 0.15, 'drop_rate': 0.2}
[12:40:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5619834710743802, 'ROC_AUC': 0.6128415300546448, 'PR_AUC': 0.6095166870782818, 'Precision': 0.565204678362573, 'TPR': 0.5609289617486339, 'FPR': 0.4390710382513661, 'inference_time [seconds]': 0.4414999780576091, 'train_time [seconds]': 22.862725257873535, 'noise': 0.1, 'drop_rate': 0.1}
[12:40:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5289256198347108, 'ROC_AUC': 0.53551912568306, 'PR_AUC': 0.5411306673067248, 'Precision': 0.5289915966386555, 'TPR': 0.5282786885245901, 'FPR': 0.47172131147540985, 'inference_time [seconds]': 0.09874667017913062, 'train_time [seconds]': 21.295642852783203, 'noise': 0.1, 'drop_rate': 0.1}
[12:40:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5454545454545454, 'ROC_AUC': 0.5795081967213115, 'PR_AUC': 0.5877439364537573, 'Precision': 0.5453673245614035, 'TPR': 0.5452185792349726, 'FPR': 0.4547814207650273, 'inference_time [seconds]': 0.09186602821034834, 'train_time [seconds]': 19.989280462265015, 'noise': 0.2, 'drop_rate': 0.15}
[12:41:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6115702479338843, 'ROC_AUC': 0.592896174863388, 'PR_AUC': 0.5776650070870327, 'Precision': 0.6127913429522752, 'TPR': 0.6110655737704918, 'FPR': 0.3889344262295082, 'inference_time [seconds]': 0.10165498276387365, 'train_time [seconds]': 22.588317155838013, 'noise': 0.15, 'drop_rate': 0.2}
[12:41:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5206611570247934, 'ROC_AUC': 0.5512295081967213, 'PR_AUC': 0.5626236610907898, 'Precision': 0.520970394736842, 'TPR': 0.5209016393442623, 'FPR': 0.47909836065573774, 'inference_time [seconds]': 0.2658702125234052, 'train_time [seconds]': 22.993828296661377, 'noise': 0.15, 'drop_rate': 0.15}
musk-1.csv
2
[12:41:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7083333333333334, 'ROC_AUC': 0.8853615520282188, 'PR_AUC': 0.9009637489472141, 'Precision': 0.7060869565217391, 'TPR': 0.7089947089947091, 'FPR': 0.291005291005291, 'inference_time [seconds]': 0.5333274602890015, 'train_time [seconds]': 9.809607028961182, 'noise': 0.15, 'drop_rate': 0.2}
[12:41:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8125, 'ROC_AUC': 0.9523809523809524, 'PR_AUC': 0.9553501292248979, 'Precision': 0.8166666666666667, 'TPR': 0.8015873015873016, 'FPR': 0.1984126984126984, 'inference_time [seconds]': 0.5381902058919271, 'train_time [seconds]': 9.85274624824524, 'noise': 0.1, 'drop_rate': 0.1}
[12:42:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7916666666666666, 'ROC_AUC': 0.9065255731922399, 'PR_AUC': 0.9086581817668269, 'Precision': 0.8121212121212121, 'TPR': 0.7724867724867726, 'FPR': 0.2275132275132275, 'inference_time [seconds]': 0.21591285864512125, 'train_time [seconds]': 10.019625186920166, 'noise': 0.2, 'drop_rate': 0.2}
[12:42:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5208333333333334, 'ROC_AUC': 0.7671957671957672, 'PR_AUC': 0.7626202640358543, 'Precision': 0.47631578947368425, 'TPR': 0.48412698412698413, 'FPR': 0.5158730158730158, 'inference_time [seconds]': 0.17731885115305582, 'train_time [seconds]': 9.889347553253174, 'noise': 0.2, 'drop_rate': 0.15}
[12:42:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7916666666666666, 'ROC_AUC': 0.9329805996472662, 'PR_AUC': 0.9390790269990139, 'Precision': 0.7883597883597884, 'TPR': 0.7883597883597884, 'FPR': 0.21164021164021163, 'inference_time [seconds]': 0.1781235138575236, 'train_time [seconds]': 10.069045543670654, 'noise': 0.15, 'drop_rate': 0.15}
[12:42:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7291666666666666, 'ROC_AUC': 0.8977072310405644, 'PR_AUC': 0.9087672586312241, 'Precision': 0.7291666666666666, 'TPR': 0.7328042328042328, 'FPR': 0.2671957671957672, 'inference_time [seconds]': 0.5337446928024292, 'train_time [seconds]': 9.886295080184937, 'noise': 0.15, 'drop_rate': 0.1}
[12:42:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6595744680851063, 'ROC_AUC': 0.7948717948717949, 'PR_AUC': 0.8164272634250638, 'Precision': 0.6556776556776557, 'TPR': 0.6556776556776557, 'FPR': 0.3443223443223443, 'inference_time [seconds]': 0.5378926053960272, 'train_time [seconds]': 9.75159215927124, 'noise': 0.15, 'drop_rate': 0.1}
[12:42:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8297872340425532, 'ROC_AUC': 0.9462962962962962, 'PR_AUC': 0.9454880704053472, 'Precision': 0.8315217391304348, 'TPR': 0.8388888888888889, 'FPR': 0.1611111111111111, 'inference_time [seconds]': 0.54289939555716, 'train_time [seconds]': 9.773462772369385, 'noise': 0.2, 'drop_rate': 0.2}
[12:43:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7021276595744681, 'ROC_AUC': 0.8962962962962964, 'PR_AUC': 0.9003674442048171, 'Precision': 0.7178571428571429, 'TPR': 0.6694444444444444, 'FPR': 0.3305555555555556, 'inference_time [seconds]': 0.1700330287852186, 'train_time [seconds]': 9.795225620269775, 'noise': 0.15, 'drop_rate': 0.2}
[12:43:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.723404255319149, 'ROC_AUC': 0.8777777777777778, 'PR_AUC': 0.8882620579903785, 'Precision': 0.7171052631578947, 'TPR': 0.7138888888888889, 'FPR': 0.2861111111111111, 'inference_time [seconds]': 0.1809039014451047, 'train_time [seconds]': 9.758946180343628, 'noise': 0.1, 'drop_rate': 0.1}
semeion.csv
10
[12:44:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9125, 'ROC_AUC': 0.9886538553639846, 'PR_AUC': 0.9461042479417561, 'Precision': 0.9226587301587301, 'TPR': 0.9120833333333334, 'FPR': 0.009727078477078478, 'inference_time [seconds]': 0.1501426100730896, 'train_time [seconds]': 61.04318833351135, 'noise': 0.1, 'drop_rate': 0.15}
[12:44:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9977556874329186, 'PR_AUC': 0.9848350956301324, 'Precision': 0.9518382352941177, 'TPR': 0.9499019607843138, 'FPR': 0.005546043994319857, 'inference_time [seconds]': 0.15224814414978027, 'train_time [seconds]': 32.7938711643219, 'noise': 0.1, 'drop_rate': 0.1}
[12:45:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9125, 'ROC_AUC': 0.9864895838504802, 'PR_AUC': 0.9280690896995246, 'Precision': 0.917486731534719, 'TPR': 0.9128186274509804, 'FPR': 0.009712710660986524, 'inference_time [seconds]': 0.15429258346557617, 'train_time [seconds]': 40.39043354988098, 'noise': 0.15, 'drop_rate': 0.15}
[12:46:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.89937106918239, 'ROC_AUC': 0.9880685055685057, 'PR_AUC': 0.9384313940998215, 'Precision': 0.9075677409965335, 'TPR': 0.8979166666666666, 'FPR': 0.011188811188811189, 'inference_time [seconds]': 0.15127583869598196, 'train_time [seconds]': 32.77259540557861, 'noise': 0.2, 'drop_rate': 0.1}
[12:46:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8805031446540881, 'ROC_AUC': 0.9927829577829579, 'PR_AUC': 0.9559520673413788, 'Precision': 0.8859479439549099, 'TPR': 0.8800000000000001, 'FPR': 0.013272144522144525, 'inference_time [seconds]': 0.14878219028688827, 'train_time [seconds]': 41.15279936790466, 'noise': 0.15, 'drop_rate': 0.1}
[12:47:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9245283018867925, 'ROC_AUC': 0.9953901191401192, 'PR_AUC': 0.9761612894641776, 'Precision': 0.9301640744016904, 'TPR': 0.9245833333333333, 'FPR': 0.008386752136752138, 'inference_time [seconds]': 0.15541442535208455, 'train_time [seconds]': 32.78687763214111, 'noise': 0.2, 'drop_rate': 0.15}
[12:48:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8742138364779874, 'ROC_AUC': 0.990469437969438, 'PR_AUC': 0.9511974316650746, 'Precision': 0.8865069815805109, 'TPR': 0.875, 'FPR': 0.013971445221445222, 'inference_time [seconds]': 0.24644683741923398, 'train_time [seconds]': 40.5796332359314, 'noise': 0.2, 'drop_rate': 0.1}
[12:48:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9245283018867925, 'ROC_AUC': 0.9922869722869724, 'PR_AUC': 0.9486509684845599, 'Precision': 0.9280130473241929, 'TPR': 0.9241666666666667, 'FPR': 0.008391608391608392, 'inference_time [seconds]': 0.16515959733687108, 'train_time [seconds]': 33.729193449020386, 'noise': 0.2, 'drop_rate': 0.2}
[12:49:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9308176100628931, 'ROC_AUC': 0.9977143227143227, 'PR_AUC': 0.9857336354593326, 'Precision': 0.9373039215686274, 'TPR': 0.9308333333333334, 'FPR': 0.0076874514374514384, 'inference_time [seconds]': 0.16919621881448998, 'train_time [seconds]': 42.28560733795166, 'noise': 0.15, 'drop_rate': 0.15}
[12:50:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8616352201257862, 'ROC_AUC': 0.990988085988086, 'PR_AUC': 0.942079337604562, 'Precision': 0.8704694570135747, 'TPR': 0.8612500000000001, 'FPR': 0.015365190365190365, 'inference_time [seconds]': 0.1695441000116696, 'train_time [seconds]': 33.574588775634766, 'noise': 0.15, 'drop_rate': 0.15}
waveform-noise.csv
3
[12:51:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.86, 'ROC_AUC': 0.9680819958058992, 'PR_AUC': 0.937975570496326, 'Precision': 0.8616717034943809, 'TPR': 0.8604775926369994, 'FPR': 0.06992754806930307, 'inference_time [seconds]': 0.05389213562011719, 'train_time [seconds]': 82.76170682907104, 'noise': 0.2, 'drop_rate': 0.15}
[12:53:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.864, 'ROC_AUC': 0.9726798590615263, 'PR_AUC': 0.9494348918862411, 'Precision': 0.8639586927452488, 'TPR': 0.8644475697302388, 'FPR': 0.06799177043847104, 'inference_time [seconds]': 0.055600643157958984, 'train_time [seconds]': 78.39815950393677, 'noise': 0.2, 'drop_rate': 0.1}
[12:54:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.862, 'ROC_AUC': 0.9684829340270366, 'PR_AUC': 0.940555861922029, 'Precision': 0.8628989181475369, 'TPR': 0.8625351684665864, 'FPR': 0.0689567881417127, 'inference_time [seconds]': 0.05488872528076172, 'train_time [seconds]': 80.99552321434021, 'noise': 0.2, 'drop_rate': 0.1}
[12:55:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.852, 'ROC_AUC': 0.9621584820215837, 'PR_AUC': 0.9270014473646663, 'Precision': 0.8523894606441776, 'TPR': 0.8521942170691013, 'FPR': 0.07403693762315293, 'inference_time [seconds]': 0.058312416076660156, 'train_time [seconds]': 83.0137128829956, 'noise': 0.15, 'drop_rate': 0.15}
[12:57:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.81, 'ROC_AUC': 0.9540542038845167, 'PR_AUC': 0.9126692832281181, 'Precision': 0.8113275415690794, 'TPR': 0.8104176433184774, 'FPR': 0.09495916405453962, 'inference_time [seconds]': 0.0565953254699707, 'train_time [seconds]': 82.87502193450928, 'noise': 0.15, 'drop_rate': 0.1}
[12:58:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.838, 'ROC_AUC': 0.9644708720213547, 'PR_AUC': 0.932324938403236, 'Precision': 0.83818393103332, 'TPR': 0.8383244206773618, 'FPR': 0.08097391828735112, 'inference_time [seconds]': 0.05663108825683594, 'train_time [seconds]': 83.21170592308044, 'noise': 0.2, 'drop_rate': 0.2}
[13:00:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.862, 'ROC_AUC': 0.9712189498142089, 'PR_AUC': 0.9439265088103515, 'Precision': 0.863406301953788, 'TPR': 0.8619132501485444, 'FPR': 0.06912407658676316, 'inference_time [seconds]': 0.05930280685424805, 'train_time [seconds]': 79.6341621875763, 'noise': 0.15, 'drop_rate': 0.15}
[13:01:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.864, 'ROC_AUC': 0.9703088268920785, 'PR_AUC': 0.9436120808323647, 'Precision': 0.8646131122546216, 'TPR': 0.8643049875672674, 'FPR': 0.06801294826588875, 'inference_time [seconds]': 0.055194854736328125, 'train_time [seconds]': 81.5931499004364, 'noise': 0.1, 'drop_rate': 0.15}
[13:02:50] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.84, 'ROC_AUC': 0.9652692812834002, 'PR_AUC': 0.9337962435708848, 'Precision': 0.840702324121283, 'TPR': 0.8402068737564566, 'FPR': 0.08000123664831586, 'inference_time [seconds]': 0.05273008346557617, 'train_time [seconds]': 77.10079646110535, 'noise': 0.1, 'drop_rate': 0.15}
[13:04:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.852, 'ROC_AUC': 0.9712869017200442, 'PR_AUC': 0.9468405246349368, 'Precision': 0.8566016454381545, 'TPR': 0.8525176193387499, 'FPR': 0.07386274481744003, 'inference_time [seconds]': 0.055071353912353516, 'train_time [seconds]': 82.1090338230133, 'noise': 0.2, 'drop_rate': 0.2}
low-res-spect.csv
9
[13:04:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9074074074074074, 'ROC_AUC': 0.990457096438521, 'PR_AUC': 0.869107744107744, 'Precision': 0.8861111111111111, 'TPR': 0.6005291005291006, 'FPR': 0.017950043066322138, 'inference_time [seconds]': 0.2722077899509006, 'train_time [seconds]': 12.243557214736938, 'noise': 0.15, 'drop_rate': 0.1}
[13:04:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7735849056603774, 'ROC_AUC': 0.9599328449328448, 'PR_AUC': 0.6913782333921222, 'Precision': 0.6354166666666666, 'TPR': 0.48953823953823955, 'FPR': 0.04495837495837495, 'inference_time [seconds]': 0.2746537046612434, 'train_time [seconds]': 13.419978857040405, 'noise': 0.15, 'drop_rate': 0.1}
[13:04:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8490566037735849, 'ROC_AUC': 0.9732272895063593, 'PR_AUC': 0.9037142345067183, 'Precision': 0.7308802308802308, 'TPR': 0.5612433862433862, 'FPR': 0.024504292351360972, 'inference_time [seconds]': 0.2918108454290426, 'train_time [seconds]': 13.791641235351562, 'noise': 0.2, 'drop_rate': 0.15}
[13:05:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9245283018867925, 'ROC_AUC': 0.9964450708636754, 'PR_AUC': 0.9892277898813847, 'Precision': 0.8655303030303031, 'TPR': 0.7796296296296296, 'FPR': 0.014744944977503118, 'inference_time [seconds]': 0.2803532582408977, 'train_time [seconds]': 13.573421955108643, 'noise': 0.2, 'drop_rate': 0.2}
[13:05:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9245283018867925, 'ROC_AUC': 0.9847563774972413, 'PR_AUC': 0.823078031862925, 'Precision': 0.819047619047619, 'TPR': 0.6314814814814814, 'FPR': 0.01703944111337257, 'inference_time [seconds]': 0.30160400102723317, 'train_time [seconds]': 13.90998911857605, 'noise': 0.1, 'drop_rate': 0.1}
[13:05:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8490566037735849, 'ROC_AUC': 0.9485396282074023, 'PR_AUC': 0.8131869088765641, 'Precision': 0.7356009070294783, 'TPR': 0.5843915343915344, 'FPR': 0.02457979824082035, 'inference_time [seconds]': 0.35129853014676077, 'train_time [seconds]': 13.98501443862915, 'noise': 0.2, 'drop_rate': 0.2}
[13:05:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8301886792452831, 'ROC_AUC': 0.9842611737960575, 'PR_AUC': 0.9684917856611115, 'Precision': 0.8520488132557098, 'TPR': 0.6092592592592593, 'FPR': 0.03778779360174709, 'inference_time [seconds]': 0.3741417291029444, 'train_time [seconds]': 14.09362530708313, 'noise': 0.2, 'drop_rate': 0.1}
[13:06:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9245283018867925, 'ROC_AUC': 0.8841305550607876, 'PR_AUC': 0.7659023578438202, 'Precision': 0.8625, 'TPR': 0.6841269841269841, 'FPR': 0.01678156748911466, 'inference_time [seconds]': 0.3950460901800192, 'train_time [seconds]': 13.989693641662598, 'noise': 0.15, 'drop_rate': 0.2}
[13:06:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8301886792452831, 'ROC_AUC': 0.9831183836641834, 'PR_AUC': 0.8774843102224054, 'Precision': 0.856550362080316, 'TPR': 0.5970899470899471, 'FPR': 0.04011105173895872, 'inference_time [seconds]': 0.30549067371296434, 'train_time [seconds]': 14.24592924118042, 'noise': 0.1, 'drop_rate': 0.1}
[13:06:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8113207547169812, 'ROC_AUC': 0.9867940701274035, 'PR_AUC': 0.945812278246538, 'Precision': 0.7668831168831168, 'TPR': 0.5155723905723906, 'FPR': 0.045071409145340614, 'inference_time [seconds]': 0.2909696327065522, 'train_time [seconds]': 14.039228439331055, 'noise': 0.1, 'drop_rate': 0.15}
ozone.csv
2
[13:07:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.9768652400231348, 'PR_AUC': 0.7660073438573685, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.189630065377303, 'train_time [seconds]': 44.01470065116882, 'noise': 0.2, 'drop_rate': 0.15}
[13:08:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8577212261422787, 'PR_AUC': 0.6628161227582305, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.07969657267172506, 'train_time [seconds]': 44.21924018859863, 'noise': 0.15, 'drop_rate': 0.1}
[13:08:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8345864661654135, 'PR_AUC': 0.5900819879857025, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.08169590957521454, 'train_time [seconds]': 44.20543432235718, 'noise': 0.1, 'drop_rate': 0.15}
[13:09:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.8831300813008129, 'PR_AUC': 0.678667136591339, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.2903450192428949, 'train_time [seconds]': 44.29427766799927, 'noise': 0.2, 'drop_rate': 0.1}
[13:10:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.885670731707317, 'PR_AUC': 0.618726309016905, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.06806099508691021, 'train_time [seconds]': 43.98434591293335, 'noise': 0.15, 'drop_rate': 0.2}
[13:11:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9645669291338582, 'ROC_AUC': 0.9375, 'PR_AUC': 0.669132749669529, 'Precision': 0.6879518072289157, 'TPR': 0.6189024390243902, 'FPR': 0.38109756097560976, 'inference_time [seconds]': 0.06655163652314915, 'train_time [seconds]': 44.23406147956848, 'noise': 0.1, 'drop_rate': 0.15}
[13:11:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8356562137049941, 'PR_AUC': 0.614996603142016, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.06277664847995924, 'train_time [seconds]': 43.997337102890015, 'noise': 0.1, 'drop_rate': 0.1}
[13:12:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8821138211382114, 'PR_AUC': 0.6783102082514821, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.07556549645224107, 'train_time [seconds]': 43.95039343833923, 'noise': 0.15, 'drop_rate': 0.15}
[13:13:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.9825783972125436, 'PR_AUC': 0.736958302088412, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.1748286688280671, 'train_time [seconds]': 43.986873626708984, 'noise': 0.2, 'drop_rate': 0.2}
[13:14:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.9221835075493612, 'PR_AUC': 0.6851514731943434, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.06272199125629169, 'train_time [seconds]': 44.41020441055298, 'noise': 0.2, 'drop_rate': 0.15}
spambase.csv
2
[13:15:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9370932754880694, 'ROC_AUC': 0.9804442868958999, 'PR_AUC': 0.9792144316937477, 'Precision': 0.9332060321190756, 'TPR': 0.9356118791602663, 'FPR': 0.06438812083973375, 'inference_time [seconds]': 0.05125171967545714, 'train_time [seconds]': 76.95577049255371, 'noise': 0.1, 'drop_rate': 0.1}
[13:16:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9347826086956522, 'ROC_AUC': 0.9824492054707882, 'PR_AUC': 0.982242489772414, 'Precision': 0.9362080103359174, 'TPR': 0.9270693335441537, 'FPR': 0.07293066645584631, 'inference_time [seconds]': 0.2611533455226732, 'train_time [seconds]': 77.1554229259491, 'noise': 0.2, 'drop_rate': 0.1}
[13:18:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.967391304347826, 'ROC_AUC': 0.9907897857538146, 'PR_AUC': 0.9899425748266208, 'Precision': 0.9672259885882424, 'TPR': 0.9644833583682504, 'FPR': 0.03551664163174954, 'inference_time [seconds]': 0.056996552840523095, 'train_time [seconds]': 77.02725744247437, 'noise': 0.2, 'drop_rate': 0.2}
[13:19:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9369565217391305, 'ROC_AUC': 0.9909503158478387, 'PR_AUC': 0.9903274248532312, 'Precision': 0.9343253968253968, 'TPR': 0.9334739301768351, 'FPR': 0.06652606982316481, 'inference_time [seconds]': 0.05193067633587381, 'train_time [seconds]': 77.17880845069885, 'noise': 0.15, 'drop_rate': 0.2}
[13:20:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9823560862591338, 'PR_AUC': 0.9757960270864479, 'Precision': 0.9454005006257822, 'TPR': 0.9510188320560804, 'FPR': 0.048981167943919685, 'inference_time [seconds]': 0.051904761272927986, 'train_time [seconds]': 77.131662607193, 'noise': 0.2, 'drop_rate': 0.1}
[13:21:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9478260869565217, 'ROC_AUC': 0.9870888532446187, 'PR_AUC': 0.9867799034184137, 'Precision': 0.943980343980344, 'TPR': 0.9472860848729678, 'FPR': 0.05271391512703222, 'inference_time [seconds]': 0.05211830139160156, 'train_time [seconds]': 72.42096710205078, 'noise': 0.1, 'drop_rate': 0.1}
[13:23:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9282608695652174, 'ROC_AUC': 0.9839006713004218, 'PR_AUC': 0.9796733385739917, 'Precision': 0.9251984126984127, 'TPR': 0.9243648389077012, 'FPR': 0.07563516109229886, 'inference_time [seconds]': 0.05362448485001274, 'train_time [seconds]': 70.69040131568909, 'noise': 0.1, 'drop_rate': 0.1}
[13:24:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9456521739130435, 'ROC_AUC': 0.9861581417453811, 'PR_AUC': 0.9838148100691686, 'Precision': 0.9472302971576227, 'TPR': 0.9387017564704252, 'FPR': 0.061298243529574845, 'inference_time [seconds]': 0.05217064981875212, 'train_time [seconds]': 76.8422601222992, 'noise': 0.15, 'drop_rate': 0.15}
[13:25:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9456521739130435, 'ROC_AUC': 0.9820590506742708, 'PR_AUC': 0.9822882357656066, 'Precision': 0.9483772819472617, 'TPR': 0.9377314402265391, 'FPR': 0.06226855977346086, 'inference_time [seconds]': 0.12069422265757686, 'train_time [seconds]': 77.38213586807251, 'noise': 0.2, 'drop_rate': 0.2}
[13:26:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9130434782608695, 'ROC_AUC': 0.9818214222063804, 'PR_AUC': 0.9813190286186684, 'Precision': 0.9187768752986144, 'TPR': 0.8992059248697994, 'FPR': 0.1007940751302006, 'inference_time [seconds]': 0.05152951116147249, 'train_time [seconds]': 77.076744556427, 'noise': 0.15, 'drop_rate': 0.15}
wine-quality-white.csv
7
[13:28:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6816326530612244, 'ROC_AUC': 0.8827226281938723, 'PR_AUC': 0.5984386661982447, 'Precision': 0.8454484677288868, 'TPR': 0.4525785656728445, 'FPR': 0.08765078569255359, 'inference_time [seconds]': 0.08100100925990514, 'train_time [seconds]': 83.79582905769348, 'noise': 0.2, 'drop_rate': 0.1}
[13:29:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6877551020408164, 'ROC_AUC': 0.8028784426669745, 'PR_AUC': 0.4835960255579866, 'Precision': 0.8116933169331694, 'TPR': 0.41084932727761087, 'FPR': 0.08516436784833174, 'inference_time [seconds]': 0.07221358163016182, 'train_time [seconds]': 78.52420139312744, 'noise': 0.15, 'drop_rate': 0.15}
[13:31:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7142857142857143, 'ROC_AUC': 0.8285985903772853, 'PR_AUC': 0.5934489607268466, 'Precision': 0.7492241071333354, 'TPR': 0.45996843943056676, 'FPR': 0.07694530830305445, 'inference_time [seconds]': 0.07412628251679089, 'train_time [seconds]': 80.77073860168457, 'noise': 0.2, 'drop_rate': 0.15}
[13:32:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6714285714285714, 'ROC_AUC': 0.8010147059268474, 'PR_AUC': 0.4709441474890177, 'Precision': 0.8090695348101536, 'TPR': 0.42331972016702074, 'FPR': 0.07465345913427847, 'inference_time [seconds]': 0.07849664104228117, 'train_time [seconds]': 84.96335411071777, 'noise': 0.15, 'drop_rate': 0.1}
[13:33:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6918367346938775, 'ROC_AUC': 0.8643458780035925, 'PR_AUC': 0.4581706587901705, 'Precision': 0.8323281489666717, 'TPR': 0.39610114905239807, 'FPR': 0.07204699488969192, 'inference_time [seconds]': 0.08140486113879146, 'train_time [seconds]': 78.34432697296143, 'noise': 0.15, 'drop_rate': 0.1}
[13:35:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6979591836734694, 'ROC_AUC': 0.8105927141761876, 'PR_AUC': 0.4514085437075206, 'Precision': 0.8678926336821073, 'TPR': 0.389818754042892, 'FPR': 0.06947766344262127, 'inference_time [seconds]': 0.07602779232725805, 'train_time [seconds]': 82.78864121437073, 'noise': 0.1, 'drop_rate': 0.15}
[13:36:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6857142857142857, 'ROC_AUC': 0.8808365996771091, 'PR_AUC': 0.4961849939118936, 'Precision': 0.8638799496995391, 'TPR': 0.3881369109817386, 'FPR': 0.07375098283599257, 'inference_time [seconds]': 0.0788659465556242, 'train_time [seconds]': 77.33541440963745, 'noise': 0.15, 'drop_rate': 0.15}
[13:37:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.689795918367347, 'ROC_AUC': 0.8273871430924802, 'PR_AUC': 0.45623657235377035, 'Precision': 0.8386179479548568, 'TPR': 0.35330210976762705, 'FPR': 0.07373511490515902, 'inference_time [seconds]': 0.0782791449099171, 'train_time [seconds]': 78.57939600944519, 'noise': 0.2, 'drop_rate': 0.1}
[13:39:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6748466257668712, 'ROC_AUC': 0.8376999426380666, 'PR_AUC': 0.535450323003992, 'Precision': 0.7647060618671105, 'TPR': 0.4594143489691435, 'FPR': 0.08710117473847516, 'inference_time [seconds]': 0.07929489900241844, 'train_time [seconds]': 84.16235375404358, 'noise': 0.1, 'drop_rate': 0.15}
[13:40:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.854926404386811, 'PR_AUC': 0.5354259137746699, 'Precision': 0.7970842676459262, 'TPR': 0.4295509316913426, 'FPR': 0.0906884693996372, 'inference_time [seconds]': 0.08002624433708581, 'train_time [seconds]': 83.81696033477783, 'noise': 0.2, 'drop_rate': 0.1}
finish
