Thu Aug 5 17:41:55 IDT 2021

SLURM_JOBID:		 148964
SLURM_JOB_NODELIST:	 dt-1080-01 


/home/amirbial/Computational_Learning/Scratch/train.py
2021-08-05 17:42:11.700184: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0
start main
Improve =True
0.05
arrhythmia.csv
13
[17:43:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6956521739130435, 'ROC_AUC': 0.8713154349961445, 'PR_AUC': 0.599836240239603, 'Precision': 0.8311942959001782, 'TPR': 0.4063636363636363, 'FPR': 0.053968573924228026, 'inference_time [seconds]': 0.4046066947605299, 'train_time [seconds]': 37.21407389640808, 'noise': 0.2, 'drop_rate': 0.2}
[17:43:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6956521739130435, 'ROC_AUC': 0.8726559545406551, 'PR_AUC': 0.6126926006264349, 'Precision': 0.8272727272727273, 'TPR': 0.44272727272727275, 'FPR': 0.04535615899252263, 'inference_time [seconds]': 0.3987654395725416, 'train_time [seconds]': 11.97934865951538, 'noise': 0.15, 'drop_rate': 0.15}
[17:43:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8199852168062604, 'PR_AUC': 0.6508374147105129, 'Precision': 0.8425641025641024, 'TPR': 0.505, 'FPR': 0.05511324041811846, 'inference_time [seconds]': 0.39385689629448783, 'train_time [seconds]': 11.992701053619385, 'noise': 0.1, 'drop_rate': 0.2}
[17:43:44] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.8206666642111905, 'PR_AUC': 0.6433538130085252, 'Precision': 0.6959677419354839, 'TPR': 0.45666666666666667, 'FPR': 0.05500270102368798, 'inference_time [seconds]': 0.39313104417588973, 'train_time [seconds]': 12.123237133026123, 'noise': 0.2, 'drop_rate': 0.1}
[17:43:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.7766516559321437, 'PR_AUC': 0.5234416893905804, 'Precision': 0.6883333333333332, 'TPR': 0.385, 'FPR': 0.054838718192376734, 'inference_time [seconds]': 0.3930409749348958, 'train_time [seconds]': 11.806915044784546, 'noise': 0.15, 'drop_rate': 0.2}
[17:44:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6222222222222222, 'ROC_AUC': 0.8866805863513181, 'PR_AUC': 0.6331401105262605, 'Precision': 0.8715099715099714, 'TPR': 0.37333333333333335, 'FPR': 0.057784552845528456, 'inference_time [seconds]': 0.39852460225423175, 'train_time [seconds]': 11.974534034729004, 'noise': 0.2, 'drop_rate': 0.1}
[17:44:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.8589899493271587, 'PR_AUC': 0.680587950209914, 'Precision': 0.8455882352941178, 'TPR': 0.33333333333333337, 'FPR': 0.057499999999999996, 'inference_time [seconds]': 0.3936661614312066, 'train_time [seconds]': 11.72141432762146, 'noise': 0.15, 'drop_rate': 0.1}
[17:44:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6888888888888889, 'ROC_AUC': 0.8249710359408035, 'PR_AUC': 0.5676137210583748, 'Precision': 0.8358585858585859, 'TPR': 0.41000000000000003, 'FPR': 0.05610651974288338, 'inference_time [seconds]': 0.39614571465386283, 'train_time [seconds]': 11.153332710266113, 'noise': 0.2, 'drop_rate': 0.1}
[17:44:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7111111111111111, 'ROC_AUC': 0.8169238900634249, 'PR_AUC': 0.6331604360104087, 'Precision': 0.7922077922077922, 'TPR': 0.4636363636363636, 'FPR': 0.05190755333461465, 'inference_time [seconds]': 0.4074202643500434, 'train_time [seconds]': 11.304424047470093, 'noise': 0.1, 'drop_rate': 0.2}
[17:44:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8788712473572939, 'PR_AUC': 0.6870307578624384, 'Precision': 0.7177777777777778, 'TPR': 0.324, 'FPR': 0.05197674418604651, 'inference_time [seconds]': 0.3925005594889323, 'train_time [seconds]': 11.990839958190918, 'noise': 0.2, 'drop_rate': 0.1}
mfeat-karhunen.csv
10
[17:45:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.91, 'ROC_AUC': 0.9931111111111111, 'PR_AUC': 0.9699506893999675, 'Precision': 0.9136989212160836, 'TPR': 0.9099999999999998, 'FPR': 0.009999999999999998, 'inference_time [seconds]': 0.10573029518127441, 'train_time [seconds]': 40.29507279396057, 'noise': 0.1, 'drop_rate': 0.15}
[17:46:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.935, 'ROC_AUC': 0.9992222222222221, 'PR_AUC': 0.9933964027243828, 'Precision': 0.941030878754664, 'TPR': 0.9349999999999999, 'FPR': 0.007222222222222222, 'inference_time [seconds]': 0.10602712631225586, 'train_time [seconds]': 38.3876736164093, 'noise': 0.2, 'drop_rate': 0.1}
[17:47:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.93, 'ROC_AUC': 0.9983055555555558, 'PR_AUC': 0.9906874820450339, 'Precision': 0.9375579975579976, 'TPR': 0.9299999999999999, 'FPR': 0.0077777777777777776, 'inference_time [seconds]': 0.10524868965148926, 'train_time [seconds]': 38.95580458641052, 'noise': 0.1, 'drop_rate': 0.15}
[17:47:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.93, 'ROC_AUC': 0.9951666666666666, 'PR_AUC': 0.97754613725233, 'Precision': 0.9334864830059338, 'TPR': 0.9299999999999999, 'FPR': 0.0077777777777777776, 'inference_time [seconds]': 0.10488033294677734, 'train_time [seconds]': 39.04834747314453, 'noise': 0.2, 'drop_rate': 0.15}
[17:48:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.92, 'ROC_AUC': 0.99475, 'PR_AUC': 0.9686818330168574, 'Precision': 0.9297144174382026, 'TPR': 0.9199999999999999, 'FPR': 0.008888888888888887, 'inference_time [seconds]': 0.10531902313232422, 'train_time [seconds]': 39.8167564868927, 'noise': 0.2, 'drop_rate': 0.2}
[17:49:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.935, 'ROC_AUC': 0.9962777777777777, 'PR_AUC': 0.9796808495418674, 'Precision': 0.9380055210489993, 'TPR': 0.9349999999999999, 'FPR': 0.007222222222222222, 'inference_time [seconds]': 0.10561108589172363, 'train_time [seconds]': 38.82508897781372, 'noise': 0.2, 'drop_rate': 0.15}
[17:49:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.91, 'ROC_AUC': 0.9936666666666666, 'PR_AUC': 0.9699308345534574, 'Precision': 0.9151231256666039, 'TPR': 0.9099999999999999, 'FPR': 0.009999999999999998, 'inference_time [seconds]': 0.10547041893005371, 'train_time [seconds]': 39.81723356246948, 'noise': 0.15, 'drop_rate': 0.15}
[17:50:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.91, 'ROC_AUC': 0.9954444444444445, 'PR_AUC': 0.9743052194626909, 'Precision': 0.9144376999811783, 'TPR': 0.9099999999999999, 'FPR': 0.01, 'inference_time [seconds]': 0.10577201843261719, 'train_time [seconds]': 39.47076725959778, 'noise': 0.2, 'drop_rate': 0.15}
[17:51:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.905, 'ROC_AUC': 0.9971388888888889, 'PR_AUC': 0.9759906849193001, 'Precision': 0.9137846602291683, 'TPR': 0.9049999999999999, 'FPR': 0.010555555555555556, 'inference_time [seconds]': 0.10510087013244629, 'train_time [seconds]': 39.59749221801758, 'noise': 0.15, 'drop_rate': 0.1}
[17:51:51] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.945, 'ROC_AUC': 0.9980833333333334, 'PR_AUC': 0.9878072090685256, 'Precision': 0.9463869566965541, 'TPR': 0.945, 'FPR': 0.0061111111111111106, 'inference_time [seconds]': 0.10493993759155273, 'train_time [seconds]': 39.33432221412659, 'noise': 0.15, 'drop_rate': 0.15}
plant-margin.csv
100
[17:52:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.58125, 'ROC_AUC': 0.9930202611257066, 'PR_AUC': 0.8079906015037595, 'Precision': 0.7612619047619049, 'TPR': 0.59, 'FPR': 0.0042297587771674226, 'inference_time [seconds]': 0.8058264851570129, 'train_time [seconds]': 53.13239574432373, 'noise': 0.2, 'drop_rate': 0.1}
[17:53:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9936860122601704, 'PR_AUC': 0.865449124949125, 'Precision': 0.7935, 'TPR': 0.61, 'FPR': 0.004167661810365418, 'inference_time [seconds]': 0.8182838559150696, 'train_time [seconds]': 56.5379958152771, 'noise': 0.15, 'drop_rate': 0.1}
[17:54:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.60625, 'ROC_AUC': 0.9941815938221478, 'PR_AUC': 0.8962078240387065, 'Precision': 0.8376785714285714, 'TPR': 0.615, 'FPR': 0.003973807817848898, 'inference_time [seconds]': 0.8023425936698914, 'train_time [seconds]': 56.564751386642456, 'noise': 0.1, 'drop_rate': 0.15}
[17:55:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.675, 'ROC_AUC': 0.9886852161452114, 'PR_AUC': 0.8455650878164478, 'Precision': 0.8138571428571428, 'TPR': 0.695, 'FPR': 0.003281585860998328, 'inference_time [seconds]': 0.8075445890426636, 'train_time [seconds]': 56.7284996509552, 'noise': 0.2, 'drop_rate': 0.1}
[17:56:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.65, 'ROC_AUC': 0.9940970066077541, 'PR_AUC': 0.842762196137196, 'Precision': 0.8032460317460317, 'TPR': 0.66, 'FPR': 0.0035363426478783534, 'inference_time [seconds]': 0.8053570985794067, 'train_time [seconds]': 56.72063970565796, 'noise': 0.15, 'drop_rate': 0.2}
[17:57:45] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55625, 'ROC_AUC': 0.9912809489690311, 'PR_AUC': 0.7850576217578505, 'Precision': 0.7866666666666667, 'TPR': 0.57, 'FPR': 0.0044861077939654485, 'inference_time [seconds]': 0.8292511105537415, 'train_time [seconds]': 54.39996838569641, 'noise': 0.15, 'drop_rate': 0.15}
[17:58:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9909376243929624, 'PR_AUC': 0.8353709456209455, 'Precision': 0.7763571428571429, 'TPR': 0.57, 'FPR': 0.004166865695406416, 'inference_time [seconds]': 0.8019953966140747, 'train_time [seconds]': 50.81243538856506, 'noise': 0.2, 'drop_rate': 0.15}
[17:59:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9907929304991641, 'PR_AUC': 0.7818075396825398, 'Precision': 0.7923571428571428, 'TPR': 0.58, 'FPR': 0.004166069580447417, 'inference_time [seconds]': 0.8142083883285522, 'train_time [seconds]': 55.428380727767944, 'noise': 0.15, 'drop_rate': 0.1}
[18:00:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5875, 'ROC_AUC': 0.9917227927712762, 'PR_AUC': 0.8188382352941176, 'Precision': 0.8078333333333333, 'TPR': 0.6, 'FPR': 0.0041656715229679165, 'inference_time [seconds]': 0.8166879415512085, 'train_time [seconds]': 53.80165481567383, 'noise': 0.1, 'drop_rate': 0.15}
[18:01:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.59375, 'ROC_AUC': 0.9935634105564844, 'PR_AUC': 0.8470119047619048, 'Precision': 0.7890384615384616, 'TPR': 0.59, 'FPR': 0.004105962901042911, 'inference_time [seconds]': 0.8061006665229797, 'train_time [seconds]': 56.12478184700012, 'noise': 0.1, 'drop_rate': 0.2}
steel-plates.csv
7
[18:02:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7794871794871795, 'ROC_AUC': 0.9652766397664941, 'PR_AUC': 0.8897853967609584, 'Precision': 0.8523393786645722, 'TPR': 0.7928367298336337, 'FPR': 0.04299828449020756, 'inference_time [seconds]': 0.09125685080503806, 'train_time [seconds]': 37.64727163314819, 'noise': 0.1, 'drop_rate': 0.15}
[18:02:55] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7216494845360825, 'ROC_AUC': 0.9434417937319177, 'PR_AUC': 0.8180560983872488, 'Precision': 0.8715572715572716, 'TPR': 0.6488780124413049, 'FPR': 0.0572664550152848, 'inference_time [seconds]': 0.0912626994024847, 'train_time [seconds]': 37.529757499694824, 'noise': 0.1, 'drop_rate': 0.15}
[18:03:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7371134020618557, 'ROC_AUC': 0.9280188377010548, 'PR_AUC': 0.789348741008517, 'Precision': 0.811023709237995, 'TPR': 0.7067671844857346, 'FPR': 0.05179947274363707, 'inference_time [seconds]': 0.09076742781806238, 'train_time [seconds]': 36.55964946746826, 'noise': 0.1, 'drop_rate': 0.1}
[18:04:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7680412371134021, 'ROC_AUC': 0.9591202520986111, 'PR_AUC': 0.8700277789150748, 'Precision': 0.8236355007119128, 'TPR': 0.7556209337925754, 'FPR': 0.046998223153841646, 'inference_time [seconds]': 0.09190790432015646, 'train_time [seconds]': 37.7847626209259, 'noise': 0.1, 'drop_rate': 0.1}
[18:04:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7319587628865979, 'ROC_AUC': 0.9426858084544882, 'PR_AUC': 0.8309172533058101, 'Precision': 0.8245930442594183, 'TPR': 0.7637872307059267, 'FPR': 0.051987073597461284, 'inference_time [seconds]': 0.09082887590545968, 'train_time [seconds]': 35.63257312774658, 'noise': 0.15, 'drop_rate': 0.2}
[18:05:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7216494845360825, 'ROC_AUC': 0.9541587729977784, 'PR_AUC': 0.8490330265631566, 'Precision': 0.7882265275707898, 'TPR': 0.742309670559867, 'FPR': 0.052606750013066424, 'inference_time [seconds]': 0.09125040978500523, 'train_time [seconds]': 36.53982591629028, 'noise': 0.15, 'drop_rate': 0.1}
[18:06:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7680412371134021, 'ROC_AUC': 0.9600368114902084, 'PR_AUC': 0.8689765673166049, 'Precision': 0.8508541008541008, 'TPR': 0.735188558650654, 'FPR': 0.04593152184021807, 'inference_time [seconds]': 0.09164121962085213, 'train_time [seconds]': 36.51542901992798, 'noise': 0.2, 'drop_rate': 0.15}
[18:06:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7371134020618557, 'ROC_AUC': 0.9593484774296469, 'PR_AUC': 0.8640033582481887, 'Precision': 0.8141773754956528, 'TPR': 0.7479363829542495, 'FPR': 0.05048471522831753, 'inference_time [seconds]': 0.09137945076853958, 'train_time [seconds]': 37.679651498794556, 'noise': 0.15, 'drop_rate': 0.2}
[18:07:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7680412371134021, 'ROC_AUC': 0.9607931189696007, 'PR_AUC': 0.8737308109117018, 'Precision': 0.8077495965126626, 'TPR': 0.757639898064489, 'FPR': 0.046371440625231526, 'inference_time [seconds]': 0.10042338027167566, 'train_time [seconds]': 36.72839331626892, 'noise': 0.15, 'drop_rate': 0.1}
[18:07:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7422680412371134, 'ROC_AUC': 0.9378059536750796, 'PR_AUC': 0.7729313528502738, 'Precision': 0.7895075526654473, 'TPR': 0.6826784154957529, 'FPR': 0.05010363063294093, 'inference_time [seconds]': 0.09576684420870751, 'train_time [seconds]': 38.10390543937683, 'noise': 0.2, 'drop_rate': 0.15}
bank.csv
2
[18:09:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9006622516556292, 'ROC_AUC': 0.8980188679245283, 'PR_AUC': 0.7946815466873965, 'Precision': 0.8450211519687602, 'TPR': 0.6000235849056604, 'FPR': 0.3999764150943396, 'inference_time [seconds]': 0.06390091599218103, 'train_time [seconds]': 78.23104000091553, 'noise': 0.2, 'drop_rate': 0.2}
[18:10:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8915929203539823, 'ROC_AUC': 0.8675480769230768, 'PR_AUC': 0.723295239278397, 'Precision': 0.7814145974416855, 'TPR': 0.5539423076923077, 'FPR': 0.44605769230769227, 'inference_time [seconds]': 0.07210263108785174, 'train_time [seconds]': 78.75504899024963, 'noise': 0.15, 'drop_rate': 0.2}
[18:11:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8871681415929203, 'ROC_AUC': 0.9053846153846155, 'PR_AUC': 0.733607044540412, 'Precision': 0.7152805949966193, 'TPR': 0.5765384615384616, 'FPR': 0.42346153846153844, 'inference_time [seconds]': 0.04296650928733623, 'train_time [seconds]': 75.50099778175354, 'noise': 0.2, 'drop_rate': 0.15}
[18:13:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8893805309734514, 'ROC_AUC': 0.9190384615384615, 'PR_AUC': 0.7516413708850473, 'Precision': 0.7293906810035842, 'TPR': 0.5861538461538461, 'FPR': 0.41384615384615386, 'inference_time [seconds]': 0.046321248586198925, 'train_time [seconds]': 79.04233360290527, 'noise': 0.2, 'drop_rate': 0.2}
[18:14:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.918141592920354, 'ROC_AUC': 0.9092788461538461, 'PR_AUC': 0.8196709470546961, 'Precision': 0.8891282731189923, 'TPR': 0.6693269230769231, 'FPR': 0.3306730769230769, 'inference_time [seconds]': 0.042868926461819, 'train_time [seconds]': 73.74709606170654, 'noise': 0.2, 'drop_rate': 0.1}
[18:15:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8960176991150443, 'ROC_AUC': 0.9041826923076923, 'PR_AUC': 0.7671239271808236, 'Precision': 0.7642801900342504, 'TPR': 0.615, 'FPR': 0.385, 'inference_time [seconds]': 0.04292061898560651, 'train_time [seconds]': 72.59581136703491, 'noise': 0.15, 'drop_rate': 0.2}
[18:16:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8915929203539823, 'ROC_AUC': 0.9261057692307693, 'PR_AUC': 0.7862339552988672, 'Precision': 0.745841784989858, 'TPR': 0.5874038461538462, 'FPR': 0.41259615384615383, 'inference_time [seconds]': 0.04295121252009299, 'train_time [seconds]': 72.47607636451721, 'noise': 0.1, 'drop_rate': 0.1}
[18:18:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8871681415929203, 'ROC_AUC': 0.8743750000000001, 'PR_AUC': 0.7054906629570888, 'Precision': 0.7146590494712532, 'TPR': 0.5849038461538462, 'FPR': 0.41509615384615384, 'inference_time [seconds]': 0.06959765358308775, 'train_time [seconds]': 76.5062141418457, 'noise': 0.15, 'drop_rate': 0.2}
[18:19:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8893805309734514, 'ROC_AUC': 0.8761538461538462, 'PR_AUC': 0.7210301914520565, 'Precision': 0.740530303030303, 'TPR': 0.5610576923076923, 'FPR': 0.4389423076923077, 'inference_time [seconds]': 0.06619807893196039, 'train_time [seconds]': 78.94085884094238, 'noise': 0.15, 'drop_rate': 0.2}
[18:20:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9004424778761062, 'ROC_AUC': 0.9278846153846154, 'PR_AUC': 0.8016041171108295, 'Precision': 0.8197559115179252, 'TPR': 0.6007692307692307, 'FPR': 0.3992307692307692, 'inference_time [seconds]': 0.04316853210989353, 'train_time [seconds]': 79.14859819412231, 'noise': 0.2, 'drop_rate': 0.2}
molec-biol-splice.csv
3
[18:21:41] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9341692789968652, 'ROC_AUC': 0.9859635314180769, 'PR_AUC': 0.9759472215391414, 'Precision': 0.9411531867247502, 'TPR': 0.9206349206349206, 'FPR': 0.03994490358126722, 'inference_time [seconds]': 0.05650595064073521, 'train_time [seconds]': 53.1513295173645, 'noise': 0.2, 'drop_rate': 0.1}
[18:22:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.774294670846395, 'ROC_AUC': 0.972146494460544, 'PR_AUC': 0.9492516195953592, 'Precision': 0.8080952380952381, 'TPR': 0.7183261183261184, 'FPR': 0.13695395513577333, 'inference_time [seconds]': 0.0568796474731828, 'train_time [seconds]': 58.409422397613525, 'noise': 0.1, 'drop_rate': 0.2}
[18:23:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8025078369905956, 'ROC_AUC': 0.981859921529343, 'PR_AUC': 0.9577322093795301, 'Precision': 0.8529650112374512, 'TPR': 0.7365079365079364, 'FPR': 0.1284927194018103, 'inference_time [seconds]': 0.056366935419064707, 'train_time [seconds]': 56.24251675605774, 'noise': 0.15, 'drop_rate': 0.2}
[18:24:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8934169278996865, 'ROC_AUC': 0.985548519432817, 'PR_AUC': 0.9681049951360743, 'Precision': 0.9015713276836159, 'TPR': 0.8712842712842713, 'FPR': 0.06257378984651711, 'inference_time [seconds]': 0.057466351500125516, 'train_time [seconds]': 58.773083448410034, 'noise': 0.2, 'drop_rate': 0.2}
[18:25:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8934169278996865, 'ROC_AUC': 0.9862247027536283, 'PR_AUC': 0.9747225759700063, 'Precision': 0.8926856062678558, 'TPR': 0.8782106782106783, 'FPR': 0.0602125147579693, 'inference_time [seconds]': 0.05645811744618191, 'train_time [seconds]': 55.79478096961975, 'noise': 0.15, 'drop_rate': 0.15}
[18:26:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8871473354231975, 'ROC_AUC': 0.9863022376307842, 'PR_AUC': 0.9719706827330059, 'Precision': 0.8989829231541938, 'TPR': 0.8643041063776638, 'FPR': 0.06876549211665077, 'inference_time [seconds]': 0.05693196502972546, 'train_time [seconds]': 58.74634408950806, 'noise': 0.15, 'drop_rate': 0.2}
[18:27:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9028213166144201, 'ROC_AUC': 0.9866390313620846, 'PR_AUC': 0.9711010128911232, 'Precision': 0.9170218670218669, 'TPR': 0.8764373968876188, 'FPR': 0.059520070314286994, 'inference_time [seconds]': 0.05629742780822945, 'train_time [seconds]': 56.07914686203003, 'noise': 0.15, 'drop_rate': 0.1}
[18:28:28] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.877742946708464, 'ROC_AUC': 0.9665695098142192, 'PR_AUC': 0.930141601087147, 'Precision': 0.8836723398367234, 'TPR': 0.8537519867576938, 'FPR': 0.07290339187744614, 'inference_time [seconds]': 0.0569409337537042, 'train_time [seconds]': 58.78188443183899, 'noise': 0.2, 'drop_rate': 0.15}
[18:29:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8808777429467085, 'ROC_AUC': 0.9793518843759214, 'PR_AUC': 0.9527641504498433, 'Precision': 0.8987728739153643, 'TPR': 0.848797102284737, 'FPR': 0.07475360990908624, 'inference_time [seconds]': 0.05666589288502278, 'train_time [seconds]': 55.38940501213074, 'noise': 0.2, 'drop_rate': 0.15}
[18:30:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8934169278996865, 'ROC_AUC': 0.9831249699508539, 'PR_AUC': 0.9650617204699264, 'Precision': 0.8939206406989443, 'TPR': 0.8822460038376335, 'FPR': 0.06043034157512272, 'inference_time [seconds]': 0.056914774975432875, 'train_time [seconds]': 58.7178258895874, 'noise': 0.2, 'drop_rate': 0.15}
plant-shape.csv
100
[18:31:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.4875, 'ROC_AUC': 0.956806583870711, 'PR_AUC': 0.6614947807666128, 'Precision': 0.7194285714285715, 'TPR': 0.485, 'FPR': 0.005179921980734018, 'inference_time [seconds]': 0.8411064743995667, 'train_time [seconds]': 56.14427208900452, 'noise': 0.1, 'drop_rate': 0.1}
[18:32:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5375, 'ROC_AUC': 0.9666105405620573, 'PR_AUC': 0.6937518336132468, 'Precision': 0.6875, 'TPR': 0.565, 'FPR': 0.004670408406973967, 'inference_time [seconds]': 0.8501395583152771, 'train_time [seconds]': 56.56267428398132, 'noise': 0.2, 'drop_rate': 0.2}
[18:33:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.475, 'ROC_AUC': 0.9723614759971341, 'PR_AUC': 0.6822788281992018, 'Precision': 0.668952380952381, 'TPR': 0.465, 'FPR': 0.00530132951198153, 'inference_time [seconds]': 0.8348181843757629, 'train_time [seconds]': 56.13752341270447, 'noise': 0.2, 'drop_rate': 0.1}
[18:34:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.525, 'ROC_AUC': 0.9736772549956213, 'PR_AUC': 0.657954916611053, 'Precision': 0.6941666666666667, 'TPR': 0.505, 'FPR': 0.004792612053180479, 'inference_time [seconds]': 0.842072069644928, 'train_time [seconds]': 56.217193365097046, 'noise': 0.1, 'drop_rate': 0.15}
[18:35:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.475, 'ROC_AUC': 0.9715581960035028, 'PR_AUC': 0.6301873085082784, 'Precision': 0.6941904761904761, 'TPR': 0.46, 'FPR': 0.005302921741899531, 'inference_time [seconds]': 0.8269891142845154, 'train_time [seconds]': 55.9358856678009, 'noise': 0.2, 'drop_rate': 0.15}
[18:36:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.4375, 'ROC_AUC': 0.9754502030093145, 'PR_AUC': 0.6584902164507581, 'Precision': 0.6511666666666668, 'TPR': 0.425, 'FPR': 0.005681076347424568, 'inference_time [seconds]': 0.8475989103317261, 'train_time [seconds]': 56.34092688560486, 'noise': 0.2, 'drop_rate': 0.15}
[18:37:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.51875, 'ROC_AUC': 0.9628455138922061, 'PR_AUC': 0.7056845407339997, 'Precision': 0.7270833333333334, 'TPR': 0.545, 'FPR': 0.004861077939654485, 'inference_time [seconds]': 0.8401438593864441, 'train_time [seconds]': 56.3061249256134, 'noise': 0.1, 'drop_rate': 0.1}
[18:38:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.44375, 'ROC_AUC': 0.9447004617466763, 'PR_AUC': 0.6218241607013283, 'Precision': 0.6739285714285712, 'TPR': 0.44, 'FPR': 0.005614202690868562, 'inference_time [seconds]': 0.8329808712005615, 'train_time [seconds]': 56.45681285858154, 'noise': 0.1, 'drop_rate': 0.1}
[18:39:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5375, 'ROC_AUC': 0.9767838945943794, 'PR_AUC': 0.7293708160720471, 'Precision': 0.7445238095238095, 'TPR': 0.555, 'FPR': 0.004670010349494467, 'inference_time [seconds]': 0.8270889520645142, 'train_time [seconds]': 56.48815584182739, 'noise': 0.2, 'drop_rate': 0.1}
[18:40:50] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.50625, 'ROC_AUC': 0.9611887986625268, 'PR_AUC': 0.6608097927639327, 'Precision': 0.6794285714285714, 'TPR': 0.525, 'FPR': 0.004990048563012499, 'inference_time [seconds]': 0.8434265851974487, 'train_time [seconds]': 56.33982706069946, 'noise': 0.1, 'drop_rate': 0.1}
wall-following.csv
4
[18:42:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.989010989010989, 'ROC_AUC': 0.9999222813776933, 'PR_AUC': 0.9998776735153401, 'Precision': 0.9930685989925724, 'TPR': 0.9783732331925103, 'FPR': 0.004532756354075372, 'inference_time [seconds]': 0.046268487587953225, 'train_time [seconds]': 94.42501306533813, 'noise': 0.1, 'drop_rate': 0.2}
[18:44:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9816849816849816, 'ROC_AUC': 0.9996339914651424, 'PR_AUC': 0.998614092952526, 'Precision': 0.9866010273972603, 'TPR': 0.9746942314713399, 'FPR': 0.007236385374884294, 'inference_time [seconds]': 0.04629337743961767, 'train_time [seconds]': 93.05112743377686, 'noise': 0.2, 'drop_rate': 0.1}
[18:45:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9725274725274725, 'ROC_AUC': 0.9990201154103289, 'PR_AUC': 0.9952937690142978, 'Precision': 0.9834244702665755, 'TPR': 0.9594175402910343, 'FPR': 0.01143459684487292, 'inference_time [seconds]': 0.049114227294921875, 'train_time [seconds]': 94.1856701374054, 'noise': 0.1, 'drop_rate': 0.15}
[18:47:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9871794871794872, 'ROC_AUC': 0.999818385411875, 'PR_AUC': 0.9997411801269531, 'Precision': 0.9921551023898081, 'TPR': 0.9862441169558183, 'FPR': 0.005357224377995892, 'inference_time [seconds]': 0.04640647343226841, 'train_time [seconds]': 94.39480113983154, 'noise': 0.2, 'drop_rate': 0.1}
[18:48:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9725274725274725, 'ROC_AUC': 0.996869094742221, 'PR_AUC': 0.992283398055117, 'Precision': 0.9807328344893762, 'TPR': 0.9671180554559271, 'FPR': 0.011062668513111053, 'inference_time [seconds]': 0.04645712646372589, 'train_time [seconds]': 93.703369140625, 'noise': 0.1, 'drop_rate': 0.1}
[18:50:24] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 1.0, 'ROC_AUC': 0.9999822526372582, 'PR_AUC': 0.9999716809175598, 'Precision': 1.0, 'TPR': 1.0, 'FPR': 0.0, 'inference_time [seconds]': 0.046531359354654946, 'train_time [seconds]': 93.41848421096802, 'noise': 0.2, 'drop_rate': 0.2}
[18:51:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.963302752293578, 'ROC_AUC': 0.9976849028111389, 'PR_AUC': 0.9928567156792778, 'Precision': 0.9779531984467607, 'TPR': 0.935013709986809, 'FPR': 0.015305417357656163, 'inference_time [seconds]': 0.04654280636288704, 'train_time [seconds]': 93.29664969444275, 'noise': 0.1, 'drop_rate': 0.1}
[18:53:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9834862385321101, 'ROC_AUC': 0.9987489935305779, 'PR_AUC': 0.9928275554362326, 'Precision': 0.9859233925294609, 'TPR': 0.9630346369316958, 'FPR': 0.006354466767036746, 'inference_time [seconds]': 0.06135363097584576, 'train_time [seconds]': 93.32356119155884, 'noise': 0.2, 'drop_rate': 0.15}
[18:55:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724770642201835, 'ROC_AUC': 0.9998093597944344, 'PR_AUC': 0.999710777155612, 'Precision': 0.9830827067669173, 'TPR': 0.9538037166085946, 'FPR': 0.011423650975889783, 'inference_time [seconds]': 0.04664386084320348, 'train_time [seconds]': 94.36199235916138, 'noise': 0.15, 'drop_rate': 0.1}
[18:56:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9871559633027523, 'ROC_AUC': 0.9976253086058285, 'PR_AUC': 0.993164958746646, 'Precision': 0.9919267859408705, 'TPR': 0.9733753035582304, 'FPR': 0.00529276693455798, 'inference_time [seconds]': 0.04650299702215632, 'train_time [seconds]': 94.19914317131042, 'noise': 0.2, 'drop_rate': 0.1}
chess-krvkp.csv
2
[18:57:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.95, 'ROC_AUC': 0.9979648546045164, 'PR_AUC': 0.9979983634641589, 'Precision': 0.9527873256686816, 'TPR': 0.9485343039411374, 'FPR': 0.05146569605886267, 'inference_time [seconds]': 0.04963502287864685, 'train_time [seconds]': 55.31221008300781, 'noise': 0.15, 'drop_rate': 0.15}
[18:58:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.978125, 'ROC_AUC': 0.9984736409533874, 'PR_AUC': 0.9985018649577213, 'Precision': 0.9782268170426065, 'TPR': 0.9779460686470196, 'FPR': 0.022053931352980314, 'inference_time [seconds]': 0.07374510169029236, 'train_time [seconds]': 58.35892343521118, 'noise': 0.1, 'drop_rate': 0.2}
[18:59:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.94375, 'ROC_AUC': 0.9977300301358067, 'PR_AUC': 0.9977695883706837, 'Precision': 0.9486068603680591, 'TPR': 0.9417243943485578, 'FPR': 0.058275605651442214, 'inference_time [seconds]': 0.06649792194366455, 'train_time [seconds]': 58.363181352615356, 'noise': 0.2, 'drop_rate': 0.1}
[19:00:33] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.953125, 'ROC_AUC': 0.9963602207350006, 'PR_AUC': 0.996471381175783, 'Precision': 0.9528611632270169, 'TPR': 0.953446049078314, 'FPR': 0.046553950921686044, 'inference_time [seconds]': 0.05025118589401245, 'train_time [seconds]': 58.03820061683655, 'noise': 0.15, 'drop_rate': 0.15}
[19:01:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.971875, 'ROC_AUC': 0.9995303510625807, 'PR_AUC': 0.9995411330479456, 'Precision': 0.971875, 'TPR': 0.9727799303354077, 'FPR': 0.027220069664592384, 'inference_time [seconds]': 0.04830285906791687, 'train_time [seconds]': 53.71369028091431, 'noise': 0.2, 'drop_rate': 0.1}
[19:02:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.965625, 'ROC_AUC': 0.9979648546045164, 'PR_AUC': 0.9980018692033077, 'Precision': 0.9656954887218046, 'TPR': 0.9654220969825056, 'FPR': 0.03457790301749442, 'inference_time [seconds]': 0.08160844445228577, 'train_time [seconds]': 58.68775200843811, 'noise': 0.2, 'drop_rate': 0.2}
[19:03:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9467084639498433, 'ROC_AUC': 0.996651433974157, 'PR_AUC': 0.9967454136189331, 'Precision': 0.9464004720692367, 'TPR': 0.9470335644500473, 'FPR': 0.05296643554995273, 'inference_time [seconds]': 0.050709912769473085, 'train_time [seconds]': 59.105799436569214, 'noise': 0.2, 'drop_rate': 0.2}
[19:04:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9059561128526645, 'ROC_AUC': 0.9888512448786637, 'PR_AUC': 0.9893485457902194, 'Precision': 0.9068809882017579, 'TPR': 0.9048613299716357, 'FPR': 0.09513867002836432, 'inference_time [seconds]': 0.050688238353191126, 'train_time [seconds]': 57.0612952709198, 'noise': 0.1, 'drop_rate': 0.2}
[19:05:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9498432601880877, 'ROC_AUC': 0.9991727072171446, 'PR_AUC': 0.9991999566713226, 'Precision': 0.9515513032522246, 'TPR': 0.9518003466750709, 'FPR': 0.04819965332492909, 'inference_time [seconds]': 0.04998793048918434, 'train_time [seconds]': 59.00002312660217, 'noise': 0.1, 'drop_rate': 0.2}
[19:06:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9435736677115988, 'ROC_AUC': 0.9956689503110482, 'PR_AUC': 0.9957767163362967, 'Precision': 0.9441571259376234, 'TPR': 0.9429679502323018, 'FPR': 0.05703204976769824, 'inference_time [seconds]': 0.05001707884211525, 'train_time [seconds]': 58.020102739334106, 'noise': 0.2, 'drop_rate': 0.2}
mushroom.csv
2
[19:08:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.992619926199262, 'ROC_AUC': 0.999951524552814, 'PR_AUC': 0.9999516365893506, 'Precision': 0.9927077650481906, 'TPR': 0.9925226622715595, 'FPR': 0.0074773377284405446, 'inference_time [seconds]': 0.03785371487137723, 'train_time [seconds]': 141.68395328521729, 'noise': 0.2, 'drop_rate': 0.1}
[19:11:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9618696186961869, 'ROC_AUC': 0.999636434146105, 'PR_AUC': 0.99964407256244, 'Precision': 0.9630950361142081, 'TPR': 0.9630950361142081, 'FPR': 0.03690496388579185, 'inference_time [seconds]': 0.061902319519868784, 'train_time [seconds]': 138.19258093833923, 'noise': 0.1, 'drop_rate': 0.2}
[19:13:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.993849938499385, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.994131455399061, 'TPR': 0.9936224489795918, 'FPR': 0.006377551020408163, 'inference_time [seconds]': 0.050495471461672624, 'train_time [seconds]': 138.6241295337677, 'noise': 0.2, 'drop_rate': 0.15}
[19:15:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.988929889298893, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9887780548628429, 'TPR': 0.989311163895487, 'FPR': 0.010688836104513063, 'inference_time [seconds]': 0.03718450060629757, 'train_time [seconds]': 138.14536356925964, 'noise': 0.1, 'drop_rate': 0.2}
[19:17:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9950738916256158, 'ROC_AUC': 0.9999817784256559, 'PR_AUC': 0.9999818091472309, 'Precision': 0.9949967211522115, 'TPR': 0.9951530612244899, 'FPR': 0.004846938775510204, 'inference_time [seconds]': 0.05454882025131451, 'train_time [seconds]': 135.15858697891235, 'noise': 0.15, 'drop_rate': 0.15}
[19:20:13] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9913793103448276, 'ROC_AUC': 1.0, 'PR_AUC': 1.0, 'Precision': 0.9918032786885246, 'TPR': 0.9910714285714286, 'FPR': 0.008928571428571428, 'inference_time [seconds]': 0.06591892007536489, 'train_time [seconds]': 139.01635932922363, 'noise': 0.15, 'drop_rate': 0.2}
[19:22:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9950738916256158, 'ROC_AUC': 0.999981775215508, 'PR_AUC': 0.9999817852314, 'Precision': 0.995168553665518, 'TPR': 0.9949760344083931, 'FPR': 0.00502396559160688, 'inference_time [seconds]': 0.08608026457537571, 'train_time [seconds]': 143.44960927963257, 'noise': 0.1, 'drop_rate': 0.1}
[19:24:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9876847290640394, 'ROC_AUC': 0.9998542017240646, 'PR_AUC': 0.9998548172088488, 'Precision': 0.9877664132436326, 'TPR': 0.9875767719046722, 'FPR': 0.012423228095327773, 'inference_time [seconds]': 0.06165704116445457, 'train_time [seconds]': 142.37337350845337, 'noise': 0.2, 'drop_rate': 0.15}
[19:27:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9926108374384236, 'ROC_AUC': 0.9999696253591801, 'PR_AUC': 0.9999696657308772, 'Precision': 0.9928256573947409, 'TPR': 0.9924184896513599, 'FPR': 0.007581510348640127, 'inference_time [seconds]': 0.03761229256691016, 'train_time [seconds]': 141.48376941680908, 'noise': 0.15, 'drop_rate': 0.15}
[19:29:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9802955665024631, 'ROC_AUC': 0.9995808299566857, 'PR_AUC': 0.9995847057914715, 'Precision': 0.98019639636357, 'TPR': 0.9803597572458707, 'FPR': 0.01964024275412943, 'inference_time [seconds]': 0.03740441035754575, 'train_time [seconds]': 136.80218172073364, 'noise': 0.2, 'drop_rate': 0.2}
plant-texture.csv
100
[19:30:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.73125, 'ROC_AUC': 0.9895283018867924, 'PR_AUC': 0.8455934881037435, 'Precision': 0.8631666666666667, 'TPR': 0.745, 'FPR': 0.0027151500676697716, 'inference_time [seconds]': 0.8219540119171143, 'train_time [seconds]': 51.6489200592041, 'noise': 0.2, 'drop_rate': 0.2}
[19:31:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.64375, 'ROC_AUC': 0.9857861635220126, 'PR_AUC': 0.8121729778052257, 'Precision': 0.7912619047619047, 'TPR': 0.66, 'FPR': 0.0035972454422418592, 'inference_time [seconds]': 0.8074834942817688, 'train_time [seconds]': 56.2667121887207, 'noise': 0.1, 'drop_rate': 0.2}
[19:32:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.65, 'ROC_AUC': 0.9859183186052065, 'PR_AUC': 0.821889995079152, 'Precision': 0.7756666666666666, 'TPR': 0.67, 'FPR': 0.003534352360480853, 'inference_time [seconds]': 0.8051678538322449, 'train_time [seconds]': 56.206984758377075, 'noise': 0.1, 'drop_rate': 0.2}
[19:33:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.68125, 'ROC_AUC': 0.9914680359843961, 'PR_AUC': 0.819255196192696, 'Precision': 0.8388888888888889, 'TPR': 0.695, 'FPR': 0.003219090836716822, 'inference_time [seconds]': 0.826437771320343, 'train_time [seconds]': 56.141359090805054, 'noise': 0.2, 'drop_rate': 0.2}
[19:34:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.55625, 'ROC_AUC': 0.9848632672557918, 'PR_AUC': 0.7627369932933606, 'Precision': 0.7571507936507936, 'TPR': 0.565, 'FPR': 0.0044837194490884484, 'inference_time [seconds]': 0.8059173822402954, 'train_time [seconds]': 55.84163689613342, 'noise': 0.2, 'drop_rate': 0.2}
[19:35:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.58125, 'ROC_AUC': 0.9896590637688082, 'PR_AUC': 0.825556844148338, 'Precision': 0.7905000000000001, 'TPR': 0.585, 'FPR': 0.004230952949605923, 'inference_time [seconds]': 0.8146867156028748, 'train_time [seconds]': 56.435402631759644, 'noise': 0.1, 'drop_rate': 0.2}
[19:36:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.61875, 'ROC_AUC': 0.9934605126980336, 'PR_AUC': 0.8638285746511554, 'Precision': 0.8107857142857143, 'TPR': 0.64, 'FPR': 0.003850409999203884, 'inference_time [seconds]': 0.8085072040557861, 'train_time [seconds]': 56.71189022064209, 'noise': 0.15, 'drop_rate': 0.15}
[19:37:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6875, 'ROC_AUC': 0.9932485470901998, 'PR_AUC': 0.8722806447938026, 'Precision': 0.8094285714285715, 'TPR': 0.675, 'FPR': 0.003153809410078815, 'inference_time [seconds]': 0.8075058460235596, 'train_time [seconds]': 56.63341164588928, 'noise': 0.2, 'drop_rate': 0.2}
[19:38:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.625, 'ROC_AUC': 0.9892359286680998, 'PR_AUC': 0.8158684754816334, 'Precision': 0.8025, 'TPR': 0.63, 'FPR': 0.0037879149749223784, 'inference_time [seconds]': 0.8094385266304016, 'train_time [seconds]': 56.87642431259155, 'noise': 0.2, 'drop_rate': 0.1}
[19:39:32] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6352201257861635, 'ROC_AUC': 0.984902442957349, 'PR_AUC': 0.7835883531008392, 'Precision': 0.7710238095238096, 'TPR': 0.62, 'FPR': 0.0036849955655889706, 'inference_time [seconds]': 0.812064176835354, 'train_time [seconds]': 56.35305571556091, 'noise': 0.15, 'drop_rate': 0.2}
waveform.csv
3
[19:41:01] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.87, 'ROC_AUC': 0.9637988311561622, 'PR_AUC': 0.9301097426087149, 'Precision': 0.87521864234193, 'TPR': 0.8691027926322045, 'FPR': 0.06520428162219206, 'inference_time [seconds]': 0.046349525451660156, 'train_time [seconds]': 85.60835790634155, 'noise': 0.1, 'drop_rate': 0.2}
[19:42:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.872, 'ROC_AUC': 0.9651999361481364, 'PR_AUC': 0.9321198085807136, 'Precision': 0.8724410734283397, 'TPR': 0.8715983363042187, 'FPR': 0.06404341926729985, 'inference_time [seconds]': 0.04611015319824219, 'train_time [seconds]': 88.37604022026062, 'noise': 0.2, 'drop_rate': 0.1}
[19:43:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.852, 'ROC_AUC': 0.9628747527957361, 'PR_AUC': 0.9283272410304896, 'Precision': 0.851642672572905, 'TPR': 0.8517528223410576, 'FPR': 0.07391828735112317, 'inference_time [seconds]': 0.04595375061035156, 'train_time [seconds]': 85.90418720245361, 'noise': 0.1, 'drop_rate': 0.1}
[19:45:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.834, 'ROC_AUC': 0.9624665164614156, 'PR_AUC': 0.9304194535390294, 'Precision': 0.8389022184925596, 'TPR': 0.8337781542237819, 'FPR': 0.08307778382628682, 'inference_time [seconds]': 0.045922279357910156, 'train_time [seconds]': 86.54723787307739, 'noise': 0.15, 'drop_rate': 0.1}
[19:46:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.868, 'ROC_AUC': 0.9768718880209294, 'PR_AUC': 0.9560412656498548, 'Precision': 0.8698034381206767, 'TPR': 0.8675436322045714, 'FPR': 0.06613018551641306, 'inference_time [seconds]': 0.04607057571411133, 'train_time [seconds]': 87.89933586120605, 'noise': 0.2, 'drop_rate': 0.15}
[19:48:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.85, 'ROC_AUC': 0.9636454075862702, 'PR_AUC': 0.9291341433717468, 'Precision': 0.8515124966112956, 'TPR': 0.8499490069316001, 'FPR': 0.07503477892699449, 'inference_time [seconds]': 0.04583740234375, 'train_time [seconds]': 87.37702989578247, 'noise': 0.2, 'drop_rate': 0.1}
[19:49:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.858, 'ROC_AUC': 0.9679669540856697, 'PR_AUC': 0.937646922035604, 'Precision': 0.8587890671860721, 'TPR': 0.857613203396336, 'FPR': 0.0710010020091485, 'inference_time [seconds]': 0.045932769775390625, 'train_time [seconds]': 88.08944129943848, 'noise': 0.1, 'drop_rate': 0.1}
[19:51:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/torch/nn/_reduction.py:42: UserWarning: size_average and reduce args will be deprecated, please use reduction='sum' instead.
  warnings.warn(warning.format(ret))
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/sklearn/model_selection/_split.py:666: UserWarning: The least populated class in y has only 5 members, which is less than n_splits=10.
  warnings.warn(("The least populated class in y has only %d"
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
/home/amirbial/.conda/envs/Pi_Scratch/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
{'Accuracy': 0.826, 'ROC_AUC': 0.9591283852375906, 'PR_AUC': 0.9209676616921464, 'Precision': 0.8290969822928416, 'TPR': 0.8257950575837508, 'FPR': 0.08698450148447301, 'inference_time [seconds]': 0.04598522186279297, 'train_time [seconds]': 82.38928437232971, 'noise': 0.2, 'drop_rate': 0.2}
[19:52:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.862, 'ROC_AUC': 0.9769228684478916, 'PR_AUC': 0.9559908391350899, 'Precision': 0.8643707155286177, 'TPR': 0.8615075687364845, 'FPR': 0.06907383771483952, 'inference_time [seconds]': 0.04588031768798828, 'train_time [seconds]': 82.92012906074524, 'noise': 0.2, 'drop_rate': 0.2}
[19:54:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.828, 'ROC_AUC': 0.9606935194525922, 'PR_AUC': 0.9244965871250036, 'Precision': 0.8295430130940975, 'TPR': 0.8275962015535695, 'FPR': 0.08603107623414846, 'inference_time [seconds]': 0.04852771759033203, 'train_time [seconds]': 85.13795042037964, 'noise': 0.1, 'drop_rate': 0.2}
hill-valley.csv
2
[19:54:30] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5573770491803278, 'ROC_AUC': 0.6187852727761354, 'PR_AUC': 0.6158281407787951, 'Precision': 0.5616161616161616, 'TPR': 0.5573770491803278, 'FPR': 0.4426229508196721, 'inference_time [seconds]': 0.0785471963100746, 'train_time [seconds]': 23.238227367401123, 'noise': 0.2, 'drop_rate': 0.15}
[19:54:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5081967213114754, 'ROC_AUC': 0.5154528352593388, 'PR_AUC': 0.5310342896426625, 'Precision': 0.5082321187584345, 'TPR': 0.5081967213114754, 'FPR': 0.4918032786885246, 'inference_time [seconds]': 0.07843775827376569, 'train_time [seconds]': 22.62326431274414, 'noise': 0.15, 'drop_rate': 0.15}
[19:55:17] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5454545454545454, 'ROC_AUC': 0.5760245901639345, 'PR_AUC': 0.5950287668449985, 'Precision': 0.5453673245614035, 'TPR': 0.5452185792349726, 'FPR': 0.4547814207650273, 'inference_time [seconds]': 0.08157462127937758, 'train_time [seconds]': 22.708829164505005, 'noise': 0.2, 'drop_rate': 0.1}
[19:55:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5289256198347108, 'ROC_AUC': 0.5591530054644809, 'PR_AUC': 0.5833196868661666, 'Precision': 0.5301003344481605, 'TPR': 0.5295081967213114, 'FPR': 0.47049180327868856, 'inference_time [seconds]': 0.07807321784910091, 'train_time [seconds]': 22.167075634002686, 'noise': 0.1, 'drop_rate': 0.15}
[19:56:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5785123966942148, 'ROC_AUC': 0.5797814207650274, 'PR_AUC': 0.5551325785562371, 'Precision': 0.5785519125683061, 'TPR': 0.5785519125683061, 'FPR': 0.421448087431694, 'inference_time [seconds]': 0.07857764062802654, 'train_time [seconds]': 22.124250650405884, 'noise': 0.1, 'drop_rate': 0.15}
[19:56:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5950413223140496, 'ROC_AUC': 0.6115437158469945, 'PR_AUC': 0.608443213265765, 'Precision': 0.5953749315818282, 'TPR': 0.5952185792349727, 'FPR': 0.4047814207650273, 'inference_time [seconds]': 0.08162585171786221, 'train_time [seconds]': 22.26122760772705, 'noise': 0.1, 'drop_rate': 0.15}
[19:56:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5537190082644629, 'ROC_AUC': 0.5304644808743169, 'PR_AUC': 0.53632720211166, 'Precision': 0.553639846743295, 'TPR': 0.5535519125683059, 'FPR': 0.44644808743169395, 'inference_time [seconds]': 0.07829981401932141, 'train_time [seconds]': 22.547565937042236, 'noise': 0.15, 'drop_rate': 0.1}
[19:57:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.5289256198347108, 'ROC_AUC': 0.5452185792349726, 'PR_AUC': 0.5573644994611273, 'Precision': 0.5291950113378685, 'TPR': 0.5281420765027323, 'FPR': 0.47185792349726774, 'inference_time [seconds]': 0.08047119645047779, 'train_time [seconds]': 22.628023386001587, 'noise': 0.2, 'drop_rate': 0.2}
[19:57:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6033057851239669, 'ROC_AUC': 0.5857923497267761, 'PR_AUC': 0.571358546795235, 'Precision': 0.6125678119349005, 'TPR': 0.6020491803278688, 'FPR': 0.3979508196721312, 'inference_time [seconds]': 0.08159826609713972, 'train_time [seconds]': 22.847527980804443, 'noise': 0.1, 'drop_rate': 0.1}
[19:57:58] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.4793388429752066, 'ROC_AUC': 0.5112021857923497, 'PR_AUC': 0.5194380804307934, 'Precision': 0.47889610389610393, 'TPR': 0.4804644808743169, 'FPR': 0.5195355191256831, 'inference_time [seconds]': 0.07836483726816729, 'train_time [seconds]': 21.12182068824768, 'noise': 0.1, 'drop_rate': 0.2}
musk-1.csv
2
[19:58:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.4583333333333333, 'ROC_AUC': 0.6754850088183422, 'PR_AUC': 0.7274973113480678, 'Precision': 0.44283121597096187, 'TPR': 0.4444444444444444, 'FPR': 0.5555555555555556, 'inference_time [seconds]': 0.13684233029683432, 'train_time [seconds]': 10.520078182220459, 'noise': 0.15, 'drop_rate': 0.2}
[19:58:20] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7708333333333334, 'ROC_AUC': 0.9541446208112876, 'PR_AUC': 0.9596629799154924, 'Precision': 0.7779720279720279, 'TPR': 0.7804232804232805, 'FPR': 0.21957671957671956, 'inference_time [seconds]': 0.13646483421325684, 'train_time [seconds]': 10.665315866470337, 'noise': 0.2, 'drop_rate': 0.2}
[19:58:31] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6458333333333334, 'ROC_AUC': 0.9417989417989419, 'PR_AUC': 0.9426440579080778, 'Precision': 0.7361111111111112, 'TPR': 0.6798941798941799, 'FPR': 0.3201058201058201, 'inference_time [seconds]': 0.13710558414459229, 'train_time [seconds]': 10.690439462661743, 'noise': 0.15, 'drop_rate': 0.1}
[19:58:42] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.9294532627865961, 'PR_AUC': 0.9301039646999415, 'Precision': 0.813953488372093, 'TPR': 0.6190476190476191, 'FPR': 0.38095238095238093, 'inference_time [seconds]': 0.1482019821802775, 'train_time [seconds]': 11.251166105270386, 'noise': 0.15, 'drop_rate': 0.1}
[19:58:53] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8125, 'ROC_AUC': 0.9382716049382716, 'PR_AUC': 0.9421997778533159, 'Precision': 0.8199300699300699, 'TPR': 0.8227513227513228, 'FPR': 0.17724867724867724, 'inference_time [seconds]': 0.13629595438639322, 'train_time [seconds]': 10.894364595413208, 'noise': 0.2, 'drop_rate': 0.15}
[19:59:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6041666666666666, 'ROC_AUC': 0.835978835978836, 'PR_AUC': 0.8616474410707216, 'Precision': 0.6277777777777778, 'TPR': 0.6216931216931216, 'FPR': 0.37830687830687826, 'inference_time [seconds]': 0.13694663842519125, 'train_time [seconds]': 10.760046243667603, 'noise': 0.2, 'drop_rate': 0.2}
[19:59:15] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7446808510638298, 'ROC_AUC': 0.9047619047619048, 'PR_AUC': 0.9115635571544103, 'Precision': 0.7720306513409961, 'TPR': 0.76007326007326, 'FPR': 0.23992673992673993, 'inference_time [seconds]': 0.13851612172228225, 'train_time [seconds]': 10.772946834564209, 'noise': 0.15, 'drop_rate': 0.2}
[19:59:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6808510638297872, 'ROC_AUC': 0.911111111111111, 'PR_AUC': 0.9217185176347881, 'Precision': 0.7097701149425287, 'TPR': 0.7027777777777777, 'FPR': 0.2972222222222222, 'inference_time [seconds]': 0.14572447918831033, 'train_time [seconds]': 10.64795470237732, 'noise': 0.2, 'drop_rate': 0.15}
[19:59:37] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6808510638297872, 'ROC_AUC': 0.9351851851851852, 'PR_AUC': 0.9406160322839471, 'Precision': 0.7521645021645023, 'TPR': 0.7157407407407407, 'FPR': 0.28425925925925927, 'inference_time [seconds]': 0.13918572283805686, 'train_time [seconds]': 10.514992237091064, 'noise': 0.2, 'drop_rate': 0.1}
[19:59:48] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7659574468085106, 'ROC_AUC': 0.8500000000000001, 'PR_AUC': 0.8663486934654123, 'Precision': 0.7644927536231885, 'TPR': 0.7703703703703704, 'FPR': 0.22962962962962963, 'inference_time [seconds]': 0.14949352183240525, 'train_time [seconds]': 11.357990264892578, 'noise': 0.2, 'drop_rate': 0.2}
semeion.csv
10
[20:00:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.88125, 'ROC_AUC': 0.9934741379310343, 'PR_AUC': 0.9618403811647477, 'Precision': 0.9017793011941618, 'TPR': 0.88125, 'FPR': 0.013214137395171879, 'inference_time [seconds]': 0.13355612754821777, 'train_time [seconds]': 34.167784452438354, 'noise': 0.2, 'drop_rate': 0.1}
[20:01:02] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.91875, 'ROC_AUC': 0.994618064741068, 'PR_AUC': 0.972385154059519, 'Precision': 0.9212833412717314, 'TPR': 0.9185049019607844, 'FPR': 0.008989463601532566, 'inference_time [seconds]': 0.1332119107246399, 'train_time [seconds]': 37.28652763366699, 'noise': 0.2, 'drop_rate': 0.15}
[20:01:38] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.90625, 'ROC_AUC': 0.9829792126434812, 'PR_AUC': 0.9334672778958598, 'Precision': 0.9069976269860172, 'TPR': 0.9065686274509804, 'FPR': 0.010426513142030382, 'inference_time [seconds]': 0.13392120599746704, 'train_time [seconds]': 34.00356364250183, 'noise': 0.2, 'drop_rate': 0.2}
[20:02:18] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9119496855345912, 'ROC_AUC': 0.9921901709401709, 'PR_AUC': 0.9567994640689788, 'Precision': 0.919796427342867, 'TPR': 0.9104166666666667, 'FPR': 0.009790209790209791, 'inference_time [seconds]': 0.1353077918478528, 'train_time [seconds]': 37.809171199798584, 'noise': 0.2, 'drop_rate': 0.1}
[20:02:54] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8742138364779874, 'ROC_AUC': 0.9918958818958818, 'PR_AUC': 0.9575707356278975, 'Precision': 0.8868902648778809, 'TPR': 0.8745833333333334, 'FPR': 0.013956876456876457, 'inference_time [seconds]': 0.13465701409105985, 'train_time [seconds]': 33.932989835739136, 'noise': 0.2, 'drop_rate': 0.15}
[20:03:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8553459119496856, 'ROC_AUC': 0.9911298886298887, 'PR_AUC': 0.9464657377240486, 'Precision': 0.8721638655462185, 'TPR': 0.8550000000000001, 'FPR': 0.016074203574203576, 'inference_time [seconds]': 0.13456104686425166, 'train_time [seconds]': 37.81529521942139, 'noise': 0.15, 'drop_rate': 0.15}
[20:04:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8679245283018868, 'ROC_AUC': 0.9864044289044289, 'PR_AUC': 0.9349366317138532, 'Precision': 0.8681757703081232, 'TPR': 0.8683333333333334, 'FPR': 0.014675602175602176, 'inference_time [seconds]': 0.13451606222668533, 'train_time [seconds]': 34.201337814331055, 'noise': 0.1, 'drop_rate': 0.2}
[20:04:50] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.9913684926184926, 'PR_AUC': 0.9623960335563986, 'Precision': 0.9236029411764706, 'TPR': 0.9054166666666668, 'FPR': 0.01048951048951049, 'inference_time [seconds]': 0.13507687070834562, 'train_time [seconds]': 37.45057034492493, 'noise': 0.15, 'drop_rate': 0.1}
[20:05:25] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8742138364779874, 'ROC_AUC': 0.9969661357161359, 'PR_AUC': 0.9814936344161321, 'Precision': 0.8920614035087719, 'TPR': 0.8716666666666667, 'FPR': 0.01398115773115773, 'inference_time [seconds]': 0.13528529952906962, 'train_time [seconds]': 33.79851794242859, 'noise': 0.15, 'drop_rate': 0.2}
[20:06:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8679245283018868, 'ROC_AUC': 0.987790404040404, 'PR_AUC': 0.9430044535163535, 'Precision': 0.8858970956803776, 'TPR': 0.8683333333333334, 'FPR': 0.014680458430458431, 'inference_time [seconds]': 0.13505437838956244, 'train_time [seconds]': 37.85001540184021, 'noise': 0.2, 'drop_rate': 0.15}
waveform-noise.csv
3
[20:07:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.86, 'ROC_AUC': 0.9648439518098231, 'PR_AUC': 0.928936438461068, 'Precision': 0.8607625208748804, 'TPR': 0.860334146339707, 'FPR': 0.06994563877610697, 'inference_time [seconds]': 0.04672050476074219, 'train_time [seconds]': 87.21008014678955, 'noise': 0.2, 'drop_rate': 0.1}
[20:08:59] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.822, 'ROC_AUC': 0.9560707936976623, 'PR_AUC': 0.9165392585577656, 'Precision': 0.8230313267907253, 'TPR': 0.8227049132517159, 'FPR': 0.08893528270149514, 'inference_time [seconds]': 0.046463966369628906, 'train_time [seconds]': 82.65281009674072, 'noise': 0.1, 'drop_rate': 0.15}
[20:10:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.842, 'ROC_AUC': 0.962072234225707, 'PR_AUC': 0.9287049541403124, 'Precision': 0.8418472333348511, 'TPR': 0.8424879003192256, 'FPR': 0.07898503394527624, 'inference_time [seconds]': 0.04682588577270508, 'train_time [seconds]': 86.32801675796509, 'noise': 0.15, 'drop_rate': 0.1}
[20:11:57] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.828, 'ROC_AUC': 0.9576077051255218, 'PR_AUC': 0.9208381883307194, 'Precision': 0.8300242651951, 'TPR': 0.8280248121768047, 'FPR': 0.08603107623414846, 'inference_time [seconds]': 0.046189308166503906, 'train_time [seconds]': 88.4498610496521, 'noise': 0.15, 'drop_rate': 0.2}
[20:13:22] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.812, 'ROC_AUC': 0.954300552045734, 'PR_AUC': 0.9142031357042747, 'Precision': 0.823909623909624, 'TPR': 0.8129029656369786, 'FPR': 0.09378664324415155, 'inference_time [seconds]': 0.046927452087402344, 'train_time [seconds]': 83.42261052131653, 'noise': 0.2, 'drop_rate': 0.15}
[20:14:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.81, 'ROC_AUC': 0.9545414638039746, 'PR_AUC': 0.9135473914463295, 'Precision': 0.8164401975784573, 'TPR': 0.8109922756981581, 'FPR': 0.0947685813357455, 'inference_time [seconds]': 0.046452999114990234, 'train_time [seconds]': 82.7215371131897, 'noise': 0.2, 'drop_rate': 0.15}
[20:16:11] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.826, 'ROC_AUC': 0.9590945450998128, 'PR_AUC': 0.9238052490243591, 'Precision': 0.8303191489361702, 'TPR': 0.8257872846108141, 'FPR': 0.08723051409618572, 'inference_time [seconds]': 0.046296119689941406, 'train_time [seconds]': 82.85952925682068, 'noise': 0.2, 'drop_rate': 0.2}
[20:17:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.858, 'ROC_AUC': 0.9638485030547551, 'PR_AUC': 0.9300212755687296, 'Precision': 0.859421959527149, 'TPR': 0.8584956285605033, 'FPR': 0.07094683789295647, 'inference_time [seconds]': 0.04628181457519531, 'train_time [seconds]': 87.20872950553894, 'noise': 0.15, 'drop_rate': 0.1}
[20:19:09] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.842, 'ROC_AUC': 0.9597719100908936, 'PR_AUC': 0.9237700960419849, 'Precision': 0.8427326730441838, 'TPR': 0.8422870611007776, 'FPR': 0.07902728159589195, 'inference_time [seconds]': 0.0463261604309082, 'train_time [seconds]': 87.43098998069763, 'noise': 0.2, 'drop_rate': 0.2}
[20:20:34] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.856, 'ROC_AUC': 0.9682096720998854, 'PR_AUC': 0.9382117455131329, 'Precision': 0.8597877961603992, 'TPR': 0.856558023379154, 'FPR': 0.07187258706197651, 'inference_time [seconds]': 0.04629373550415039, 'train_time [seconds]': 83.62086606025696, 'noise': 0.2, 'drop_rate': 0.15}
low-res-spect.csv
9
[20:20:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9074074074074074, 'ROC_AUC': 0.9964438232782048, 'PR_AUC': 0.9148148148148149, 'Precision': 0.8131868131868132, 'TPR': 0.7380952380952381, 'FPR': 0.015343915343915344, 'inference_time [seconds]': 0.2428293228149414, 'train_time [seconds]': 13.387125253677368, 'noise': 0.1, 'drop_rate': 0.15}
[20:21:03] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8301886792452831, 'ROC_AUC': 0.9408584008584008, 'PR_AUC': 0.6887582955764775, 'Precision': 0.844551282051282, 'TPR': 0.5974025974025974, 'FPR': 0.03181818181818182, 'inference_time [seconds]': 0.246740737051334, 'train_time [seconds]': 12.798297882080078, 'noise': 0.2, 'drop_rate': 0.15}
[20:21:16] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7924528301886793, 'ROC_AUC': 0.9797951912735966, 'PR_AUC': 0.9270389314536139, 'Precision': 0.8721340388007054, 'TPR': 0.4556878306878307, 'FPR': 0.04525017618040874, 'inference_time [seconds]': 0.2458590381550339, 'train_time [seconds]': 12.593474388122559, 'noise': 0.15, 'drop_rate': 0.15}
[20:21:29] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7735849056603774, 'ROC_AUC': 0.9865497164334375, 'PR_AUC': 0.9474820096110301, 'Precision': 0.8122895622895623, 'TPR': 0.4977513227513228, 'FPR': 0.06126928995699759, 'inference_time [seconds]': 0.247955322265625, 'train_time [seconds]': 12.829388856887817, 'noise': 0.2, 'drop_rate': 0.15}
[20:21:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8867924528301887, 'ROC_AUC': 0.987282703761109, 'PR_AUC': 0.8420043947762162, 'Precision': 0.8851851851851852, 'TPR': 0.5731481481481482, 'FPR': 0.027799902201895554, 'inference_time [seconds]': 0.24928686753758844, 'train_time [seconds]': 13.378321170806885, 'noise': 0.15, 'drop_rate': 0.15}
[20:21:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7169811320754716, 'ROC_AUC': 0.9537363540851914, 'PR_AUC': 0.8204402184325051, 'Precision': 0.8261503928170595, 'TPR': 0.45476190476190476, 'FPR': 0.05570953962980541, 'inference_time [seconds]': 0.26454565660008844, 'train_time [seconds]': 12.803595066070557, 'noise': 0.1, 'drop_rate': 0.15}
[20:22:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8113207547169812, 'ROC_AUC': 0.974441579092742, 'PR_AUC': 0.869948388560003, 'Precision': 0.8236394557823129, 'TPR': 0.6238095238095237, 'FPR': 0.04068605812791859, 'inference_time [seconds]': 0.2560840462738613, 'train_time [seconds]': 13.147398710250854, 'noise': 0.2, 'drop_rate': 0.15}
[20:22:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9056603773584906, 'ROC_AUC': 0.942927442927443, 'PR_AUC': 0.8546822033559219, 'Precision': 0.8984126984126984, 'TPR': 0.6698412698412699, 'FPR': 0.022477522477522476, 'inference_time [seconds]': 0.2554362674929061, 'train_time [seconds]': 12.298958778381348, 'noise': 0.1, 'drop_rate': 0.1}
[20:22:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7547169811320755, 'ROC_AUC': 0.9628882745161815, 'PR_AUC': 0.7530870415577746, 'Precision': 0.7933189655172413, 'TPR': 0.3685185185185185, 'FPR': 0.04061827816764192, 'inference_time [seconds]': 0.25544076595666276, 'train_time [seconds]': 12.524367094039917, 'noise': 0.15, 'drop_rate': 0.15}
[20:22:49] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7924528301886793, 'ROC_AUC': 0.9732835506645031, 'PR_AUC': 0.8219494983482489, 'Precision': 0.8392817059483727, 'TPR': 0.5093995510662177, 'FPR': 0.04119689833975548, 'inference_time [seconds]': 0.2502720311002911, 'train_time [seconds]': 12.882782697677612, 'noise': 0.1, 'drop_rate': 0.15}
ozone.csv
2
[20:23:35] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.9635627530364372, 'PR_AUC': 0.7049212913708522, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.054364129314272425, 'train_time [seconds]': 45.273964405059814, 'noise': 0.15, 'drop_rate': 0.2}
[20:24:23] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8623481781376517, 'PR_AUC': 0.7282323750728782, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.05170867199034203, 'train_time [seconds]': 47.14347743988037, 'noise': 0.2, 'drop_rate': 0.15}
[20:25:07] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8403701561596298, 'PR_AUC': 0.626639206499782, 'Precision': 0.9862204724409449, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.05068272117554672, 'train_time [seconds]': 43.422065019607544, 'noise': 0.1, 'drop_rate': 0.2}
[20:25:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9724409448818898, 'ROC_AUC': 0.8709349593495935, 'PR_AUC': 0.6798966241738691, 'Precision': 0.8213811420982735, 'TPR': 0.6229674796747968, 'FPR': 0.37703252032520324, 'inference_time [seconds]': 0.05161292909637211, 'train_time [seconds]': 45.425240993499756, 'noise': 0.15, 'drop_rate': 0.15}
[20:26:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.968503937007874, 'ROC_AUC': 0.883130081300813, 'PR_AUC': 0.6194407467111793, 'Precision': 0.984251968503937, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.05078597331610252, 'train_time [seconds]': 46.84195685386658, 'noise': 0.15, 'drop_rate': 0.1}
[20:27:27] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9645669291338582, 'ROC_AUC': 0.916158536585366, 'PR_AUC': 0.6110020711987963, 'Precision': 0.4841897233201581, 'TPR': 0.49796747967479676, 'FPR': 0.5020325203252033, 'inference_time [seconds]': 0.05164484339436208, 'train_time [seconds]': 46.89556932449341, 'noise': 0.15, 'drop_rate': 0.1}
[20:28:10] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8362369337979094, 'PR_AUC': 0.6113972165186777, 'Precision': 0.7380478087649402, 'TPR': 0.5693960511033682, 'FPR': 0.4306039488966318, 'inference_time [seconds]': 0.0504900815458637, 'train_time [seconds]': 42.68184232711792, 'noise': 0.15, 'drop_rate': 0.15}
[20:28:56] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8815331010452961, 'PR_AUC': 0.6772810064575171, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.06851754169690279, 'train_time [seconds]': 45.838284969329834, 'noise': 0.15, 'drop_rate': 0.2}
[20:29:39] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.9727061556329849, 'PR_AUC': 0.6830961314471691, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.0505984536272735, 'train_time [seconds]': 43.133465051651, 'noise': 0.15, 'drop_rate': 0.1}
[20:30:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9723320158102767, 'ROC_AUC': 0.8809523809523809, 'PR_AUC': 0.7239923113316789, 'Precision': 0.9861660079051384, 'TPR': 0.5, 'FPR': 0.5, 'inference_time [seconds]': 0.051702906491728165, 'train_time [seconds]': 46.838324308395386, 'noise': 0.15, 'drop_rate': 0.1}
spambase.csv
2
[20:31:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9197396963123644, 'ROC_AUC': 0.9778644294773327, 'PR_AUC': 0.9763553794753308, 'Precision': 0.9216888222420361, 'TPR': 0.9098133049745953, 'FPR': 0.09018669502540472, 'inference_time [seconds]': 0.04268313178271378, 'train_time [seconds]': 75.95107984542847, 'noise': 0.2, 'drop_rate': 0.1}
[20:33:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9043478260869565, 'ROC_AUC': 0.9821725037552376, 'PR_AUC': 0.9824059031221554, 'Precision': 0.8985841677096371, 'TPR': 0.9028381690252194, 'FPR': 0.09716183097478062, 'inference_time [seconds]': 0.043220623679783035, 'train_time [seconds]': 81.2646017074585, 'noise': 0.1, 'drop_rate': 0.2}
[20:34:21] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9456521739130435, 'ROC_AUC': 0.9874891295754606, 'PR_AUC': 0.9864262494198732, 'Precision': 0.9428202244974453, 'TPR': 0.9436516720689383, 'FPR': 0.056348327931061745, 'inference_time [seconds]': 0.042829306229301124, 'train_time [seconds]': 75.96139717102051, 'noise': 0.15, 'drop_rate': 0.15}
[20:35:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9326086956521739, 'ROC_AUC': 0.9913661656666468, 'PR_AUC': 0.9907974103572847, 'Precision': 0.9305323133317396, 'TPR': 0.9279490682983822, 'FPR': 0.07205093170161786, 'inference_time [seconds]': 0.04269558450450068, 'train_time [seconds]': 81.92019629478455, 'noise': 0.1, 'drop_rate': 0.2}
[20:37:04] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9260869565217391, 'ROC_AUC': 0.9765143864234935, 'PR_AUC': 0.9700187441121457, 'Precision': 0.9225727242123607, 'TPR': 0.9225727242123607, 'FPR': 0.07742727578763936, 'inference_time [seconds]': 0.10083810142848802, 'train_time [seconds]': 80.04994010925293, 'noise': 0.15, 'drop_rate': 0.2}
[20:38:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9347826086956522, 'ROC_AUC': 0.9856432800649517, 'PR_AUC': 0.9848747002077596, 'Precision': 0.9304176904176904, 'TPR': 0.9336224479692667, 'FPR': 0.06637755203073328, 'inference_time [seconds]': 0.042497075122335685, 'train_time [seconds]': 81.58649826049805, 'noise': 0.1, 'drop_rate': 0.1}
[20:39:46] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9391304347826087, 'ROC_AUC': 0.9829699598011842, 'PR_AUC': 0.9789249937935137, 'Precision': 0.9362363611160617, 'TPR': 0.9362363611160617, 'FPR': 0.0637636388839383, 'inference_time [seconds]': 0.042660858320153275, 'train_time [seconds]': 79.42788004875183, 'noise': 0.15, 'drop_rate': 0.15}
[20:41:05] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9478260869565217, 'ROC_AUC': 0.9886334382859067, 'PR_AUC': 0.9860959019810089, 'Precision': 0.947016430097223, 'TPR': 0.9434048198974236, 'FPR': 0.05659518010257629, 'inference_time [seconds]': 0.04267226094784944, 'train_time [seconds]': 79.09626936912537, 'noise': 0.15, 'drop_rate': 0.1}
[20:42:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.9521739130434783, 'ROC_AUC': 0.9835838333432345, 'PR_AUC': 0.9836850737277055, 'Precision': 0.953636381945983, 'TPR': 0.9460187330442187, 'FPR': 0.0539812669557813, 'inference_time [seconds]': 0.04246494044428286, 'train_time [seconds]': 80.50697302818298, 'noise': 0.2, 'drop_rate': 0.2}
[20:43:43] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.8978260869565218, 'ROC_AUC': 0.9749896037545298, 'PR_AUC': 0.973948615013295, 'Precision': 0.8961563307493541, 'TPR': 0.8886017544901879, 'FPR': 0.11139824550981207, 'inference_time [seconds]': 0.0424913738084876, 'train_time [seconds]': 75.72071123123169, 'noise': 0.15, 'drop_rate': 0.2}
wine-quality-white.csv
7
[20:45:06] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.673469387755102, 'ROC_AUC': 0.8770168625398472, 'PR_AUC': 0.6157661458706803, 'Precision': 0.8333170519517382, 'TPR': 0.44957939589285284, 'FPR': 0.08823984084744237, 'inference_time [seconds]': 0.06169737601766781, 'train_time [seconds]': 82.72353768348694, 'noise': 0.1, 'drop_rate': 0.2}
[20:46:36] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6714285714285714, 'ROC_AUC': 0.7351217678680513, 'PR_AUC': 0.455326764336212, 'Precision': 0.8245958426718754, 'TPR': 0.39154976436402705, 'FPR': 0.0909756333437347, 'inference_time [seconds]': 0.061709540230887275, 'train_time [seconds]': 88.52348351478577, 'noise': 0.15, 'drop_rate': 0.2}
[20:48:00] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7081632653061225, 'ROC_AUC': 0.8293330605623558, 'PR_AUC': 0.5908288278111762, 'Precision': 0.777185934576619, 'TPR': 0.46293342368080487, 'FPR': 0.07911729914362102, 'inference_time [seconds]': 0.0619854245867048, 'train_time [seconds]': 83.45090293884277, 'noise': 0.15, 'drop_rate': 0.15}
[20:49:26] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6775510204081633, 'ROC_AUC': 0.8509540727498554, 'PR_AUC': 0.47963478503814555, 'Precision': 0.818344671201814, 'TPR': 0.41797408876377456, 'FPR': 0.07517480037932676, 'inference_time [seconds]': 0.06665404962033641, 'train_time [seconds]': 85.03592705726624, 'noise': 0.2, 'drop_rate': 0.2}
[20:50:52] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6877551020408164, 'ROC_AUC': 0.858753589595697, 'PR_AUC': 0.452660108838753, 'Precision': 0.8714585492754506, 'TPR': 0.3910775767343052, 'FPR': 0.0727632601114031, 'inference_time [seconds]': 0.0629585616442622, 'train_time [seconds]': 84.86750841140747, 'noise': 0.1, 'drop_rate': 0.2}
[20:52:19] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6673469387755102, 'ROC_AUC': 0.7891397343847528, 'PR_AUC': 0.42925428489994244, 'Precision': 0.8649585990011521, 'TPR': 0.3428988157436433, 'FPR': 0.078520097923083, 'inference_time [seconds]': 0.06806655805938099, 'train_time [seconds]': 86.05354118347168, 'noise': 0.1, 'drop_rate': 0.1}
[20:53:47] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.7081632653061225, 'ROC_AUC': 0.8247555806502544, 'PR_AUC': 0.4684629815543015, 'Precision': 0.7023915448532355, 'TPR': 0.39816825894412106, 'FPR': 0.06913822442966087, 'inference_time [seconds]': 0.06265640258789062, 'train_time [seconds]': 87.14090418815613, 'noise': 0.1, 'drop_rate': 0.2}
[20:55:12] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6653061224489796, 'ROC_AUC': 0.7936059481780211, 'PR_AUC': 0.46647029465757234, 'Precision': 0.8404808620760666, 'TPR': 0.3421692292381948, 'FPR': 0.08020174655024621, 'inference_time [seconds]': 0.06302960064946389, 'train_time [seconds]': 83.56136536598206, 'noise': 0.15, 'drop_rate': 0.1}
[20:56:40] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6666666666666666, 'ROC_AUC': 0.8040558550512009, 'PR_AUC': 0.5190491174686481, 'Precision': 0.7603823061813038, 'TPR': 0.42970227388035614, 'FPR': 0.08939838712293185, 'inference_time [seconds]': 0.06192739755829419, 'train_time [seconds]': 86.70101857185364, 'noise': 0.15, 'drop_rate': 0.1}
[20:58:08] WARNING: ../src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
{'Accuracy': 0.6441717791411042, 'ROC_AUC': 0.8563175225531076, 'PR_AUC': 0.5615471399549379, 'Precision': 0.835654352876196, 'TPR': 0.40319577049029104, 'FPR': 0.09855014140134671, 'inference_time [seconds]': 0.06700342174444218, 'train_time [seconds]': 87.46008348464966, 'noise': 0.2, 'drop_rate': 0.2}
finish
